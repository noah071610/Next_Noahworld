{"version":3,"sources":["webpack:///./components/Portfolio/Section/PortfolioList.tsx"],"names":["options","scale","speed","max","Tilt","props","rest","tilt","useRef","useEffect","VanillaTilt","init","current","PortfolioCard","CardTitle","CardImg","PortfolioList","memo","slides","onClickPortfolio","useCallback","git","message","success","portfolios","map","v","i","push","src","name","faSearch","date","tags","tag"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAMA,OAAO,GAAG;AACdC,OAAK,EAAE,GADO;AAEdC,OAAK,EAAE,GAFO;AAGdC,KAAG,EAAE;AAHS,CAAhB;;AAMA,MAAMC,IAAI,GAAIC,KAAD,IAAgB;AAC3B,QAAM;AAAEL;AAAF,MAAuBK,KAA7B;AAAA,QAAoBC,IAApB,4BAA6BD,KAA7B;;AACA,QAAME,IAAI,GAAGC,oDAAM,CAAC,IAAD,CAAnB;AAEAC,yDAAS,CAAC,MAAM;AACdC,uDAAW,CAACC,IAAZ,CAAiBJ,IAAI,CAACK,OAAtB,EAAgCZ,OAAhC,EADc,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SAAO;AAAK,OAAG,EAAEO;AAAV,KAAoBD,IAApB,EAAP;AACD,CAVD;;AAYA,MAAMO,aAAa,GAAG,yEAAOT,IAAP;AAAA;AAAA,cAAH;AAAA;AAAA;AAAA,cAAnB;;AAmBA,MAAMU,SAAS,GAAG;AAAH;AAAA;AAAA;AAAA;AAAA,cAAf;;AAiCA,MAAMC,OAAO,GAAG;AAAH;AAAA;AAAA;AAAA;AAAA,cAAb;;AAWA,MAAMC,aAAiB,gBAAGC,kDAAI,CAAC,MAAM;AACnC,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMC,gBAAgB,GAAGC,yDAAW,CAAEC,GAAD,IAAiB;AACpD,QAAI,CAACA,GAAL,EAAU;AACRC,kDAAO,CAACC,OAAR,CAAgB,kBAAhB;AACD;AACF,GAJmC,EAIjC,EAJiC,CAApC;AAMA;AACEC,8DAAU,SAAV,IAAAA,0DAAU,WAAV,YAAAA,0DAAU,CAAEC,GAAZ,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KACdT,MAAM,CAACU,IAAP,CACE,2DAAC,aAAD;AAAe,SAAG,EAAED,CAApB;AAAuB,aAAO,EAAE3B;AAAhC,OACE;AAAG,aAAO,EAAE,MAAMmB,gBAAgB,CAACO,CAAC,CAACL,GAAH,CAAlC;AAA2C,UAAI,EAAEK,CAAC,CAACL,GAAnD;AAAwD,YAAM,EAAC;AAA/D,OACE,2DAAC,OAAD;AAAS,SAAG,EAAEK,CAAC,CAACG,GAAhB;AAAqB,SAAG,EAAC;AAAzB,MADF,EAEE,2DAAC,SAAD;AAAW,eAAS,EAAC;AAArB,OACE,uEACGH,CAAC,CAACI,IADL,OACW,2DAAC,8EAAD;AAAiB,eAAS,EAAC,kBAA3B;AAA8C,UAAI,EAAEC,0EAAQA;AAA5D,MADX,EAC4E,GAD5E,CADF,EAIE,sEACGL,CAAC,CAACM,IADL,EAEE,sEAFF,EAGGN,CAAC,CAACO,IAAF,CAAOR,GAAP,CAAW,CAACS,GAAD,EAAcP,CAAd,KAA4B;AACtC,aACE;AAAM,WAAG,EAAEA,CAAX;AAAc,iBAAS,EAAC;AAAxB,SACGO,GADH,CADF;AAKD,KANA,CAHH,CAJF,CAFF,CADF,CADF,CADF;AAyBD;AAED,SACE,wHACE,2DAAC,2DAAD;AAAU,UAAM,EAAEhB,MAAlB;AAA0B,YAAQ,EAAE,KAApC;AAA2C,YAAQ,EAAE;AAArD,IADF,CADF;AAKD,CAzC6B,CAA9B;AA2CeD,8HAAI,CAACD,aAAD,CAAnB,E","file":"31.js","sourcesContent":["import React, { FC, memo, useCallback, useEffect, useRef } from \"react\";\r\nimport { Carousel } from \"3d-react-carousal\";\r\nimport VanillaTilt from \"vanilla-tilt\";\r\nimport styled from \"@emotion/styled\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { message } from \"antd\";\r\nimport { portfolios } from \"../../../config\";\r\n\r\nconst options = {\r\n  scale: 1.1,\r\n  speed: 700,\r\n  max: 10,\r\n};\r\n\r\nconst Tilt = (props: any) => {\r\n  const { options, ...rest } = props;\r\n  const tilt = useRef(null);\r\n\r\n  useEffect(() => {\r\n    VanillaTilt.init(tilt.current!, options);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return <div ref={tilt} {...rest} />;\r\n};\r\n\r\nconst PortfolioCard = styled(Tilt)`\r\n  transform-style: preserve-3d;\r\n  position: relative;\r\n  &:hover {\r\n    .card_title {\r\n      transform: translate(-50%) translateZ(30px) scaleY(1);\r\n    }\r\n    \r\n  }\r\n  @media only screen and (max-width: 765px) {\r\n    &:hover {\r\n      .card_title {\r\n        transform: translate(-50%) translateZ(10px) scaleY(1);\r\n      }\r\n  }\r\n  @media only screen and (max-width: 605px) {\r\n    display:none;\r\n  }\r\n`;\r\nconst CardTitle = styled.div`\r\n  cursor: pointer;\r\n  color: black;\r\n  position: absolute;\r\n  bottom: 10%;\r\n  left: 50%;\r\n  transform: translate(-50%) translateZ(0) scaleY(0);\r\n  transition: all 0.3s;\r\n  background-color: white;\r\n  width: 80%;\r\n  box-shadow: 4px 8px 21px 1px rgba(0, 0, 0, 0.15);\r\n  padding: 1rem 0;\r\n  transition: all 0.3;\r\n  &:hover {\r\n    .portfolio_search {\r\n      color: rgba(0, 0, 0, 0.4);\r\n    }\r\n  }\r\n  h2 {\r\n    margin-bottom: 1rem 0;\r\n    color: black;\r\n  }\r\n  @media only screen and (max-width: 765px) {\r\n    width: 100%;\r\n    h2 {\r\n      font-size: 0.7rem;\r\n    }\r\n    p {\r\n      font-size: 0.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CardImg = styled.img`\r\n  width: 100%;\r\n  height: 380px;\r\n  border-radius: 10px;\r\n  padding: 0.1rem;\r\n  box-shadow: 4px 8px 21px 1px rgba(0, 0, 0, 0.15);\r\n  @media only screen and (max-width: 913px) {\r\n    height: 280px;\r\n  }\r\n`;\r\n\r\nconst PortfolioList: FC = memo(() => {\r\n  let slides = [];\r\n  const onClickPortfolio = useCallback((git: string) => {\r\n    if (!git) {\r\n      message.success(\"현재 보고계시는 페이지입니다.\");\r\n    }\r\n  }, []);\r\n\r\n  {\r\n    portfolios?.map((v, i) =>\r\n      slides.push(\r\n        <PortfolioCard key={i} options={options}>\r\n          <a onClick={() => onClickPortfolio(v.git)} href={v.git} target=\"_blank\">\r\n            <CardImg src={v.src} alt=\"portfolio\" />\r\n            <CardTitle className=\"card_title\">\r\n              <h2>\r\n                {v.name} <FontAwesomeIcon className=\"portfolio_search\" icon={faSearch} />{\" \"}\r\n              </h2>\r\n              <p>\r\n                {v.date}\r\n                <br />\r\n                {v.tags.map((tag: string, i: number) => {\r\n                  return (\r\n                    <span key={i} className=\"tag\">\r\n                      {tag}\r\n                    </span>\r\n                  );\r\n                })}\r\n              </p>\r\n            </CardTitle>\r\n          </a>\r\n        </PortfolioCard>\r\n      )\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Carousel slides={slides} autoplay={false} interval={1000} />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default memo(PortfolioList);\r\n"],"sourceRoot":""}