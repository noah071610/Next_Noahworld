{"version":3,"sources":["webpack://_N_E/../../../next-server/lib/amp.ts","webpack://_N_E/./node_modules/@babel/runtime/helpers/inherits.js","webpack://_N_E/../../../next-server/lib/head.tsx","webpack://_N_E/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://_N_E/../../../next-server/lib/head-manager-context.ts","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?90bd","webpack://_N_E/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://_N_E/../../../next-server/lib/side-effect.tsx","webpack://_N_E/./components/Blog/Articles/SearchedPosts.tsx","webpack://_N_E/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://_N_E/./node_modules/next/head.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://_N_E/../../../next-server/lib/amp-context.ts","webpack://_N_E/./pages/search/[keyword].tsx"],"names":["isInAmpMode","React","AmpStateContext","ampFirst","hybrid","hasQuery","setPrototypeOf","module","exports","subClass","superClass","TypeError","prototype","Object","create","constructor","value","writable","configurable","defaultHead","inAmpMode","head","charSet","name","content","onlyReactElement","child","list","fragmentChild","fragmentList","METATYPES","reduceComponents","headElements","headElementChildren","headElement","props","keys","tags","metaTypes","metaCategories","h","isUnique","hasKey","key","i","len","metatype","category","categories","unique","c","url","newProps","Head","ampState","useContext","headManager","HeadManagerContext","reduceComponentsToState","iter","Symbol","iterator","Array","from","window","__NEXT_P","push","arrayLikeToArray","arr","isArray","_getPrototypeOf","o","getPrototypeOf","__proto__","self","ReferenceError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_hasHeadManager","emitChange","this","Component","SearchList","SearchedPosts","memo","posts","onClickList","useRouter","useCallback","onClick","style","fontWeight","color","BLUE_COLOR","id","type","title","replace","slice","_typeof","assertThisInitialized","call","obj","defineProperty","enumerable","BlogSearchPage","useSelector","state","blog","searchedKeyword","searchPosts","router","query","keyword","className","duration","start","end","length","marginBottom","css","marginCSS","map","searchPost","noSearchPostCSS","alt","src","height"],"mappings":"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","file":"static/chunks/pages/search/[keyword]-b9c95577551675a54f57.js","sourcesContent":["import React from 'react'\nimport { AmpStateContext } from './amp-context'\n\nexport function isInAmpMode({\n  ampFirst = false,\n  hybrid = false,\n  hasQuery = false,\n} = {}): boolean {\n  return ampFirst || (hybrid && hasQuery)\n}\n\nexport function useAmp(): boolean {\n  // Don't assign the context value to a variable to save bytes\n  return isInAmpMode(React.useContext(AmpStateContext))\n}\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","import React, { useContext } from 'react'\nimport Effect from './side-effect'\nimport { AmpStateContext } from './amp-context'\nimport { HeadManagerContext } from './head-manager-context'\nimport { isInAmpMode } from './amp'\n\ntype WithInAmpMode = {\n  inAmpMode?: boolean\n}\n\nexport function defaultHead(inAmpMode = false): JSX.Element[] {\n  const head = [<meta charSet=\"utf-8\" />]\n  if (!inAmpMode) {\n    head.push(<meta name=\"viewport\" content=\"width=device-width\" />)\n  }\n  return head\n}\n\nfunction onlyReactElement(\n  list: Array<React.ReactElement<any>>,\n  child: React.ReactChild\n): Array<React.ReactElement<any>> {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list\n  }\n  // Adds support for React.Fragment\n  if (child.type === React.Fragment) {\n    return list.concat(\n      React.Children.toArray(child.props.children).reduce(\n        (\n          fragmentList: Array<React.ReactElement<any>>,\n          fragmentChild: React.ReactChild\n        ): Array<React.ReactElement<any>> => {\n          if (\n            typeof fragmentChild === 'string' ||\n            typeof fragmentChild === 'number'\n          ) {\n            return fragmentList\n          }\n          return fragmentList.concat(fragmentChild)\n        },\n        []\n      )\n    )\n  }\n  return list.concat(child)\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']\n\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set()\n  const tags = new Set()\n  const metaTypes = new Set()\n  const metaCategories: { [metatype: string]: Set<string> } = {}\n\n  return (h: React.ReactElement<any>) => {\n    let isUnique = true\n    let hasKey = false\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      hasKey = true\n      const key = h.key.slice(h.key.indexOf('$') + 1)\n      if (keys.has(key)) {\n        isUnique = false\n      } else {\n        keys.add(key)\n      }\n    }\n\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          isUnique = false\n        } else {\n          tags.add(h.type)\n        }\n        break\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i]\n          if (!h.props.hasOwnProperty(metatype)) continue\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              isUnique = false\n            } else {\n              metaTypes.add(metatype)\n            }\n          } else {\n            const category = h.props[metatype]\n            const categories = metaCategories[metatype] || new Set()\n            if ((metatype !== 'name' || !hasKey) && categories.has(category)) {\n              isUnique = false\n            } else {\n              categories.add(category)\n              metaCategories[metatype] = categories\n            }\n          }\n        }\n        break\n    }\n\n    return isUnique\n  }\n}\n\n/**\n *\n * @param headElements List of multiple <Head> instances\n */\nfunction reduceComponents(\n  headElements: Array<React.ReactElement<any>>,\n  props: WithInAmpMode\n) {\n  return headElements\n    .reduce(\n      (list: React.ReactChild[], headElement: React.ReactElement<any>) => {\n        const headElementChildren = React.Children.toArray(\n          headElement.props.children\n        )\n        return list.concat(headElementChildren)\n      },\n      []\n    )\n    .reduce(onlyReactElement, [])\n    .reverse()\n    .concat(defaultHead(props.inAmpMode))\n    .filter(unique())\n    .reverse()\n    .map((c: React.ReactElement<any>, i: number) => {\n      const key = c.key || i\n      if (\n        process.env.NODE_ENV !== 'development' &&\n        process.env.__NEXT_OPTIMIZE_FONTS &&\n        !props.inAmpMode\n      ) {\n        if (\n          c.type === 'link' &&\n          c.props['href'] &&\n          // TODO(prateekbh@): Replace this with const from `constants` when the tree shaking works.\n          [\n            'https://fonts.googleapis.com/css',\n            'https://use.typekit.net/',\n          ].some((url) => c.props['href'].startsWith(url))\n        ) {\n          const newProps = { ...(c.props || {}) }\n          newProps['data-href'] = newProps['href']\n          newProps['href'] = undefined\n\n          // Add this attribute to make it easy to identify optimized tags\n          newProps['data-optimized-fonts'] = true\n\n          return React.cloneElement(c, newProps)\n        }\n      }\n      return React.cloneElement(c, { key })\n    })\n}\n\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }: { children: React.ReactNode }) {\n  const ampState = useContext(AmpStateContext)\n  const headManager = useContext(HeadManagerContext)\n  return (\n    <Effect\n      reduceComponentsToState={reduceComponents}\n      headManager={headManager}\n      inAmpMode={isInAmpMode(ampState)}\n    >\n      {children}\n    </Effect>\n  )\n}\n\n// TODO: Remove in the next major release\nHead.rewind = () => {}\n\nexport default Head\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","import React from 'react'\n\nexport const HeadManagerContext: React.Context<{\n  updateHead?: (state: any) => void\n  mountedInstances?: any\n  updateScripts?: (state: any) => void\n  scripts?: any\n}> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  HeadManagerContext.displayName = 'HeadManagerContext'\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/search/[keyword]\",\n      function () {\n        return require(\"private-next-pages/search/[keyword].tsx\");\n      }\n    ]);\n  ","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","import React, { Component } from 'react'\n\nconst isServer = typeof window === 'undefined'\n\ntype State = JSX.Element[] | undefined\n\ntype SideEffectProps = {\n  reduceComponentsToState: <T>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  headManager: any\n  inAmpMode?: boolean\n}\n\nexport default class extends Component<SideEffectProps> {\n  private _hasHeadManager: boolean\n\n  emitChange = (): void => {\n    if (this._hasHeadManager) {\n      this.props.headManager.updateHead(\n        this.props.reduceComponentsToState(\n          [...this.props.headManager.mountedInstances],\n          this.props\n        )\n      )\n    }\n  }\n\n  constructor(props: any) {\n    super(props)\n    this._hasHeadManager =\n      this.props.headManager && this.props.headManager.mountedInstances\n\n    if (isServer && this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n      this.emitChange()\n    }\n  }\n  componentDidMount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n    }\n    this.emitChange()\n  }\n  componentDidUpdate() {\n    this.emitChange()\n  }\n  componentWillUnmount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.delete(this)\n    }\n    this.emitChange()\n  }\n\n  render() {\n    return null\n  }\n}\n","import { Divider } from \"antd\";\r\nimport { useRouter } from \"next/dist/client/router\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { SearchPostInter } from \"../../../@reducers/@reducerTypes\";\r\nimport { BLUE_COLOR } from \"../../../config\";\r\n\r\nconst SearchList = styled.li`\r\n  transition: all 0.3s;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  padding: 2rem 2rem;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\r\n  width: 100%;\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.06);\r\n  }\r\n`;\r\ninterface SearchedPostProps {\r\n  posts: SearchPostInter;\r\n}\r\n\r\nconst SearchedPosts: FC<SearchedPostProps> = memo(({ posts }) => {\r\n  const router = useRouter();\r\n  const onClickList = useCallback(() => {\r\n    () => router.push(`/${posts.category}/post/${posts.id}`);\r\n  }, []);\r\n  return (\r\n    <SearchList onClick={onClickList}>\r\n      <span style={{ fontWeight: \"bold\" }}>Post Number</span> :{\" \"}\r\n      <span style={{ color: BLUE_COLOR }}>{posts.id}</span> <Divider type=\"vertical\" />\r\n      <span style={{ fontWeight: \"bold\" }}>Title</span> : {posts.title} <Divider type=\"vertical\" />\r\n      <span style={{ fontWeight: \"bold\" }}>Category</span> : {posts.category}{\" \"}\r\n      <Divider type=\"vertical\" />\r\n      <span style={{ fontWeight: \"bold\" }}>Contents</span> :\r\n      {posts.content.replace(/(<([^>]+)>)/gi, \"\").slice(0, 50)}\r\n    </SearchList>\r\n  );\r\n});\r\n\r\nexport default memo(SearchedPosts);\r\n","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","module.exports = require('./dist/next-server/lib/head')\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import React from 'react'\n\nexport const AmpStateContext: React.Context<any> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  AmpStateContext.displayName = 'AmpStateContext'\n}\n","import React, { memo } from \"react\";\r\nimport CountUp from \"react-countup\";\r\nimport { Divider } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../@reducers\";\r\nimport Head from \"next/head\";\r\nimport wrapper from \"../../@store/configureStore\";\r\nimport axios from \"axios\";\r\nimport { LOAD_INFO_REQUEST } from \"../../@reducers/user\";\r\nimport { IStore } from \"../../types\";\r\nimport { END } from \"@redux-saga/core\";\r\nimport { useRouter } from \"next/dist/client/router\";\r\nimport { SEARCH_KEYWORD_REQUEST } from \"../../@reducers/blog\";\r\nimport { marginCSS, noSearchPostCSS } from \"../../styles/emotion\";\r\nimport SearchedPosts from \"../../components/Blog/Articles/SearchedPosts\";\r\n\r\nconst BlogSearchPage = memo(() => {\r\n  const { searchedKeyword, searchPosts } = useSelector((state: RootState) => state.blog);\r\n  const router = useRouter();\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Noah world | {router.query.keyword}</title>\r\n      </Head>\r\n      <h2 className=\"search_title\">\r\n        SEARCH POSTS <br className=\"br_search\" />\r\n        <span>\"{searchedKeyword && searchedKeyword}\"</span>\r\n        <span>\r\n          +&nbsp;\r\n          <CountUp duration={4} start={0} end={searchPosts?.length || 0} />\r\n          &nbsp;posts searched\r\n        </span>\r\n      </h2>\r\n      <Divider style={{ marginBottom: 0 }} />\r\n      <ul css={marginCSS(0, 0, 0, 0)}>\r\n        {searchPosts.length > 0 ? (\r\n          searchPosts.map((searchPost, i) => {\r\n            return <SearchedPosts key={i} posts={searchPost} />;\r\n          })\r\n        ) : (\r\n          <li css={noSearchPostCSS}>\r\n            <img\r\n              alt=\"noComment\"\r\n              src=\"https://icons.iconarchive.com/icons/iconsmind/outline/256/Inbox-Empty-icon.png\"\r\n            />\r\n            <h3>Couldn't find posts with your keyword.</h3>\r\n          </li>\r\n        )}\r\n      </ul>\r\n      <div style={{ height: \"22rem\" }} />\r\n    </>\r\n  );\r\n});\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : \"\";\r\n  axios.defaults.headers.Cookie = \"\";\r\n  let keyword = context.query.keyword;\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: SEARCH_KEYWORD_REQUEST,\r\n    data: { keyword },\r\n  });\r\n  context.store.dispatch(END);\r\n  await (context.store as IStore).sagaTask.toPromise();\r\n});\r\n\r\nexport default memo(BlogSearchPage);\r\n"],"sourceRoot":""}