webpackHotUpdate_N_E(17,{

/***/ "./components/Blog/Comments/CommentForm.tsx":
/*!**************************************************!*\
  !*** ./components/Blog/Comments/CommentForm.tsx ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var C_Users_Noah_Desktop_Project_Noahworld_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "./node_modules/@babel/runtime/helpers/esm/slicedToArray.js");
/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/styled/base */ "./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd */ "./node_modules/antd/es/index.js");
/* harmony import */ var antd_lib_input_TextArea__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! antd/lib/input/TextArea */ "./node_modules/antd/lib/input/TextArea.js");
/* harmony import */ var antd_lib_input_TextArea__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(antd_lib_input_TextArea__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _reducers_post__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../@reducers/post */ "./@reducers/post.ts");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../config */ "./config.js");
/* harmony import */ var _util_useInput__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../util/useInput */ "./util/useInput.ts");
/* harmony import */ var _Comments__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Comments */ "./components/Blog/Comments/Comments.tsx");
/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @emotion/react */ "./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");



var _jsxFileName = "C:\\Users\\Noah\\Desktop\\Project\\Noahworld\\client\\components\\Blog\\Comments\\CommentForm.tsx",
    _this = undefined,
    _s = $RefreshSig$();

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

/* eslint-disable jsx-a11y/anchor-has-content */

/* eslint-disable jsx-a11y/anchor-is-valid */












var LoginLink = /*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__["default"])(next_link__WEBPACK_IMPORTED_MODULE_6___default.a, false ? undefined : {
  target: "e1c590xf1",
  label: "LoginLink"
})("margin-top:1rem;padding:0.5rem 1rem;border-radius:5px;transition:all 0.3s;border:1px solid rgba(0, 0, 0, 0.2);font-weight:bold;&:hover{color:white;background-color:", _config__WEBPACK_IMPORTED_MODULE_8__["BLUE_COLOR"], ";}" + (false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENvbW1lbnRzXFxDb21tZW50Rm9ybS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZThCIiwiZmlsZSI6IkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENvbW1lbnRzXFxDb21tZW50Rm9ybS50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBqc3gtYTExeS9hbmNob3ItaGFzLWNvbnRlbnQgKi9cclxuLyogZXNsaW50LWRpc2FibGUganN4LWExMXkvYW5jaG9yLWlzLXZhbGlkICovXHJcbmltcG9ydCB7IG1lc3NhZ2UgfSBmcm9tIFwiYW50ZFwiO1xyXG5pbXBvcnQgVGV4dEFyZWEgZnJvbSBcImFudGQvbGliL2lucHV0L1RleHRBcmVhXCI7XHJcbmltcG9ydCBSZWFjdCwgeyBtZW1vLCB1c2VDYWxsYmFjaywgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyB1c2VEaXNwYXRjaCwgdXNlU2VsZWN0b3IgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcclxuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJAZW1vdGlvbi9zdHlsZWRcIjtcclxuaW1wb3J0IHsgUm9vdFN0YXRlIH0gZnJvbSBcIi4uLy4uLy4uL0ByZWR1Y2Vyc1wiO1xyXG5pbXBvcnQgeyBBRERfQ09NTUVOVF9SRVFVRVNUIH0gZnJvbSBcIi4uLy4uLy4uL0ByZWR1Y2Vycy9wb3N0XCI7XHJcbmltcG9ydCB7IEJMVUVfQ09MT1IgfSBmcm9tIFwiLi4vLi4vLi4vY29uZmlnXCI7XHJcbmltcG9ydCB1c2VJbnB1dCBmcm9tIFwiLi4vLi4vLi4vdXRpbC91c2VJbnB1dFwiO1xyXG5pbXBvcnQgQ29tbWVudHMgZnJvbSBcIi4vQ29tbWVudHNcIjtcclxuaW1wb3J0IHsgY3NzIH0gZnJvbSBcIkBlbW90aW9uL3JlYWN0XCI7XHJcblxyXG5jb25zdCBMb2dpbkxpbmsgPSBzdHlsZWQoTGluaylgXHJcbiAgbWFyZ2luLXRvcDogMXJlbTtcclxuICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtCTFVFX0NPTE9SfTtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBMb2dpblN1Z2dlc3RNb2RhbCA9IChsb2dpbk1vZGFsOiBib29sZWFuKSA9PiBjc3NgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbiAgJHtsb2dpbk1vZGFsXHJcbiAgICA/IFwidmlzaWJpbGl0eTppbml0aWFsOyBhbmltYXRpb246MC41cyBmYWRlSW47XCJcclxuICAgIDogXCJ2aXNpYmlsaXR5OiBoaWRkZW47IGFuaW1hdGlvbjpub25lO1wifVxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc2cHgpIHtcclxuICAgIGgyIHtcclxuICAgICAgZm9udC1zaXplOiAwLjlyZW07XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5jb25zdCBDb21tZW50Rm9ybVdyYXBwZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBhZGRpbmc6IDEuNXJlbSAwLjVyZW07XHJcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xyXG4gIC5jb21tZW50X2ljb25fd3JhcHBlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBoMyB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMC45cmVtO1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIG1hcmdpbi10b3A6IDAuOHJlbTtcclxuICAgIH1cclxuICB9XHJcbiAgJjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMDUpO1xyXG4gIH1cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NnB4KSB7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IE5vQ29tbWVudCA9IGNzc2BcclxuICB3aWR0aDogMTAwJTtcclxuICBwYWRkaW5nOiAxcmVtIDA7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wNyk7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5gO1xyXG5cclxuY29uc3QgQ29tbWVudEZvcm0gPSBtZW1vKCgpID0+IHtcclxuICBjb25zdCB7IHVzZXIgfSA9IHVzZVNlbGVjdG9yKChzdGF0ZTogUm9vdFN0YXRlKSA9PiBzdGF0ZS51c2VyKTtcclxuICBjb25zdCB7IHBvc3QgfSA9IHVzZVNlbGVjdG9yKChzdGF0ZTogUm9vdFN0YXRlKSA9PiBzdGF0ZS5wb3N0KTtcclxuICBjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XHJcbiAgY29uc3QgW2NvbnRlbnQsIG9uQ2hhbmdlQ29udGVudCwgc2V0Q29udGVudF0gPSB1c2VJbnB1dChcIlwiKTtcclxuICBjb25zdCBbbG9naW5Nb2RhbCwgc2V0TG9naW5Nb2RhbF0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgY29uc3Qgb25DbGlja0FkZENvbW1lbnQgPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICBpZiAoY29udGVudCA9PT0gXCJcIikge1xyXG4gICAgICBtZXNzYWdlLmVycm9yKFwiUGxlYXNlIHdyaXRlIGNvbnRlbnQuXCIpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAoIXVzZXIpIHtcclxuICAgICAgbWVzc2FnZS5lcnJvcihcIlBsZWFzZSBsb2dpbiBmaXJzdC5cIik7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGRpc3BhdGNoKHtcclxuICAgICAgdHlwZTogQUREX0NPTU1FTlRfUkVRVUVTVCxcclxuICAgICAgZGF0YTogeyBjb250ZW50LCBwb3N0SWQ6IHBvc3Q/LmlkLCB1c2VySWQ6IHVzZXIuaWQgfSxcclxuICAgIH0pO1xyXG4gICAgc2V0Q29udGVudChcIlwiKTtcclxuICB9LCBbY29udGVudCwgZGlzcGF0Y2gsIHBvc3Q/LmlkLCBzZXRDb250ZW50LCB1c2VyXSk7XHJcblxyXG4gIGNvbnN0IGhhbmRsZUltZ0Vycm9yID0gKGU6IFJlYWN0LlN5bnRoZXRpY0V2ZW50KSA9PiB7XHJcbiAgICAoZS50YXJnZXQgYXMgSFRNTEltYWdlRWxlbWVudCkuc3JjID0gYC9pbWFnZXMvYmxvZy9kZWZhdWx0LXVzZXIucG5nYDtcclxuICB9O1xyXG5cclxuICBjb25zdCBvbkNsaWNrTW9kYWwgPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICBpZiAoIXVzZXIpIHtcclxuICAgICAgc2V0TG9naW5Nb2RhbCh0cnVlKTtcclxuICAgIH1cclxuICB9LCBbdXNlcl0pO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIHNldENvbnRlbnQoXCJZb3UgY2FuIGNvbW1lbnQgd2hlbiB5b3UgYXJlIGxvZ2dlZCBpbiFcIik7XHJcbiAgICB9XHJcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzXHJcbiAgfSwgW10pO1xyXG5cclxuICBjb25zdCBjb21tZW50Q29tcG9uZW50ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgcmV0dXJuIHBvc3Q/LkNvbW1lbnRzPy5tYXAoKHYsIGkpID0+IHtcclxuICAgICAgcmV0dXJuIDxDb21tZW50cyBrZXk9e2l9IGNvbW1lbnQ9e3Z9IC8+O1xyXG4gICAgfSk7XHJcbiAgfSwgW3Bvc3Q/LkNvbW1lbnRzXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29tbWVudEZvcm1XcmFwcGVyIG9uQ2xpY2s9e29uQ2xpY2tNb2RhbH0gY2xhc3NOYW1lPVwiYmxvZ19wb3N0X2NvbW1lbnRcIiBpZD1cImNvbW1lbnRcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbW1lbnRfaWNvbl93cmFwcGVyXCI+XHJcbiAgICAgICAgICA8aW1nXHJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImNvbW1lbnRfaW1nXCJcclxuICAgICAgICAgICAgc3JjPXtcclxuICAgICAgICAgICAgICB1c2VyPy5pY29uXHJcbiAgICAgICAgICAgICAgICA/IHVzZXIuaWNvbi5yZXBsYWNlKC9cXC90aHVtYlxcLy8sIFwiL29yaWdpbmFsL1wiKVxyXG4gICAgICAgICAgICAgICAgOiBcIi9pbWFnZXMvYmxvZy9kZWZhdWx0LXVzZXIucG5nXCJcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBhbHQ9XCJwcm9maWxlXCJcclxuICAgICAgICAgICAgb25FcnJvcj17aGFuZGxlSW1nRXJyb3J9XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgICAgPGgzPnt1c2VyID8gdXNlci5uYW1lIDogXCJHdWVzdFwifTwvaDM+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBzdHlsZT17eyBtYXJnaW5MZWZ0OiBcIjEuNXJlbVwiLCB3aWR0aDogXCIxMDAlXCIgfX0+XHJcbiAgICAgICAgICA8VGV4dEFyZWEgdmFsdWU9e2NvbnRlbnR9IG9uQ2hhbmdlPXtvbkNoYW5nZUNvbnRlbnR9IGNsYXNzTmFtZT1cImNvbW1lbnRfdGV4dEFyZWFcIiAvPlxyXG4gICAgICAgICAgPGJ1dHRvblxyXG4gICAgICAgICAgICBzdHlsZT17eyBwYWRkaW5nOiBcIjAuNXJlbSAwXCIgfX1cclxuICAgICAgICAgICAgb25DbGljaz17b25DbGlja0FkZENvbW1lbnR9XHJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cInB1YmxpY19idG4gY29tbWVudF9idG5cIlxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICBDT01NRU5UXHJcbiAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNzcz17TG9naW5TdWdnZXN0TW9kYWwobG9naW5Nb2RhbCl9PlxyXG4gICAgICAgICAgPGgyPllvdSBjYW4gY29tbWVudCB3aGVuIHlvdSBhcmUgbG9nZ2VkIGluIPCfmKI8L2gyPlxyXG4gICAgICAgICAgPExvZ2luTGluayBocmVmPVwiL2xvZ2luXCI+XHJcbiAgICAgICAgICAgIDxhPkdPIFRPIExPR0lOIFBBR0U8L2E+XHJcbiAgICAgICAgICA8L0xvZ2luTGluaz5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9Db21tZW50Rm9ybVdyYXBwZXI+XHJcbiAgICAgIHtwb3N0Py5Db21tZW50cyA/IChcclxuICAgICAgICBjb21tZW50Q29tcG9uZW50KClcclxuICAgICAgKSA6IChcclxuICAgICAgICA8ZGl2IGNzcz17Tm9Db21tZW50fT5cclxuICAgICAgICAgIDxpbWdcclxuICAgICAgICAgICAgc3R5bGU9e3sgd2lkdGg6IFwiODBweFwiLCBvcGFjaXR5OiBcIjAuM1wiIH19XHJcbiAgICAgICAgICAgIGFsdD1cIm5vQ29tbWVudFwiXHJcbiAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vaWNvbnMuaWNvbmFyY2hpdmUuY29tL2ljb25zL2ljb25zbWluZC9vdXRsaW5lLzI1Ni9JbmJveC1FbXB0eS1pY29uLnBuZ1wiXHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgICAgPGgzPk5vIENvbW1lbnRzLi4uPC9oMz5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgKX1cclxuICAgIDwvPlxyXG4gICk7XHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbWVtbyhDb21tZW50Rm9ybSk7XHJcbiJdfQ== */"));

var LoginSuggestModal = function LoginSuggestModal(loginModal) {
  return (
    /*#__PURE__*/

    /*#__PURE__*/
    Object(_emotion_react__WEBPACK_IMPORTED_MODULE_11__["css"])("display:flex;position:absolute;width:100%;height:100%;top:0;left:0;flex-direction:column;justify-content:center;align-items:center;background-color:rgba(0, 0, 0, 0.3);", loginModal ? "visibility:initial; animation:0.5s fadeIn;" : "visibility: hidden; animation:none;", "@media only screen and (max-width: 576px){h2{font-size:0.9rem;}}" + (false ? undefined : ";label:LoginSuggestModal;"), false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENvbW1lbnRzXFxDb21tZW50Rm9ybS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEJzRCIsImZpbGUiOiJDOlxcVXNlcnNcXE5vYWhcXERlc2t0b3BcXFByb2plY3RcXE5vYWh3b3JsZFxcY2xpZW50XFxjb21wb25lbnRzXFxCbG9nXFxDb21tZW50c1xcQ29tbWVudEZvcm0udHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUganN4LWExMXkvYW5jaG9yLWhhcy1jb250ZW50ICovXHJcbi8qIGVzbGludC1kaXNhYmxlIGpzeC1hMTF5L2FuY2hvci1pcy12YWxpZCAqL1xyXG5pbXBvcnQgeyBtZXNzYWdlIH0gZnJvbSBcImFudGRcIjtcclxuaW1wb3J0IFRleHRBcmVhIGZyb20gXCJhbnRkL2xpYi9pbnB1dC9UZXh0QXJlYVwiO1xyXG5pbXBvcnQgUmVhY3QsIHsgbWVtbywgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgdXNlRGlzcGF0Y2gsIHVzZVNlbGVjdG9yIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XHJcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XHJcbmltcG9ydCB7IFJvb3RTdGF0ZSB9IGZyb20gXCIuLi8uLi8uLi9AcmVkdWNlcnNcIjtcclxuaW1wb3J0IHsgQUREX0NPTU1FTlRfUkVRVUVTVCB9IGZyb20gXCIuLi8uLi8uLi9AcmVkdWNlcnMvcG9zdFwiO1xyXG5pbXBvcnQgeyBCTFVFX0NPTE9SIH0gZnJvbSBcIi4uLy4uLy4uL2NvbmZpZ1wiO1xyXG5pbXBvcnQgdXNlSW5wdXQgZnJvbSBcIi4uLy4uLy4uL3V0aWwvdXNlSW5wdXRcIjtcclxuaW1wb3J0IENvbW1lbnRzIGZyb20gXCIuL0NvbW1lbnRzXCI7XHJcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9yZWFjdFwiO1xyXG5cclxuY29uc3QgTG9naW5MaW5rID0gc3R5bGVkKExpbmspYFxyXG4gIG1hcmdpbi10b3A6IDFyZW07XHJcbiAgcGFkZGluZzogMC41cmVtIDFyZW07XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICAmOmhvdmVyIHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7QkxVRV9DT0xPUn07XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgTG9naW5TdWdnZXN0TW9kYWwgPSAobG9naW5Nb2RhbDogYm9vbGVhbikgPT4gY3NzYFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG4gICR7bG9naW5Nb2RhbFxyXG4gICAgPyBcInZpc2liaWxpdHk6aW5pdGlhbDsgYW5pbWF0aW9uOjAuNXMgZmFkZUluO1wiXHJcbiAgICA6IFwidmlzaWJpbGl0eTogaGlkZGVuOyBhbmltYXRpb246bm9uZTtcIn1cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NnB4KSB7XHJcbiAgICBoMiB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMC45cmVtO1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuY29uc3QgQ29tbWVudEZvcm1XcmFwcGVyID0gc3R5bGVkLmRpdmBcclxuICBwYWRkaW5nOiAxLjVyZW0gMC41cmVtO1xyXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcclxuICAuY29tbWVudF9pY29uX3dyYXBwZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaDMge1xyXG4gICAgICBmb250LXNpemU6IDAuOXJlbTtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBtYXJnaW4tdG9wOiAwLjhyZW07XHJcbiAgICB9XHJcbiAgfVxyXG4gICY6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjA1KTtcclxuICB9XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzZweCkge1xyXG4gICAgcGFkZGluZy1yaWdodDogMDtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBOb0NvbW1lbnQgPSBjc3NgXHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogMXJlbSAwO1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMDcpO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuYDtcclxuXHJcbmNvbnN0IENvbW1lbnRGb3JtID0gbWVtbygoKSA9PiB7XHJcbiAgY29uc3QgeyB1c2VyIH0gPSB1c2VTZWxlY3Rvcigoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUudXNlcik7XHJcbiAgY29uc3QgeyBwb3N0IH0gPSB1c2VTZWxlY3Rvcigoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUucG9zdCk7XHJcbiAgY29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xyXG4gIGNvbnN0IFtjb250ZW50LCBvbkNoYW5nZUNvbnRlbnQsIHNldENvbnRlbnRdID0gdXNlSW5wdXQoXCJcIik7XHJcbiAgY29uc3QgW2xvZ2luTW9kYWwsIHNldExvZ2luTW9kYWxdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IG9uQ2xpY2tBZGRDb21tZW50ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgaWYgKGNvbnRlbnQgPT09IFwiXCIpIHtcclxuICAgICAgbWVzc2FnZS5lcnJvcihcIlBsZWFzZSB3cml0ZSBjb250ZW50LlwiKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIG1lc3NhZ2UuZXJyb3IoXCJQbGVhc2UgbG9naW4gZmlyc3QuXCIpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBkaXNwYXRjaCh7XHJcbiAgICAgIHR5cGU6IEFERF9DT01NRU5UX1JFUVVFU1QsXHJcbiAgICAgIGRhdGE6IHsgY29udGVudCwgcG9zdElkOiBwb3N0Py5pZCwgdXNlcklkOiB1c2VyLmlkIH0sXHJcbiAgICB9KTtcclxuICAgIHNldENvbnRlbnQoXCJcIik7XHJcbiAgfSwgW2NvbnRlbnQsIGRpc3BhdGNoLCBwb3N0Py5pZCwgc2V0Q29udGVudCwgdXNlcl0pO1xyXG5cclxuICBjb25zdCBoYW5kbGVJbWdFcnJvciA9IChlOiBSZWFjdC5TeW50aGV0aWNFdmVudCkgPT4ge1xyXG4gICAgKGUudGFyZ2V0IGFzIEhUTUxJbWFnZUVsZW1lbnQpLnNyYyA9IGAvaW1hZ2VzL2Jsb2cvZGVmYXVsdC11c2VyLnBuZ2A7XHJcbiAgfTtcclxuXHJcbiAgY29uc3Qgb25DbGlja01vZGFsID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIHNldExvZ2luTW9kYWwodHJ1ZSk7XHJcbiAgICB9XHJcbiAgfSwgW3VzZXJdKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmICghdXNlcikge1xyXG4gICAgICBzZXRDb250ZW50KFwiWW91IGNhbiBjb21tZW50IHdoZW4geW91IGFyZSBsb2dnZWQgaW4hXCIpO1xyXG4gICAgfVxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgY29uc3QgY29tbWVudENvbXBvbmVudCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgIHJldHVybiBwb3N0Py5Db21tZW50cz8ubWFwKCh2LCBpKSA9PiB7XHJcbiAgICAgIHJldHVybiA8Q29tbWVudHMga2V5PXtpfSBjb21tZW50PXt2fSAvPjtcclxuICAgIH0pO1xyXG4gIH0sIFtwb3N0Py5Db21tZW50c10pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbW1lbnRGb3JtV3JhcHBlciBvbkNsaWNrPXtvbkNsaWNrTW9kYWx9IGNsYXNzTmFtZT1cImJsb2dfcG9zdF9jb21tZW50XCIgaWQ9XCJjb21tZW50XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb21tZW50X2ljb25fd3JhcHBlclwiPlxyXG4gICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJjb21tZW50X2ltZ1wiXHJcbiAgICAgICAgICAgIHNyYz17XHJcbiAgICAgICAgICAgICAgdXNlcj8uaWNvblxyXG4gICAgICAgICAgICAgICAgPyB1c2VyLmljb24ucmVwbGFjZSgvXFwvdGh1bWJcXC8vLCBcIi9vcmlnaW5hbC9cIilcclxuICAgICAgICAgICAgICAgIDogXCIvaW1hZ2VzL2Jsb2cvZGVmYXVsdC11c2VyLnBuZ1wiXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYWx0PVwicHJvZmlsZVwiXHJcbiAgICAgICAgICAgIG9uRXJyb3I9e2hhbmRsZUltZ0Vycm9yfVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIDxoMz57dXNlciA/IHVzZXIubmFtZSA6IFwiR3Vlc3RcIn08L2gzPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luTGVmdDogXCIxLjVyZW1cIiwgd2lkdGg6IFwiMTAwJVwiIH19PlxyXG4gICAgICAgICAgPFRleHRBcmVhIHZhbHVlPXtjb250ZW50fSBvbkNoYW5nZT17b25DaGFuZ2VDb250ZW50fSBjbGFzc05hbWU9XCJjb21tZW50X3RleHRBcmVhXCIgLz5cclxuICAgICAgICAgIDxidXR0b25cclxuICAgICAgICAgICAgc3R5bGU9e3sgcGFkZGluZzogXCIwLjVyZW0gMFwiIH19XHJcbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tBZGRDb21tZW50fVxyXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJwdWJsaWNfYnRuIGNvbW1lbnRfYnRuXCJcclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgQ09NTUVOVFxyXG4gICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjc3M9e0xvZ2luU3VnZ2VzdE1vZGFsKGxvZ2luTW9kYWwpfT5cclxuICAgICAgICAgIDxoMj5Zb3UgY2FuIGNvbW1lbnQgd2hlbiB5b3UgYXJlIGxvZ2dlZCBpbiDwn5iiPC9oMj5cclxuICAgICAgICAgIDxMb2dpbkxpbmsgaHJlZj1cIi9sb2dpblwiPlxyXG4gICAgICAgICAgICA8YT5HTyBUTyBMT0dJTiBQQUdFPC9hPlxyXG4gICAgICAgICAgPC9Mb2dpbkxpbms+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvQ29tbWVudEZvcm1XcmFwcGVyPlxyXG4gICAgICB7cG9zdD8uQ29tbWVudHMgPyAoXHJcbiAgICAgICAgY29tbWVudENvbXBvbmVudCgpXHJcbiAgICAgICkgOiAoXHJcbiAgICAgICAgPGRpdiBjc3M9e05vQ29tbWVudH0+XHJcbiAgICAgICAgICA8aW1nXHJcbiAgICAgICAgICAgIHN0eWxlPXt7IHdpZHRoOiBcIjgwcHhcIiwgb3BhY2l0eTogXCIwLjNcIiB9fVxyXG4gICAgICAgICAgICBhbHQ9XCJub0NvbW1lbnRcIlxyXG4gICAgICAgICAgICBzcmM9XCJodHRwczovL2ljb25zLmljb25hcmNoaXZlLmNvbS9pY29ucy9pY29uc21pbmQvb3V0bGluZS8yNTYvSW5ib3gtRW1wdHktaWNvbi5wbmdcIlxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIDxoMz5ObyBDb21tZW50cy4uLjwvaDM+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICl9XHJcbiAgICA8Lz5cclxuICApO1xyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG1lbW8oQ29tbWVudEZvcm0pO1xyXG4iXX0= */", false ? undefined : ";label:LoginSuggestModal;")
  );
};

_c = LoginSuggestModal;

var CommentFormWrapper = Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__["default"])("div", false ? undefined : {
  target: "e1c590xf0",
  label: "CommentFormWrapper"
})(false ? undefined : {
  name: "hq209f",
  styles: "padding:1.5rem 0.5rem;border-top:1px solid rgba(0, 0, 0, 0.1);border-bottom:1px solid rgba(0, 0, 0, 0.1);display:flex;position:relative;transition:all 0.3s;.comment_icon_wrapper{display:flex;flex-direction:column;justify-content:flex-start;align-items:center;h3{font-size:0.9rem;text-align:center;margin-top:0.8rem;}}&:hover{background-color:rgba(0, 0, 0, 0.05);}@media only screen and (max-width: 576px){padding-right:0;}",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENvbW1lbnRzXFxDb21tZW50Rm9ybS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0RxQyIsImZpbGUiOiJDOlxcVXNlcnNcXE5vYWhcXERlc2t0b3BcXFByb2plY3RcXE5vYWh3b3JsZFxcY2xpZW50XFxjb21wb25lbnRzXFxCbG9nXFxDb21tZW50c1xcQ29tbWVudEZvcm0udHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUganN4LWExMXkvYW5jaG9yLWhhcy1jb250ZW50ICovXHJcbi8qIGVzbGludC1kaXNhYmxlIGpzeC1hMTF5L2FuY2hvci1pcy12YWxpZCAqL1xyXG5pbXBvcnQgeyBtZXNzYWdlIH0gZnJvbSBcImFudGRcIjtcclxuaW1wb3J0IFRleHRBcmVhIGZyb20gXCJhbnRkL2xpYi9pbnB1dC9UZXh0QXJlYVwiO1xyXG5pbXBvcnQgUmVhY3QsIHsgbWVtbywgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgdXNlRGlzcGF0Y2gsIHVzZVNlbGVjdG9yIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XHJcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XHJcbmltcG9ydCB7IFJvb3RTdGF0ZSB9IGZyb20gXCIuLi8uLi8uLi9AcmVkdWNlcnNcIjtcclxuaW1wb3J0IHsgQUREX0NPTU1FTlRfUkVRVUVTVCB9IGZyb20gXCIuLi8uLi8uLi9AcmVkdWNlcnMvcG9zdFwiO1xyXG5pbXBvcnQgeyBCTFVFX0NPTE9SIH0gZnJvbSBcIi4uLy4uLy4uL2NvbmZpZ1wiO1xyXG5pbXBvcnQgdXNlSW5wdXQgZnJvbSBcIi4uLy4uLy4uL3V0aWwvdXNlSW5wdXRcIjtcclxuaW1wb3J0IENvbW1lbnRzIGZyb20gXCIuL0NvbW1lbnRzXCI7XHJcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9yZWFjdFwiO1xyXG5cclxuY29uc3QgTG9naW5MaW5rID0gc3R5bGVkKExpbmspYFxyXG4gIG1hcmdpbi10b3A6IDFyZW07XHJcbiAgcGFkZGluZzogMC41cmVtIDFyZW07XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICAmOmhvdmVyIHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7QkxVRV9DT0xPUn07XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgTG9naW5TdWdnZXN0TW9kYWwgPSAobG9naW5Nb2RhbDogYm9vbGVhbikgPT4gY3NzYFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG4gICR7bG9naW5Nb2RhbFxyXG4gICAgPyBcInZpc2liaWxpdHk6aW5pdGlhbDsgYW5pbWF0aW9uOjAuNXMgZmFkZUluO1wiXHJcbiAgICA6IFwidmlzaWJpbGl0eTogaGlkZGVuOyBhbmltYXRpb246bm9uZTtcIn1cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NnB4KSB7XHJcbiAgICBoMiB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMC45cmVtO1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuY29uc3QgQ29tbWVudEZvcm1XcmFwcGVyID0gc3R5bGVkLmRpdmBcclxuICBwYWRkaW5nOiAxLjVyZW0gMC41cmVtO1xyXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcclxuICAuY29tbWVudF9pY29uX3dyYXBwZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaDMge1xyXG4gICAgICBmb250LXNpemU6IDAuOXJlbTtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBtYXJnaW4tdG9wOiAwLjhyZW07XHJcbiAgICB9XHJcbiAgfVxyXG4gICY6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjA1KTtcclxuICB9XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzZweCkge1xyXG4gICAgcGFkZGluZy1yaWdodDogMDtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBOb0NvbW1lbnQgPSBjc3NgXHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogMXJlbSAwO1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMDcpO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuYDtcclxuXHJcbmNvbnN0IENvbW1lbnRGb3JtID0gbWVtbygoKSA9PiB7XHJcbiAgY29uc3QgeyB1c2VyIH0gPSB1c2VTZWxlY3Rvcigoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUudXNlcik7XHJcbiAgY29uc3QgeyBwb3N0IH0gPSB1c2VTZWxlY3Rvcigoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUucG9zdCk7XHJcbiAgY29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xyXG4gIGNvbnN0IFtjb250ZW50LCBvbkNoYW5nZUNvbnRlbnQsIHNldENvbnRlbnRdID0gdXNlSW5wdXQoXCJcIik7XHJcbiAgY29uc3QgW2xvZ2luTW9kYWwsIHNldExvZ2luTW9kYWxdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IG9uQ2xpY2tBZGRDb21tZW50ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgaWYgKGNvbnRlbnQgPT09IFwiXCIpIHtcclxuICAgICAgbWVzc2FnZS5lcnJvcihcIlBsZWFzZSB3cml0ZSBjb250ZW50LlwiKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIG1lc3NhZ2UuZXJyb3IoXCJQbGVhc2UgbG9naW4gZmlyc3QuXCIpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBkaXNwYXRjaCh7XHJcbiAgICAgIHR5cGU6IEFERF9DT01NRU5UX1JFUVVFU1QsXHJcbiAgICAgIGRhdGE6IHsgY29udGVudCwgcG9zdElkOiBwb3N0Py5pZCwgdXNlcklkOiB1c2VyLmlkIH0sXHJcbiAgICB9KTtcclxuICAgIHNldENvbnRlbnQoXCJcIik7XHJcbiAgfSwgW2NvbnRlbnQsIGRpc3BhdGNoLCBwb3N0Py5pZCwgc2V0Q29udGVudCwgdXNlcl0pO1xyXG5cclxuICBjb25zdCBoYW5kbGVJbWdFcnJvciA9IChlOiBSZWFjdC5TeW50aGV0aWNFdmVudCkgPT4ge1xyXG4gICAgKGUudGFyZ2V0IGFzIEhUTUxJbWFnZUVsZW1lbnQpLnNyYyA9IGAvaW1hZ2VzL2Jsb2cvZGVmYXVsdC11c2VyLnBuZ2A7XHJcbiAgfTtcclxuXHJcbiAgY29uc3Qgb25DbGlja01vZGFsID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIHNldExvZ2luTW9kYWwodHJ1ZSk7XHJcbiAgICB9XHJcbiAgfSwgW3VzZXJdKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmICghdXNlcikge1xyXG4gICAgICBzZXRDb250ZW50KFwiWW91IGNhbiBjb21tZW50IHdoZW4geW91IGFyZSBsb2dnZWQgaW4hXCIpO1xyXG4gICAgfVxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgY29uc3QgY29tbWVudENvbXBvbmVudCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgIHJldHVybiBwb3N0Py5Db21tZW50cz8ubWFwKCh2LCBpKSA9PiB7XHJcbiAgICAgIHJldHVybiA8Q29tbWVudHMga2V5PXtpfSBjb21tZW50PXt2fSAvPjtcclxuICAgIH0pO1xyXG4gIH0sIFtwb3N0Py5Db21tZW50c10pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbW1lbnRGb3JtV3JhcHBlciBvbkNsaWNrPXtvbkNsaWNrTW9kYWx9IGNsYXNzTmFtZT1cImJsb2dfcG9zdF9jb21tZW50XCIgaWQ9XCJjb21tZW50XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb21tZW50X2ljb25fd3JhcHBlclwiPlxyXG4gICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJjb21tZW50X2ltZ1wiXHJcbiAgICAgICAgICAgIHNyYz17XHJcbiAgICAgICAgICAgICAgdXNlcj8uaWNvblxyXG4gICAgICAgICAgICAgICAgPyB1c2VyLmljb24ucmVwbGFjZSgvXFwvdGh1bWJcXC8vLCBcIi9vcmlnaW5hbC9cIilcclxuICAgICAgICAgICAgICAgIDogXCIvaW1hZ2VzL2Jsb2cvZGVmYXVsdC11c2VyLnBuZ1wiXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYWx0PVwicHJvZmlsZVwiXHJcbiAgICAgICAgICAgIG9uRXJyb3I9e2hhbmRsZUltZ0Vycm9yfVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIDxoMz57dXNlciA/IHVzZXIubmFtZSA6IFwiR3Vlc3RcIn08L2gzPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luTGVmdDogXCIxLjVyZW1cIiwgd2lkdGg6IFwiMTAwJVwiIH19PlxyXG4gICAgICAgICAgPFRleHRBcmVhIHZhbHVlPXtjb250ZW50fSBvbkNoYW5nZT17b25DaGFuZ2VDb250ZW50fSBjbGFzc05hbWU9XCJjb21tZW50X3RleHRBcmVhXCIgLz5cclxuICAgICAgICAgIDxidXR0b25cclxuICAgICAgICAgICAgc3R5bGU9e3sgcGFkZGluZzogXCIwLjVyZW0gMFwiIH19XHJcbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tBZGRDb21tZW50fVxyXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJwdWJsaWNfYnRuIGNvbW1lbnRfYnRuXCJcclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgQ09NTUVOVFxyXG4gICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjc3M9e0xvZ2luU3VnZ2VzdE1vZGFsKGxvZ2luTW9kYWwpfT5cclxuICAgICAgICAgIDxoMj5Zb3UgY2FuIGNvbW1lbnQgd2hlbiB5b3UgYXJlIGxvZ2dlZCBpbiDwn5iiPC9oMj5cclxuICAgICAgICAgIDxMb2dpbkxpbmsgaHJlZj1cIi9sb2dpblwiPlxyXG4gICAgICAgICAgICA8YT5HTyBUTyBMT0dJTiBQQUdFPC9hPlxyXG4gICAgICAgICAgPC9Mb2dpbkxpbms+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvQ29tbWVudEZvcm1XcmFwcGVyPlxyXG4gICAgICB7cG9zdD8uQ29tbWVudHMgPyAoXHJcbiAgICAgICAgY29tbWVudENvbXBvbmVudCgpXHJcbiAgICAgICkgOiAoXHJcbiAgICAgICAgPGRpdiBjc3M9e05vQ29tbWVudH0+XHJcbiAgICAgICAgICA8aW1nXHJcbiAgICAgICAgICAgIHN0eWxlPXt7IHdpZHRoOiBcIjgwcHhcIiwgb3BhY2l0eTogXCIwLjNcIiB9fVxyXG4gICAgICAgICAgICBhbHQ9XCJub0NvbW1lbnRcIlxyXG4gICAgICAgICAgICBzcmM9XCJodHRwczovL2ljb25zLmljb25hcmNoaXZlLmNvbS9pY29ucy9pY29uc21pbmQvb3V0bGluZS8yNTYvSW5ib3gtRW1wdHktaWNvbi5wbmdcIlxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIDxoMz5ObyBDb21tZW50cy4uLjwvaDM+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICl9XHJcbiAgICA8Lz5cclxuICApO1xyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG1lbW8oQ29tbWVudEZvcm0pO1xyXG4iXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var NoComment = false ? undefined : {
  name: "1w7o2yo-NoComment",
  styles: "width:100%;padding:1rem 0;border-bottom:1px solid rgba(0, 0, 0, 0.07);position:relative;display:flex;flex-direction:column;align-items:center;label:NoComment;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENvbW1lbnRzXFxDb21tZW50Rm9ybS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMEVxQiIsImZpbGUiOiJDOlxcVXNlcnNcXE5vYWhcXERlc2t0b3BcXFByb2plY3RcXE5vYWh3b3JsZFxcY2xpZW50XFxjb21wb25lbnRzXFxCbG9nXFxDb21tZW50c1xcQ29tbWVudEZvcm0udHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUganN4LWExMXkvYW5jaG9yLWhhcy1jb250ZW50ICovXHJcbi8qIGVzbGludC1kaXNhYmxlIGpzeC1hMTF5L2FuY2hvci1pcy12YWxpZCAqL1xyXG5pbXBvcnQgeyBtZXNzYWdlIH0gZnJvbSBcImFudGRcIjtcclxuaW1wb3J0IFRleHRBcmVhIGZyb20gXCJhbnRkL2xpYi9pbnB1dC9UZXh0QXJlYVwiO1xyXG5pbXBvcnQgUmVhY3QsIHsgbWVtbywgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgdXNlRGlzcGF0Y2gsIHVzZVNlbGVjdG9yIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XHJcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XHJcbmltcG9ydCB7IFJvb3RTdGF0ZSB9IGZyb20gXCIuLi8uLi8uLi9AcmVkdWNlcnNcIjtcclxuaW1wb3J0IHsgQUREX0NPTU1FTlRfUkVRVUVTVCB9IGZyb20gXCIuLi8uLi8uLi9AcmVkdWNlcnMvcG9zdFwiO1xyXG5pbXBvcnQgeyBCTFVFX0NPTE9SIH0gZnJvbSBcIi4uLy4uLy4uL2NvbmZpZ1wiO1xyXG5pbXBvcnQgdXNlSW5wdXQgZnJvbSBcIi4uLy4uLy4uL3V0aWwvdXNlSW5wdXRcIjtcclxuaW1wb3J0IENvbW1lbnRzIGZyb20gXCIuL0NvbW1lbnRzXCI7XHJcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9yZWFjdFwiO1xyXG5cclxuY29uc3QgTG9naW5MaW5rID0gc3R5bGVkKExpbmspYFxyXG4gIG1hcmdpbi10b3A6IDFyZW07XHJcbiAgcGFkZGluZzogMC41cmVtIDFyZW07XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICAmOmhvdmVyIHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7QkxVRV9DT0xPUn07XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgTG9naW5TdWdnZXN0TW9kYWwgPSAobG9naW5Nb2RhbDogYm9vbGVhbikgPT4gY3NzYFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG4gICR7bG9naW5Nb2RhbFxyXG4gICAgPyBcInZpc2liaWxpdHk6aW5pdGlhbDsgYW5pbWF0aW9uOjAuNXMgZmFkZUluO1wiXHJcbiAgICA6IFwidmlzaWJpbGl0eTogaGlkZGVuOyBhbmltYXRpb246bm9uZTtcIn1cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NnB4KSB7XHJcbiAgICBoMiB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMC45cmVtO1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuY29uc3QgQ29tbWVudEZvcm1XcmFwcGVyID0gc3R5bGVkLmRpdmBcclxuICBwYWRkaW5nOiAxLjVyZW0gMC41cmVtO1xyXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcclxuICAuY29tbWVudF9pY29uX3dyYXBwZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaDMge1xyXG4gICAgICBmb250LXNpemU6IDAuOXJlbTtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBtYXJnaW4tdG9wOiAwLjhyZW07XHJcbiAgICB9XHJcbiAgfVxyXG4gICY6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjA1KTtcclxuICB9XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzZweCkge1xyXG4gICAgcGFkZGluZy1yaWdodDogMDtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBOb0NvbW1lbnQgPSBjc3NgXHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogMXJlbSAwO1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMDcpO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuYDtcclxuXHJcbmNvbnN0IENvbW1lbnRGb3JtID0gbWVtbygoKSA9PiB7XHJcbiAgY29uc3QgeyB1c2VyIH0gPSB1c2VTZWxlY3Rvcigoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUudXNlcik7XHJcbiAgY29uc3QgeyBwb3N0IH0gPSB1c2VTZWxlY3Rvcigoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUucG9zdCk7XHJcbiAgY29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xyXG4gIGNvbnN0IFtjb250ZW50LCBvbkNoYW5nZUNvbnRlbnQsIHNldENvbnRlbnRdID0gdXNlSW5wdXQoXCJcIik7XHJcbiAgY29uc3QgW2xvZ2luTW9kYWwsIHNldExvZ2luTW9kYWxdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IG9uQ2xpY2tBZGRDb21tZW50ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgaWYgKGNvbnRlbnQgPT09IFwiXCIpIHtcclxuICAgICAgbWVzc2FnZS5lcnJvcihcIlBsZWFzZSB3cml0ZSBjb250ZW50LlwiKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIG1lc3NhZ2UuZXJyb3IoXCJQbGVhc2UgbG9naW4gZmlyc3QuXCIpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBkaXNwYXRjaCh7XHJcbiAgICAgIHR5cGU6IEFERF9DT01NRU5UX1JFUVVFU1QsXHJcbiAgICAgIGRhdGE6IHsgY29udGVudCwgcG9zdElkOiBwb3N0Py5pZCwgdXNlcklkOiB1c2VyLmlkIH0sXHJcbiAgICB9KTtcclxuICAgIHNldENvbnRlbnQoXCJcIik7XHJcbiAgfSwgW2NvbnRlbnQsIGRpc3BhdGNoLCBwb3N0Py5pZCwgc2V0Q29udGVudCwgdXNlcl0pO1xyXG5cclxuICBjb25zdCBoYW5kbGVJbWdFcnJvciA9IChlOiBSZWFjdC5TeW50aGV0aWNFdmVudCkgPT4ge1xyXG4gICAgKGUudGFyZ2V0IGFzIEhUTUxJbWFnZUVsZW1lbnQpLnNyYyA9IGAvaW1hZ2VzL2Jsb2cvZGVmYXVsdC11c2VyLnBuZ2A7XHJcbiAgfTtcclxuXHJcbiAgY29uc3Qgb25DbGlja01vZGFsID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIHNldExvZ2luTW9kYWwodHJ1ZSk7XHJcbiAgICB9XHJcbiAgfSwgW3VzZXJdKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmICghdXNlcikge1xyXG4gICAgICBzZXRDb250ZW50KFwiWW91IGNhbiBjb21tZW50IHdoZW4geW91IGFyZSBsb2dnZWQgaW4hXCIpO1xyXG4gICAgfVxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgY29uc3QgY29tbWVudENvbXBvbmVudCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgIHJldHVybiBwb3N0Py5Db21tZW50cz8ubWFwKCh2LCBpKSA9PiB7XHJcbiAgICAgIHJldHVybiA8Q29tbWVudHMga2V5PXtpfSBjb21tZW50PXt2fSAvPjtcclxuICAgIH0pO1xyXG4gIH0sIFtwb3N0Py5Db21tZW50c10pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbW1lbnRGb3JtV3JhcHBlciBvbkNsaWNrPXtvbkNsaWNrTW9kYWx9IGNsYXNzTmFtZT1cImJsb2dfcG9zdF9jb21tZW50XCIgaWQ9XCJjb21tZW50XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb21tZW50X2ljb25fd3JhcHBlclwiPlxyXG4gICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJjb21tZW50X2ltZ1wiXHJcbiAgICAgICAgICAgIHNyYz17XHJcbiAgICAgICAgICAgICAgdXNlcj8uaWNvblxyXG4gICAgICAgICAgICAgICAgPyB1c2VyLmljb24ucmVwbGFjZSgvXFwvdGh1bWJcXC8vLCBcIi9vcmlnaW5hbC9cIilcclxuICAgICAgICAgICAgICAgIDogXCIvaW1hZ2VzL2Jsb2cvZGVmYXVsdC11c2VyLnBuZ1wiXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYWx0PVwicHJvZmlsZVwiXHJcbiAgICAgICAgICAgIG9uRXJyb3I9e2hhbmRsZUltZ0Vycm9yfVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIDxoMz57dXNlciA/IHVzZXIubmFtZSA6IFwiR3Vlc3RcIn08L2gzPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luTGVmdDogXCIxLjVyZW1cIiwgd2lkdGg6IFwiMTAwJVwiIH19PlxyXG4gICAgICAgICAgPFRleHRBcmVhIHZhbHVlPXtjb250ZW50fSBvbkNoYW5nZT17b25DaGFuZ2VDb250ZW50fSBjbGFzc05hbWU9XCJjb21tZW50X3RleHRBcmVhXCIgLz5cclxuICAgICAgICAgIDxidXR0b25cclxuICAgICAgICAgICAgc3R5bGU9e3sgcGFkZGluZzogXCIwLjVyZW0gMFwiIH19XHJcbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tBZGRDb21tZW50fVxyXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJwdWJsaWNfYnRuIGNvbW1lbnRfYnRuXCJcclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgQ09NTUVOVFxyXG4gICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjc3M9e0xvZ2luU3VnZ2VzdE1vZGFsKGxvZ2luTW9kYWwpfT5cclxuICAgICAgICAgIDxoMj5Zb3UgY2FuIGNvbW1lbnQgd2hlbiB5b3UgYXJlIGxvZ2dlZCBpbiDwn5iiPC9oMj5cclxuICAgICAgICAgIDxMb2dpbkxpbmsgaHJlZj1cIi9sb2dpblwiPlxyXG4gICAgICAgICAgICA8YT5HTyBUTyBMT0dJTiBQQUdFPC9hPlxyXG4gICAgICAgICAgPC9Mb2dpbkxpbms+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvQ29tbWVudEZvcm1XcmFwcGVyPlxyXG4gICAgICB7cG9zdD8uQ29tbWVudHMgPyAoXHJcbiAgICAgICAgY29tbWVudENvbXBvbmVudCgpXHJcbiAgICAgICkgOiAoXHJcbiAgICAgICAgPGRpdiBjc3M9e05vQ29tbWVudH0+XHJcbiAgICAgICAgICA8aW1nXHJcbiAgICAgICAgICAgIHN0eWxlPXt7IHdpZHRoOiBcIjgwcHhcIiwgb3BhY2l0eTogXCIwLjNcIiB9fVxyXG4gICAgICAgICAgICBhbHQ9XCJub0NvbW1lbnRcIlxyXG4gICAgICAgICAgICBzcmM9XCJodHRwczovL2ljb25zLmljb25hcmNoaXZlLmNvbS9pY29ucy9pY29uc21pbmQvb3V0bGluZS8yNTYvSW5ib3gtRW1wdHktaWNvbi5wbmdcIlxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIDxoMz5ObyBDb21tZW50cy4uLjwvaDM+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICl9XHJcbiAgICA8Lz5cclxuICApO1xyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG1lbW8oQ29tbWVudEZvcm0pO1xyXG4iXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
var CommentForm = /*#__PURE__*/Object(react__WEBPACK_IMPORTED_MODULE_4__["memo"])(_c2 = _s(function () {
  _s();

  var _useSelector = Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["useSelector"])(function (state) {
    return state.user;
  }),
      user = _useSelector.user;

  var _useSelector2 = Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["useSelector"])(function (state) {
    return state.post;
  }),
      post = _useSelector2.post;

  var dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_5__["useDispatch"])();

  var _useInput = Object(_util_useInput__WEBPACK_IMPORTED_MODULE_9__["default"])(""),
      _useInput2 = Object(C_Users_Noah_Desktop_Project_Noahworld_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_useInput, 3),
      content = _useInput2[0],
      onChangeContent = _useInput2[1],
      setContent = _useInput2[2];

  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_4__["useState"])(false),
      loginModal = _useState[0],
      setLoginModal = _useState[1];

  var onClickAddComment = Object(react__WEBPACK_IMPORTED_MODULE_4__["useCallback"])(function () {
    if (content === "") {
      antd__WEBPACK_IMPORTED_MODULE_2__["message"].error("Please write content.");
      return;
    }

    if (!user) {
      antd__WEBPACK_IMPORTED_MODULE_2__["message"].error("Please login first.");
      return;
    }

    dispatch({
      type: _reducers_post__WEBPACK_IMPORTED_MODULE_7__["ADD_COMMENT_REQUEST"],
      data: {
        content: content,
        postId: post === null || post === void 0 ? void 0 : post.id,
        userId: user.id
      }
    });
    setContent("");
  }, [content, dispatch, post === null || post === void 0 ? void 0 : post.id, setContent, user]);

  var handleImgError = function handleImgError(e) {
    e.target.src = "/images/blog/default-user.png";
  };

  var onClickModal = Object(react__WEBPACK_IMPORTED_MODULE_4__["useCallback"])(function () {
    if (!user) {
      setLoginModal(true);
    }
  }, [user]);
  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(function () {
    if (!user) {
      setContent("You can comment when you are logged in!");
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, []);
  var commentComponent = Object(react__WEBPACK_IMPORTED_MODULE_4__["useCallback"])(function () {
    var _post$Comments;

    return post === null || post === void 0 ? void 0 : (_post$Comments = post.Comments) === null || _post$Comments === void 0 ? void 0 : _post$Comments.map(function (v, i) {
      return Object(_emotion_react__WEBPACK_IMPORTED_MODULE_11__["jsx"])(_Comments__WEBPACK_IMPORTED_MODULE_10__["default"], {
        key: i,
        comment: v,
        __self: _this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 126,
          columnNumber: 14
        }
      });
    });
  }, [post === null || post === void 0 ? void 0 : post.Comments]);
  return Object(_emotion_react__WEBPACK_IMPORTED_MODULE_11__["jsx"])(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_11__["jsx"])(CommentFormWrapper, {
    onClick: onClickModal,
    className: "blog_post_comment",
    id: "comment",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 132,
      columnNumber: 7
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_11__["jsx"])("div", {
    className: "comment_icon_wrapper",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 133,
      columnNumber: 9
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_11__["jsx"])("img", {
    className: "comment_img",
    src: user !== null && user !== void 0 && user.icon ? user.icon.replace(/\/thumb\//, "/original/") : "/images/blog/default-user.png",
    alt: "profile",
    onError: handleImgError,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 134,
      columnNumber: 11
    }
  }), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_11__["jsx"])("h3", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 144,
      columnNumber: 11
    }
  }, user ? user.name : "Guest")), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_11__["jsx"])("div", {
    style: {
      marginLeft: "1.5rem",
      width: "100%"
    },
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 146,
      columnNumber: 9
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_11__["jsx"])(antd_lib_input_TextArea__WEBPACK_IMPORTED_MODULE_3___default.a, {
    value: content,
    onChange: onChangeContent,
    className: "comment_textArea",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 147,
      columnNumber: 11
    }
  }), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_11__["jsx"])("button", {
    style: {
      padding: "0.5rem 0"
    },
    onClick: onClickAddComment,
    className: "public_btn comment_btn",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 148,
      columnNumber: 11
    }
  }, "COMMENT")), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_11__["jsx"])("div", {
    css: LoginSuggestModal(loginModal),
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 156,
      columnNumber: 9
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_11__["jsx"])("h2", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 157,
      columnNumber: 11
    }
  }, "You can comment when you are logged in \uD83D\uDE22"), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_11__["jsx"])(LoginLink, {
    href: "/login",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 158,
      columnNumber: 11
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_11__["jsx"])("a", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 159,
      columnNumber: 13
    }
  }, "GO TO LOGIN PAGE")))), post !== null && post !== void 0 && post.Comments ? commentComponent() : Object(_emotion_react__WEBPACK_IMPORTED_MODULE_11__["jsx"])("div", {
    css: NoComment,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 166,
      columnNumber: 9
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_11__["jsx"])("img", {
    style: {
      width: "80px",
      opacity: "0.3"
    },
    alt: "noComment",
    src: "https://icons.iconarchive.com/icons/iconsmind/outline/256/Inbox-Empty-icon.png",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 167,
      columnNumber: 11
    }
  }), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_11__["jsx"])("h3", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 172,
      columnNumber: 11
    }
  }, "No Comments...")));
}, "zP4nqug8ezXXlGVpcQVgpUII3n4=", false, function () {
  return [react_redux__WEBPACK_IMPORTED_MODULE_5__["useSelector"], react_redux__WEBPACK_IMPORTED_MODULE_5__["useSelector"], react_redux__WEBPACK_IMPORTED_MODULE_5__["useDispatch"], _util_useInput__WEBPACK_IMPORTED_MODULE_9__["default"]];
}));
_c3 = CommentForm;
/* harmony default export */ __webpack_exports__["default"] = (_c4 = /*#__PURE__*/Object(react__WEBPACK_IMPORTED_MODULE_4__["memo"])(CommentForm));

var _c, _c2, _c3, _c4;

$RefreshReg$(_c, "LoginSuggestModal");
$RefreshReg$(_c2, "CommentForm$memo");
$RefreshReg$(_c3, "CommentForm");
$RefreshReg$(_c4, "%default%");

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/next/dist/compiled/webpack/harmony-module.js */ "./node_modules/next/dist/compiled/webpack/harmony-module.js")(module)))

/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,