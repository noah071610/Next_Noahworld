{"ast":null,"code":"import _styled from \"@emotion/styled/base\";\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { faBars, faChevronDown, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Input, message } from \"antd\";\nimport React, { memo, useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Link from \"next/link\";\nimport { ON_SLIDE_MENU, SEARCH_KEYWORD_REQUEST } from \"../../../../@reducers/blog\";\nimport { REMOVE_POST_REQUEST } from \"../../../../@reducers/post\";\nimport useInput from \"../../../../util/useInput\";\nimport useToggle from \"../../../../util/useToggle\";\nimport { useRouter } from \"next/router\";\nimport AdminModal from \"../../Admin/AdminModal\";\nimport SlideMenu from \"./SlideMenu\";\nimport { SM_Header_Input, SM_Header_Menu, SM_Header_SeachForm, SM_Header_Title } from \"../../../../styles/emotion\";\nimport { css } from \"@emotion/react\";\nimport SlideRemote from \"./SlideRemote\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst PostTitle = _styled(\"h4\", true ? {\n  target: \"egx4thb0\"\n} : {\n  target: \"egx4thb0\",\n  label: \"PostTitle\"\n})(true ? {\n  name: \"61mznw\",\n  styles: \"display:-webkit-box;word-wrap:break-word;-webkit-line-clamp:1;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis\"\n} : {\n  name: \"61mznw\",\n  styles: \"display:-webkit-box;word-wrap:break-word;-webkit-line-clamp:1;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nconst HeaderLogo = true ? {\n  name: \"1mppn5u\",\n  styles: \"display:flex;align-items:center;height:70px;.logo_span{color:black;margin-left:0.5rem;font-weight:bold;font-size:1.3rem;}\"\n} : {\n  name: \"wgqnbc-HeaderLogo\",\n  styles: \"display:flex;align-items:center;height:70px;.logo_span{color:black;margin-left:0.5rem;font-weight:bold;font-size:1.3rem;};label:HeaderLogo;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nconst TitleArrow = true ? {\n  name: \"alh9i9\",\n  styles: \"display:flex;align-items:center;width:100%;height:70px\"\n} : {\n  name: \"16ux2xo-TitleArrow\",\n  styles: \"display:flex;align-items:center;width:100%;height:70px;label:TitleArrow;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nconst BlogSmallHeader = /*#__PURE__*/memo(() => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    onSlideMenu\n  } = useSelector(state => state.blog);\n  const {\n    user\n  } = useSelector(state => state.user);\n  const {\n    post,\n    removePostDone,\n    prevPost,\n    nextPost\n  } = useSelector(state => state.post);\n  const [password, onChangePassword] = useInput(\"\");\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const [keyword, onChangeKeyword, setKeyword] = useInput(\"\");\n  const [onSearchForm, onClickSearchForm] = useToggle(false);\n  const [onSlideArrow, onClickonSlideArrow, setonSlideArrow] = useToggle(false);\n  const {\n    0: headerTitle,\n    1: setHeaderTitle\n  } = useState(false);\n  useEffect(() => {\n    function scrollCallBack() {\n      let pathname = window.location.pathname.split(\"/\");\n\n      if (window.scrollY > 200 && pathname[2] === \"post\") {\n        setHeaderTitle(true);\n        return;\n      }\n\n      if (window.scrollY > 200 && pathname[1] === \"portfolio\" && !isNaN(parseInt(pathname[2]))) {\n        setHeaderTitle(true);\n        return;\n      }\n\n      setHeaderTitle(false);\n      setonSlideArrow(false);\n    }\n\n    window.addEventListener(\"scroll\", scrollCallBack);\n    return () => {\n      window.removeEventListener(\"scroll\", scrollCallBack);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const onSearchContent = useCallback(() => {\n    dispatch({\n      type: SEARCH_KEYWORD_REQUEST,\n      data: {\n        keyword\n      }\n    });\n\n    if (keyword.charAt(0) === \"#\") {\n      router.push(`/search/${keyword.slice(1)}`);\n      setKeyword(\"\");\n      dispatch({\n        type: ON_SLIDE_MENU\n      });\n      return;\n    }\n\n    router.push(`/search/${keyword}`);\n    setKeyword(\"\");\n    dispatch({\n      type: ON_SLIDE_MENU\n    });\n  }, [dispatch, router, keyword, setKeyword]);\n  const showModal = useCallback(() => {\n    setIsModalVisible(true);\n  }, []);\n  const handleOk = useCallback(() => {\n    setIsModalVisible(false);\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: {\n        PostId: post === null || post === void 0 ? void 0 : post.id,\n        password,\n        tags: post === null || post === void 0 ? void 0 : post.HashTags\n      }\n    });\n  }, [dispatch, password, post === null || post === void 0 ? void 0 : post.HashTags, post === null || post === void 0 ? void 0 : post.id]);\n  const handleCancel = useCallback(() => {\n    setIsModalVisible(false);\n  }, []);\n  const onClickSlide = useCallback(() => {\n    dispatch({\n      type: ON_SLIDE_MENU\n    });\n    setonSlideArrow(false);\n  }, [dispatch, setonSlideArrow]);\n  useEffect(() => {\n    if (removePostDone) {\n      message.success(\"Removed Post Successfully\");\n      router.push(\"/\");\n    }\n  }, [dispatch, router, removePostDone]);\n  return ___EmotionJSX(\"nav\", {\n    className: \"blog_header_small\"\n  }, ___EmotionJSX(\"div\", {\n    css: SM_Header_Menu(onSlideMenu || onSlideArrow),\n    className: \"blog_header_small_nav\"\n  }, ___EmotionJSX(\"div\", {\n    css: SM_Header_Title(headerTitle)\n  }, ___EmotionJSX(Link, {\n    href: \"/\"\n  }, ___EmotionJSX(\"a\", {\n    css: HeaderLogo\n  }, ___EmotionJSX(\"img\", {\n    alt: \"menu_logo\",\n    style: {\n      width: \"1.9rem\"\n    },\n    src: \"/images/blog/logo_icon.png\"\n  }), ___EmotionJSX(\"span\", {\n    className: \"logo_span\"\n  }, \"Noah World\"))), ___EmotionJSX(\"a\", {\n    onClick: onClickonSlideArrow,\n    css: TitleArrow\n  }, ___EmotionJSX(PostTitle, null, post === null || post === void 0 ? void 0 : post.title), ___EmotionJSX(FontAwesomeIcon, {\n    style: {\n      marginLeft: \"1rem\",\n      transition: \"all 0.3s\",\n      transform: `rotate(${onSlideArrow ? \"180deg\" : \"0deg\"})`\n    },\n    icon: faChevronDown\n  }))), ___EmotionJSX(\"a\", {\n    onClick: onClickSlide,\n    style: {\n      display: \"flex\",\n      alignItems: \"center\"\n    }\n  }, onSlideMenu ? ___EmotionJSX(FontAwesomeIcon, {\n    style: {\n      fontSize: \"1.5rem\"\n    },\n    icon: faTimes\n  }) : ___EmotionJSX(FontAwesomeIcon, {\n    style: {\n      fontSize: \"1.5rem\"\n    },\n    icon: faBars\n  })), onSlideArrow && headerTitle && ___EmotionJSX(SlideRemote, {\n    showModal: showModal,\n    post: post,\n    prevPost: prevPost,\n    nextPost: nextPost,\n    user: user\n  }), ___EmotionJSX(\"div\", {\n    css: SM_Header_SeachForm(onSlideMenu),\n    className: \"slide_menu\"\n  }, ___EmotionJSX(Input.Search, {\n    css: SM_Header_Input(onSearchForm),\n    value: keyword,\n    onChange: onChangeKeyword,\n    onSearch: onSearchContent\n  }), ___EmotionJSX(SlideMenu, {\n    onClickSearchForm: onClickSearchForm,\n    user: user\n  }))), ___EmotionJSX(AdminModal, {\n    isModalVisible: isModalVisible,\n    handleOk: handleOk,\n    handleCancel: handleCancel,\n    password: password,\n    onChangePassword: onChangePassword\n  }));\n});\nexport default /*#__PURE__*/memo(BlogSmallHeader);","map":{"version":3,"sources":["C:/Users/Noah/Desktop/Project/Noahworld/client/components/Blog/Headers/SmallHeaders/BlogSmallHeader.tsx"],"names":["faBars","faChevronDown","faTimes","FontAwesomeIcon","Input","message","React","memo","useCallback","useEffect","useState","useDispatch","useSelector","Link","ON_SLIDE_MENU","SEARCH_KEYWORD_REQUEST","REMOVE_POST_REQUEST","useInput","useToggle","useRouter","AdminModal","SlideMenu","SM_Header_Input","SM_Header_Menu","SM_Header_SeachForm","SM_Header_Title","css","SlideRemote","PostTitle","HeaderLogo","TitleArrow","BlogSmallHeader","dispatch","router","onSlideMenu","state","blog","user","post","removePostDone","prevPost","nextPost","password","onChangePassword","isModalVisible","setIsModalVisible","keyword","onChangeKeyword","setKeyword","onSearchForm","onClickSearchForm","onSlideArrow","onClickonSlideArrow","setonSlideArrow","headerTitle","setHeaderTitle","scrollCallBack","pathname","window","location","split","scrollY","isNaN","parseInt","addEventListener","removeEventListener","onSearchContent","type","data","charAt","push","slice","showModal","handleOk","PostId","id","tags","HashTags","handleCancel","onClickSlide","success","width","title","marginLeft","transition","transform","display","alignItems","fontSize"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\n\r\nimport { faBars, faChevronDown, faTimes, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Input, message } from \"antd\";\r\nimport React, { memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Link from \"next/link\";\r\nimport styled from \"@emotion/styled\";\r\nimport { RootState } from \"../../../../@reducers\";\r\nimport { ON_SLIDE_MENU, SEARCH_KEYWORD_REQUEST } from \"../../../../@reducers/blog\";\r\nimport { REMOVE_POST_REQUEST } from \"../../../../@reducers/post\";\r\nimport useInput from \"../../../../util/useInput\";\r\nimport useToggle from \"../../../../util/useToggle\";\r\nimport { useRouter } from \"next/router\";\r\nimport AdminModal from \"../../Admin/AdminModal\";\r\nimport SlideMenu from \"./SlideMenu\";\r\nimport {\r\n  SM_Header_Input,\r\n  SM_Header_Menu,\r\n  SM_Header_SeachForm,\r\n  SM_Header_Title,\r\n} from \"../../../../styles/emotion\";\r\nimport { css } from \"@emotion/react\";\r\nimport SlideRemote from \"./SlideRemote\";\r\n\r\nconst PostTitle = styled.h4`\r\n  display: -webkit-box;\r\n  word-wrap: break-word;\r\n  -webkit-line-clamp: 1;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst HeaderLogo = css`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 70px;\r\n  .logo_span {\r\n    color: black;\r\n    margin-left: 0.5rem;\r\n    font-weight: bold;\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n\r\nconst TitleArrow = css`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 70px;\r\n`;\r\n\r\nconst BlogSmallHeader = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { onSlideMenu } = useSelector((state: RootState) => state.blog);\r\n  const { user } = useSelector((state: RootState) => state.user);\r\n  const { post, removePostDone, prevPost, nextPost } = useSelector(\r\n    (state: RootState) => state.post\r\n  );\r\n\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [keyword, onChangeKeyword, setKeyword] = useInput(\"\");\r\n  const [onSearchForm, onClickSearchForm] = useToggle(false);\r\n  const [onSlideArrow, onClickonSlideArrow, setonSlideArrow] = useToggle(false);\r\n  const [headerTitle, setHeaderTitle] = useState(false);\r\n\r\n  useEffect(() => {\r\n    function scrollCallBack() {\r\n      let pathname = window.location.pathname.split(\"/\");\r\n      if (window.scrollY > 200 && pathname[2] === \"post\") {\r\n        setHeaderTitle(true);\r\n        return;\r\n      }\r\n      if (window.scrollY > 200 && pathname[1] === \"portfolio\" && !isNaN(parseInt(pathname[2]))) {\r\n        setHeaderTitle(true);\r\n        return;\r\n      }\r\n      setHeaderTitle(false);\r\n      setonSlideArrow(false);\r\n    }\r\n    window.addEventListener(\"scroll\", scrollCallBack);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", scrollCallBack);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onSearchContent = useCallback(() => {\r\n    dispatch({\r\n      type: SEARCH_KEYWORD_REQUEST,\r\n      data: { keyword },\r\n    });\r\n    if (keyword.charAt(0) === \"#\") {\r\n      router.push(`/search/${keyword.slice(1)}`);\r\n      setKeyword(\"\");\r\n      dispatch({\r\n        type: ON_SLIDE_MENU,\r\n      });\r\n      return;\r\n    }\r\n    router.push(`/search/${keyword}`);\r\n    setKeyword(\"\");\r\n    dispatch({\r\n      type: ON_SLIDE_MENU,\r\n    });\r\n  }, [dispatch, router, keyword, setKeyword]);\r\n\r\n  const showModal = useCallback(() => {\r\n    setIsModalVisible(true);\r\n  }, []);\r\n\r\n  const handleOk = useCallback(() => {\r\n    setIsModalVisible(false);\r\n    dispatch({\r\n      type: REMOVE_POST_REQUEST,\r\n      data: { PostId: post?.id, password, tags: post?.HashTags },\r\n    });\r\n  }, [dispatch, password, post?.HashTags, post?.id]);\r\n\r\n  const handleCancel = useCallback(() => {\r\n    setIsModalVisible(false);\r\n  }, []);\r\n\r\n  const onClickSlide = useCallback(() => {\r\n    dispatch({\r\n      type: ON_SLIDE_MENU,\r\n    });\r\n    setonSlideArrow(false);\r\n  }, [dispatch, setonSlideArrow]);\r\n\r\n  useEffect(() => {\r\n    if (removePostDone) {\r\n      message.success(\"Removed Post Successfully\");\r\n      router.push(\"/\");\r\n    }\r\n  }, [dispatch, router, removePostDone]);\r\n\r\n  return (\r\n    <nav className=\"blog_header_small\">\r\n      <div css={SM_Header_Menu(onSlideMenu || onSlideArrow)} className=\"blog_header_small_nav\">\r\n        <div css={SM_Header_Title(headerTitle)}>\r\n          <Link href={\"/\"}>\r\n            <a css={HeaderLogo}>\r\n              <img alt=\"menu_logo\" style={{ width: \"1.9rem\" }} src=\"/images/blog/logo_icon.png\" />\r\n              <span className=\"logo_span\">Noah World</span>\r\n            </a>\r\n          </Link>\r\n          <a onClick={onClickonSlideArrow} css={TitleArrow}>\r\n            <PostTitle>{post?.title}</PostTitle>\r\n            <FontAwesomeIcon\r\n              style={{\r\n                marginLeft: \"1rem\",\r\n                transition: \"all 0.3s\",\r\n                transform: `rotate(${onSlideArrow ? \"180deg\" : \"0deg\"})`,\r\n              }}\r\n              icon={faChevronDown}\r\n            />\r\n          </a>\r\n        </div>\r\n        <a onClick={onClickSlide} style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          {onSlideMenu ? (\r\n            <FontAwesomeIcon style={{ fontSize: \"1.5rem\" }} icon={faTimes} />\r\n          ) : (\r\n            <FontAwesomeIcon style={{ fontSize: \"1.5rem\" }} icon={faBars} />\r\n          )}\r\n        </a>\r\n        {onSlideArrow && headerTitle && (\r\n          <SlideRemote\r\n            showModal={showModal}\r\n            post={post}\r\n            prevPost={prevPost}\r\n            nextPost={nextPost}\r\n            user={user}\r\n          />\r\n        )}\r\n        <div css={SM_Header_SeachForm(onSlideMenu)} className=\"slide_menu\">\r\n          <Input.Search\r\n            css={SM_Header_Input(onSearchForm)}\r\n            value={keyword}\r\n            onChange={onChangeKeyword}\r\n            onSearch={onSearchContent}\r\n          />\r\n          <SlideMenu onClickSearchForm={onClickSearchForm} user={user} />\r\n        </div>\r\n      </div>\r\n      <AdminModal\r\n        isModalVisible={isModalVisible}\r\n        handleOk={handleOk}\r\n        handleCancel={handleCancel}\r\n        password={password}\r\n        onChangePassword={onChangePassword}\r\n      />\r\n    </nav>\r\n  );\r\n});\r\n\r\nexport default memo(BlogSmallHeader);\r\n"]},"metadata":{},"sourceType":"module"}