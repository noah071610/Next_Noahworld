{"ast":null,"code":"import _styled from \"@emotion/styled/base\";\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\n/* eslint-disable jsx-a11y/anchor-has-content */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { message } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport React, { memo, useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Link from \"next/link\";\nimport { ADD_COMMENT_REQUEST } from \"../../../@reducers/post\";\nimport { BLUE_COLOR } from \"../../../config\";\nimport useInput from \"../../../util/useInput\";\nimport Comments from \"./Comments\";\nimport { css } from \"@emotion/react\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst LoginLink = /*#__PURE__*/_styled(Link, true ? {\n  target: \"e1c590xf1\"\n} : {\n  target: \"e1c590xf1\",\n  label: \"LoginLink\"\n})(\"margin-top:1rem;padding:0.5rem 1rem;border-radius:5px;transition:all 0.3s;border:1px solid rgba(0, 0, 0, 0.2);font-weight:bold;&:hover{color:white;background-color:\", BLUE_COLOR, \";}\" + (true ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENvbW1lbnRzXFxDb21tZW50Rm9ybS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZThCIiwiZmlsZSI6IkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENvbW1lbnRzXFxDb21tZW50Rm9ybS50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBqc3gtYTExeS9hbmNob3ItaGFzLWNvbnRlbnQgKi9cclxuLyogZXNsaW50LWRpc2FibGUganN4LWExMXkvYW5jaG9yLWlzLXZhbGlkICovXHJcbmltcG9ydCB7IG1lc3NhZ2UgfSBmcm9tIFwiYW50ZFwiO1xyXG5pbXBvcnQgVGV4dEFyZWEgZnJvbSBcImFudGQvbGliL2lucHV0L1RleHRBcmVhXCI7XHJcbmltcG9ydCBSZWFjdCwgeyBtZW1vLCB1c2VDYWxsYmFjaywgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyB1c2VEaXNwYXRjaCwgdXNlU2VsZWN0b3IgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcclxuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJAZW1vdGlvbi9zdHlsZWRcIjtcclxuaW1wb3J0IHsgUm9vdFN0YXRlIH0gZnJvbSBcIi4uLy4uLy4uL0ByZWR1Y2Vyc1wiO1xyXG5pbXBvcnQgeyBBRERfQ09NTUVOVF9SRVFVRVNUIH0gZnJvbSBcIi4uLy4uLy4uL0ByZWR1Y2Vycy9wb3N0XCI7XHJcbmltcG9ydCB7IEJMVUVfQ09MT1IgfSBmcm9tIFwiLi4vLi4vLi4vY29uZmlnXCI7XHJcbmltcG9ydCB1c2VJbnB1dCBmcm9tIFwiLi4vLi4vLi4vdXRpbC91c2VJbnB1dFwiO1xyXG5pbXBvcnQgQ29tbWVudHMgZnJvbSBcIi4vQ29tbWVudHNcIjtcclxuaW1wb3J0IHsgY3NzIH0gZnJvbSBcIkBlbW90aW9uL3JlYWN0XCI7XHJcblxyXG5jb25zdCBMb2dpbkxpbmsgPSBzdHlsZWQoTGluaylgXHJcbiAgbWFyZ2luLXRvcDogMXJlbTtcclxuICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtCTFVFX0NPTE9SfTtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBMb2dpblN1Z2dlc3RNb2RhbCA9IChsb2dpbk1vZGFsOiBib29sZWFuKSA9PiBjc3NgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbiAgJHtsb2dpbk1vZGFsXHJcbiAgICA/IFwidmlzaWJpbGl0eTppbml0aWFsOyBhbmltYXRpb246MC41cyBmYWRlSW47XCJcclxuICAgIDogXCJ2aXNpYmlsaXR5OiBoaWRkZW47IGFuaW1hdGlvbjpub25lO1wifVxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc2cHgpIHtcclxuICAgIGgyIHtcclxuICAgICAgZm9udC1zaXplOiAwLjlyZW07XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5jb25zdCBDb21tZW50Rm9ybVdyYXBwZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBhZGRpbmc6IDEuNXJlbSAwLjVyZW07XHJcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xyXG4gIC5jb21tZW50X2ljb25fd3JhcHBlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBoMyB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMC45cmVtO1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIG1hcmdpbi10b3A6IDAuOHJlbTtcclxuICAgIH1cclxuICB9XHJcbiAgJjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMDUpO1xyXG4gIH1cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NnB4KSB7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IE5vQ29tbWVudCA9IGNzc2BcclxuICB3aWR0aDogMTAwJTtcclxuICBwYWRkaW5nOiAxcmVtIDA7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wNyk7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5gO1xyXG5cclxuY29uc3QgQ29tbWVudEZvcm0gPSBtZW1vKCgpID0+IHtcclxuICBjb25zdCB7IHVzZXIgfSA9IHVzZVNlbGVjdG9yKChzdGF0ZTogUm9vdFN0YXRlKSA9PiBzdGF0ZS51c2VyKTtcclxuICBjb25zdCB7IHBvc3QgfSA9IHVzZVNlbGVjdG9yKChzdGF0ZTogUm9vdFN0YXRlKSA9PiBzdGF0ZS5wb3N0KTtcclxuICBjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XHJcbiAgY29uc3QgW2NvbnRlbnQsIG9uQ2hhbmdlQ29udGVudCwgc2V0Q29udGVudF0gPSB1c2VJbnB1dChcIlwiKTtcclxuICBjb25zdCBbbG9naW5Nb2RhbCwgc2V0TG9naW5Nb2RhbF0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgY29uc3Qgb25DbGlja0FkZENvbW1lbnQgPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICBpZiAoY29udGVudCA9PT0gXCJcIikge1xyXG4gICAgICBtZXNzYWdlLmVycm9yKFwiUGxlYXNlIHdyaXRlIGNvbnRlbnQuXCIpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAoIXVzZXIpIHtcclxuICAgICAgbWVzc2FnZS5lcnJvcihcIlBsZWFzZSBsb2dpbiBmaXJzdC5cIik7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGRpc3BhdGNoKHtcclxuICAgICAgdHlwZTogQUREX0NPTU1FTlRfUkVRVUVTVCxcclxuICAgICAgZGF0YTogeyBjb250ZW50LCBwb3N0SWQ6IHBvc3Q/LmlkLCB1c2VySWQ6IHVzZXIuaWQgfSxcclxuICAgIH0pO1xyXG4gICAgc2V0Q29udGVudChcIlwiKTtcclxuICB9LCBbY29udGVudCwgZGlzcGF0Y2gsIHBvc3Q/LmlkLCBzZXRDb250ZW50LCB1c2VyXSk7XHJcblxyXG4gIGNvbnN0IGhhbmRsZUltZ0Vycm9yID0gKGU6IFJlYWN0LlN5bnRoZXRpY0V2ZW50KSA9PiB7XHJcbiAgICAoZS50YXJnZXQgYXMgSFRNTEltYWdlRWxlbWVudCkuc3JjID0gYC9pbWFnZXMvYmxvZy9kZWZhdWx0LXVzZXIucG5nYDtcclxuICB9O1xyXG5cclxuICBjb25zdCBvbkNsaWNrTW9kYWwgPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICBpZiAoIXVzZXIpIHtcclxuICAgICAgc2V0TG9naW5Nb2RhbCh0cnVlKTtcclxuICAgIH1cclxuICB9LCBbdXNlcl0pO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIHNldENvbnRlbnQoXCJZb3UgY2FuIGNvbW1lbnQgd2hlbiB5b3UgYXJlIGxvZ2dlZCBpbiFcIik7XHJcbiAgICB9XHJcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzXHJcbiAgfSwgW10pO1xyXG5cclxuICBjb25zdCBjb21tZW50Q29tcG9uZW50ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgcmV0dXJuIHBvc3Q/LkNvbW1lbnRzPy5tYXAoKHYsIGkpID0+IHtcclxuICAgICAgcmV0dXJuIDxDb21tZW50cyBrZXk9e2l9IGNvbW1lbnQ9e3Z9IC8+O1xyXG4gICAgfSk7XHJcbiAgfSwgW3Bvc3Q/LkNvbW1lbnRzXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29tbWVudEZvcm1XcmFwcGVyIG9uQ2xpY2s9e29uQ2xpY2tNb2RhbH0gY2xhc3NOYW1lPVwiYmxvZ19wb3N0X2NvbW1lbnRcIiBpZD1cImNvbW1lbnRcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbW1lbnRfaWNvbl93cmFwcGVyXCI+XHJcbiAgICAgICAgICA8aW1nXHJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImNvbW1lbnRfaW1nXCJcclxuICAgICAgICAgICAgc3JjPXtcclxuICAgICAgICAgICAgICB1c2VyPy5pY29uXHJcbiAgICAgICAgICAgICAgICA/IHVzZXIuaWNvbi5yZXBsYWNlKC9cXC90aHVtYlxcLy8sIFwiL29yaWdpbmFsL1wiKVxyXG4gICAgICAgICAgICAgICAgOiBcIi9pbWFnZXMvYmxvZy9kZWZhdWx0LXVzZXIucG5nXCJcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBhbHQ9XCJwcm9maWxlXCJcclxuICAgICAgICAgICAgb25FcnJvcj17aGFuZGxlSW1nRXJyb3J9XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgICAgPGgzPnt1c2VyID8gdXNlci5uYW1lIDogXCJHdWVzdFwifTwvaDM+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBzdHlsZT17eyBtYXJnaW5MZWZ0OiBcIjJyZW1cIiwgd2lkdGg6IFwiMTAwJVwiIH19PlxyXG4gICAgICAgICAgPFRleHRBcmVhIHZhbHVlPXtjb250ZW50fSBvbkNoYW5nZT17b25DaGFuZ2VDb250ZW50fSBjbGFzc05hbWU9XCJjb21tZW50X3RleHRBcmVhXCIgLz5cclxuICAgICAgICAgIDxidXR0b25cclxuICAgICAgICAgICAgc3R5bGU9e3sgcGFkZGluZzogXCIwLjVyZW0gMFwiIH19XHJcbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tBZGRDb21tZW50fVxyXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJwdWJsaWNfYnRuIGNvbW1lbnRfYnRuXCJcclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgQ09NTUVOVFxyXG4gICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjc3M9e0xvZ2luU3VnZ2VzdE1vZGFsKGxvZ2luTW9kYWwpfT5cclxuICAgICAgICAgIDxoMj5Zb3UgY2FuIGNvbW1lbnQgd2hlbiB5b3UgYXJlIGxvZ2dlZCBpbiDwn5iiPC9oMj5cclxuICAgICAgICAgIDxMb2dpbkxpbmsgaHJlZj1cIi9sb2dpblwiPlxyXG4gICAgICAgICAgICA8YT5HTyBUTyBMT0dJTiBQQUdFPC9hPlxyXG4gICAgICAgICAgPC9Mb2dpbkxpbms+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvQ29tbWVudEZvcm1XcmFwcGVyPlxyXG4gICAgICB7cG9zdD8uQ29tbWVudHMgPyAoXHJcbiAgICAgICAgY29tbWVudENvbXBvbmVudCgpXHJcbiAgICAgICkgOiAoXHJcbiAgICAgICAgPGRpdiBjc3M9e05vQ29tbWVudH0+XHJcbiAgICAgICAgICA8aW1nXHJcbiAgICAgICAgICAgIHN0eWxlPXt7IHdpZHRoOiBcIjgwcHhcIiwgb3BhY2l0eTogXCIwLjNcIiB9fVxyXG4gICAgICAgICAgICBhbHQ9XCJub0NvbW1lbnRcIlxyXG4gICAgICAgICAgICBzcmM9XCJodHRwczovL2ljb25zLmljb25hcmNoaXZlLmNvbS9pY29ucy9pY29uc21pbmQvb3V0bGluZS8yNTYvSW5ib3gtRW1wdHktaWNvbi5wbmdcIlxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIDxoMz5ObyBDb21tZW50cy4uLjwvaDM+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICl9XHJcbiAgICA8Lz5cclxuICApO1xyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG1lbW8oQ29tbWVudEZvcm0pO1xyXG4iXX0= */\"));\n\nconst LoginSuggestModal = loginModal =>\n/*#__PURE__*/\n\n/*#__PURE__*/\ncss(\"display:flex;position:absolute;width:100%;height:100%;top:0;left:0;flex-direction:column;justify-content:center;align-items:center;background-color:rgba(0, 0, 0, 0.3);\", loginModal ? \"visibility:initial; animation:0.5s fadeIn;\" : \"visibility: hidden; animation:none;\", \"@media only screen and (max-width: 576px){h2{font-size:0.9rem;}}\" + (true ? \"\" : \";label:LoginSuggestModal;\"), true ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENvbW1lbnRzXFxDb21tZW50Rm9ybS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEJzRCIsImZpbGUiOiJDOlxcVXNlcnNcXE5vYWhcXERlc2t0b3BcXFByb2plY3RcXE5vYWh3b3JsZFxcY2xpZW50XFxjb21wb25lbnRzXFxCbG9nXFxDb21tZW50c1xcQ29tbWVudEZvcm0udHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUganN4LWExMXkvYW5jaG9yLWhhcy1jb250ZW50ICovXHJcbi8qIGVzbGludC1kaXNhYmxlIGpzeC1hMTF5L2FuY2hvci1pcy12YWxpZCAqL1xyXG5pbXBvcnQgeyBtZXNzYWdlIH0gZnJvbSBcImFudGRcIjtcclxuaW1wb3J0IFRleHRBcmVhIGZyb20gXCJhbnRkL2xpYi9pbnB1dC9UZXh0QXJlYVwiO1xyXG5pbXBvcnQgUmVhY3QsIHsgbWVtbywgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgdXNlRGlzcGF0Y2gsIHVzZVNlbGVjdG9yIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XHJcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XHJcbmltcG9ydCB7IFJvb3RTdGF0ZSB9IGZyb20gXCIuLi8uLi8uLi9AcmVkdWNlcnNcIjtcclxuaW1wb3J0IHsgQUREX0NPTU1FTlRfUkVRVUVTVCB9IGZyb20gXCIuLi8uLi8uLi9AcmVkdWNlcnMvcG9zdFwiO1xyXG5pbXBvcnQgeyBCTFVFX0NPTE9SIH0gZnJvbSBcIi4uLy4uLy4uL2NvbmZpZ1wiO1xyXG5pbXBvcnQgdXNlSW5wdXQgZnJvbSBcIi4uLy4uLy4uL3V0aWwvdXNlSW5wdXRcIjtcclxuaW1wb3J0IENvbW1lbnRzIGZyb20gXCIuL0NvbW1lbnRzXCI7XHJcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9yZWFjdFwiO1xyXG5cclxuY29uc3QgTG9naW5MaW5rID0gc3R5bGVkKExpbmspYFxyXG4gIG1hcmdpbi10b3A6IDFyZW07XHJcbiAgcGFkZGluZzogMC41cmVtIDFyZW07XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICAmOmhvdmVyIHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7QkxVRV9DT0xPUn07XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgTG9naW5TdWdnZXN0TW9kYWwgPSAobG9naW5Nb2RhbDogYm9vbGVhbikgPT4gY3NzYFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG4gICR7bG9naW5Nb2RhbFxyXG4gICAgPyBcInZpc2liaWxpdHk6aW5pdGlhbDsgYW5pbWF0aW9uOjAuNXMgZmFkZUluO1wiXHJcbiAgICA6IFwidmlzaWJpbGl0eTogaGlkZGVuOyBhbmltYXRpb246bm9uZTtcIn1cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NnB4KSB7XHJcbiAgICBoMiB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMC45cmVtO1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuY29uc3QgQ29tbWVudEZvcm1XcmFwcGVyID0gc3R5bGVkLmRpdmBcclxuICBwYWRkaW5nOiAxLjVyZW0gMC41cmVtO1xyXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcclxuICAuY29tbWVudF9pY29uX3dyYXBwZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaDMge1xyXG4gICAgICBmb250LXNpemU6IDAuOXJlbTtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBtYXJnaW4tdG9wOiAwLjhyZW07XHJcbiAgICB9XHJcbiAgfVxyXG4gICY6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjA1KTtcclxuICB9XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzZweCkge1xyXG4gICAgcGFkZGluZy1yaWdodDogMDtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBOb0NvbW1lbnQgPSBjc3NgXHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogMXJlbSAwO1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMDcpO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuYDtcclxuXHJcbmNvbnN0IENvbW1lbnRGb3JtID0gbWVtbygoKSA9PiB7XHJcbiAgY29uc3QgeyB1c2VyIH0gPSB1c2VTZWxlY3Rvcigoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUudXNlcik7XHJcbiAgY29uc3QgeyBwb3N0IH0gPSB1c2VTZWxlY3Rvcigoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUucG9zdCk7XHJcbiAgY29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xyXG4gIGNvbnN0IFtjb250ZW50LCBvbkNoYW5nZUNvbnRlbnQsIHNldENvbnRlbnRdID0gdXNlSW5wdXQoXCJcIik7XHJcbiAgY29uc3QgW2xvZ2luTW9kYWwsIHNldExvZ2luTW9kYWxdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IG9uQ2xpY2tBZGRDb21tZW50ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgaWYgKGNvbnRlbnQgPT09IFwiXCIpIHtcclxuICAgICAgbWVzc2FnZS5lcnJvcihcIlBsZWFzZSB3cml0ZSBjb250ZW50LlwiKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIG1lc3NhZ2UuZXJyb3IoXCJQbGVhc2UgbG9naW4gZmlyc3QuXCIpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBkaXNwYXRjaCh7XHJcbiAgICAgIHR5cGU6IEFERF9DT01NRU5UX1JFUVVFU1QsXHJcbiAgICAgIGRhdGE6IHsgY29udGVudCwgcG9zdElkOiBwb3N0Py5pZCwgdXNlcklkOiB1c2VyLmlkIH0sXHJcbiAgICB9KTtcclxuICAgIHNldENvbnRlbnQoXCJcIik7XHJcbiAgfSwgW2NvbnRlbnQsIGRpc3BhdGNoLCBwb3N0Py5pZCwgc2V0Q29udGVudCwgdXNlcl0pO1xyXG5cclxuICBjb25zdCBoYW5kbGVJbWdFcnJvciA9IChlOiBSZWFjdC5TeW50aGV0aWNFdmVudCkgPT4ge1xyXG4gICAgKGUudGFyZ2V0IGFzIEhUTUxJbWFnZUVsZW1lbnQpLnNyYyA9IGAvaW1hZ2VzL2Jsb2cvZGVmYXVsdC11c2VyLnBuZ2A7XHJcbiAgfTtcclxuXHJcbiAgY29uc3Qgb25DbGlja01vZGFsID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIHNldExvZ2luTW9kYWwodHJ1ZSk7XHJcbiAgICB9XHJcbiAgfSwgW3VzZXJdKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmICghdXNlcikge1xyXG4gICAgICBzZXRDb250ZW50KFwiWW91IGNhbiBjb21tZW50IHdoZW4geW91IGFyZSBsb2dnZWQgaW4hXCIpO1xyXG4gICAgfVxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgY29uc3QgY29tbWVudENvbXBvbmVudCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgIHJldHVybiBwb3N0Py5Db21tZW50cz8ubWFwKCh2LCBpKSA9PiB7XHJcbiAgICAgIHJldHVybiA8Q29tbWVudHMga2V5PXtpfSBjb21tZW50PXt2fSAvPjtcclxuICAgIH0pO1xyXG4gIH0sIFtwb3N0Py5Db21tZW50c10pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbW1lbnRGb3JtV3JhcHBlciBvbkNsaWNrPXtvbkNsaWNrTW9kYWx9IGNsYXNzTmFtZT1cImJsb2dfcG9zdF9jb21tZW50XCIgaWQ9XCJjb21tZW50XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb21tZW50X2ljb25fd3JhcHBlclwiPlxyXG4gICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJjb21tZW50X2ltZ1wiXHJcbiAgICAgICAgICAgIHNyYz17XHJcbiAgICAgICAgICAgICAgdXNlcj8uaWNvblxyXG4gICAgICAgICAgICAgICAgPyB1c2VyLmljb24ucmVwbGFjZSgvXFwvdGh1bWJcXC8vLCBcIi9vcmlnaW5hbC9cIilcclxuICAgICAgICAgICAgICAgIDogXCIvaW1hZ2VzL2Jsb2cvZGVmYXVsdC11c2VyLnBuZ1wiXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYWx0PVwicHJvZmlsZVwiXHJcbiAgICAgICAgICAgIG9uRXJyb3I9e2hhbmRsZUltZ0Vycm9yfVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIDxoMz57dXNlciA/IHVzZXIubmFtZSA6IFwiR3Vlc3RcIn08L2gzPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luTGVmdDogXCIycmVtXCIsIHdpZHRoOiBcIjEwMCVcIiB9fT5cclxuICAgICAgICAgIDxUZXh0QXJlYSB2YWx1ZT17Y29udGVudH0gb25DaGFuZ2U9e29uQ2hhbmdlQ29udGVudH0gY2xhc3NOYW1lPVwiY29tbWVudF90ZXh0QXJlYVwiIC8+XHJcbiAgICAgICAgICA8YnV0dG9uXHJcbiAgICAgICAgICAgIHN0eWxlPXt7IHBhZGRpbmc6IFwiMC41cmVtIDBcIiB9fVxyXG4gICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrQWRkQ29tbWVudH1cclxuICAgICAgICAgICAgY2xhc3NOYW1lPVwicHVibGljX2J0biBjb21tZW50X2J0blwiXHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIENPTU1FTlRcclxuICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY3NzPXtMb2dpblN1Z2dlc3RNb2RhbChsb2dpbk1vZGFsKX0+XHJcbiAgICAgICAgICA8aDI+WW91IGNhbiBjb21tZW50IHdoZW4geW91IGFyZSBsb2dnZWQgaW4g8J+YojwvaDI+XHJcbiAgICAgICAgICA8TG9naW5MaW5rIGhyZWY9XCIvbG9naW5cIj5cclxuICAgICAgICAgICAgPGE+R08gVE8gTE9HSU4gUEFHRTwvYT5cclxuICAgICAgICAgIDwvTG9naW5MaW5rPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbW1lbnRGb3JtV3JhcHBlcj5cclxuICAgICAge3Bvc3Q/LkNvbW1lbnRzID8gKFxyXG4gICAgICAgIGNvbW1lbnRDb21wb25lbnQoKVxyXG4gICAgICApIDogKFxyXG4gICAgICAgIDxkaXYgY3NzPXtOb0NvbW1lbnR9PlxyXG4gICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICBzdHlsZT17eyB3aWR0aDogXCI4MHB4XCIsIG9wYWNpdHk6IFwiMC4zXCIgfX1cclxuICAgICAgICAgICAgYWx0PVwibm9Db21tZW50XCJcclxuICAgICAgICAgICAgc3JjPVwiaHR0cHM6Ly9pY29ucy5pY29uYXJjaGl2ZS5jb20vaWNvbnMvaWNvbnNtaW5kL291dGxpbmUvMjU2L0luYm94LUVtcHR5LWljb24ucG5nXCJcclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8aDM+Tm8gQ29tbWVudHMuLi48L2gzPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICApfVxyXG4gICAgPC8+XHJcbiAgKTtcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBtZW1vKENvbW1lbnRGb3JtKTtcclxuIl19 */\", true ? \"\" : \";label:LoginSuggestModal;\");\n\nconst CommentFormWrapper = _styled(\"div\", true ? {\n  target: \"e1c590xf0\"\n} : {\n  target: \"e1c590xf0\",\n  label: \"CommentFormWrapper\"\n})(true ? {\n  name: \"hq209f\",\n  styles: \"padding:1.5rem 0.5rem;border-top:1px solid rgba(0, 0, 0, 0.1);border-bottom:1px solid rgba(0, 0, 0, 0.1);display:flex;position:relative;transition:all 0.3s;.comment_icon_wrapper{display:flex;flex-direction:column;justify-content:flex-start;align-items:center;h3{font-size:0.9rem;text-align:center;margin-top:0.8rem;}}&:hover{background-color:rgba(0, 0, 0, 0.05);}@media only screen and (max-width: 576px){padding-right:0;}\"\n} : {\n  name: \"hq209f\",\n  styles: \"padding:1.5rem 0.5rem;border-top:1px solid rgba(0, 0, 0, 0.1);border-bottom:1px solid rgba(0, 0, 0, 0.1);display:flex;position:relative;transition:all 0.3s;.comment_icon_wrapper{display:flex;flex-direction:column;justify-content:flex-start;align-items:center;h3{font-size:0.9rem;text-align:center;margin-top:0.8rem;}}&:hover{background-color:rgba(0, 0, 0, 0.05);}@media only screen and (max-width: 576px){padding-right:0;}\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENvbW1lbnRzXFxDb21tZW50Rm9ybS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0RxQyIsImZpbGUiOiJDOlxcVXNlcnNcXE5vYWhcXERlc2t0b3BcXFByb2plY3RcXE5vYWh3b3JsZFxcY2xpZW50XFxjb21wb25lbnRzXFxCbG9nXFxDb21tZW50c1xcQ29tbWVudEZvcm0udHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUganN4LWExMXkvYW5jaG9yLWhhcy1jb250ZW50ICovXHJcbi8qIGVzbGludC1kaXNhYmxlIGpzeC1hMTF5L2FuY2hvci1pcy12YWxpZCAqL1xyXG5pbXBvcnQgeyBtZXNzYWdlIH0gZnJvbSBcImFudGRcIjtcclxuaW1wb3J0IFRleHRBcmVhIGZyb20gXCJhbnRkL2xpYi9pbnB1dC9UZXh0QXJlYVwiO1xyXG5pbXBvcnQgUmVhY3QsIHsgbWVtbywgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgdXNlRGlzcGF0Y2gsIHVzZVNlbGVjdG9yIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XHJcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XHJcbmltcG9ydCB7IFJvb3RTdGF0ZSB9IGZyb20gXCIuLi8uLi8uLi9AcmVkdWNlcnNcIjtcclxuaW1wb3J0IHsgQUREX0NPTU1FTlRfUkVRVUVTVCB9IGZyb20gXCIuLi8uLi8uLi9AcmVkdWNlcnMvcG9zdFwiO1xyXG5pbXBvcnQgeyBCTFVFX0NPTE9SIH0gZnJvbSBcIi4uLy4uLy4uL2NvbmZpZ1wiO1xyXG5pbXBvcnQgdXNlSW5wdXQgZnJvbSBcIi4uLy4uLy4uL3V0aWwvdXNlSW5wdXRcIjtcclxuaW1wb3J0IENvbW1lbnRzIGZyb20gXCIuL0NvbW1lbnRzXCI7XHJcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9yZWFjdFwiO1xyXG5cclxuY29uc3QgTG9naW5MaW5rID0gc3R5bGVkKExpbmspYFxyXG4gIG1hcmdpbi10b3A6IDFyZW07XHJcbiAgcGFkZGluZzogMC41cmVtIDFyZW07XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICAmOmhvdmVyIHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7QkxVRV9DT0xPUn07XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgTG9naW5TdWdnZXN0TW9kYWwgPSAobG9naW5Nb2RhbDogYm9vbGVhbikgPT4gY3NzYFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG4gICR7bG9naW5Nb2RhbFxyXG4gICAgPyBcInZpc2liaWxpdHk6aW5pdGlhbDsgYW5pbWF0aW9uOjAuNXMgZmFkZUluO1wiXHJcbiAgICA6IFwidmlzaWJpbGl0eTogaGlkZGVuOyBhbmltYXRpb246bm9uZTtcIn1cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NnB4KSB7XHJcbiAgICBoMiB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMC45cmVtO1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuY29uc3QgQ29tbWVudEZvcm1XcmFwcGVyID0gc3R5bGVkLmRpdmBcclxuICBwYWRkaW5nOiAxLjVyZW0gMC41cmVtO1xyXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcclxuICAuY29tbWVudF9pY29uX3dyYXBwZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaDMge1xyXG4gICAgICBmb250LXNpemU6IDAuOXJlbTtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBtYXJnaW4tdG9wOiAwLjhyZW07XHJcbiAgICB9XHJcbiAgfVxyXG4gICY6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjA1KTtcclxuICB9XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzZweCkge1xyXG4gICAgcGFkZGluZy1yaWdodDogMDtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBOb0NvbW1lbnQgPSBjc3NgXHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogMXJlbSAwO1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMDcpO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuYDtcclxuXHJcbmNvbnN0IENvbW1lbnRGb3JtID0gbWVtbygoKSA9PiB7XHJcbiAgY29uc3QgeyB1c2VyIH0gPSB1c2VTZWxlY3Rvcigoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUudXNlcik7XHJcbiAgY29uc3QgeyBwb3N0IH0gPSB1c2VTZWxlY3Rvcigoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUucG9zdCk7XHJcbiAgY29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xyXG4gIGNvbnN0IFtjb250ZW50LCBvbkNoYW5nZUNvbnRlbnQsIHNldENvbnRlbnRdID0gdXNlSW5wdXQoXCJcIik7XHJcbiAgY29uc3QgW2xvZ2luTW9kYWwsIHNldExvZ2luTW9kYWxdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IG9uQ2xpY2tBZGRDb21tZW50ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgaWYgKGNvbnRlbnQgPT09IFwiXCIpIHtcclxuICAgICAgbWVzc2FnZS5lcnJvcihcIlBsZWFzZSB3cml0ZSBjb250ZW50LlwiKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIG1lc3NhZ2UuZXJyb3IoXCJQbGVhc2UgbG9naW4gZmlyc3QuXCIpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBkaXNwYXRjaCh7XHJcbiAgICAgIHR5cGU6IEFERF9DT01NRU5UX1JFUVVFU1QsXHJcbiAgICAgIGRhdGE6IHsgY29udGVudCwgcG9zdElkOiBwb3N0Py5pZCwgdXNlcklkOiB1c2VyLmlkIH0sXHJcbiAgICB9KTtcclxuICAgIHNldENvbnRlbnQoXCJcIik7XHJcbiAgfSwgW2NvbnRlbnQsIGRpc3BhdGNoLCBwb3N0Py5pZCwgc2V0Q29udGVudCwgdXNlcl0pO1xyXG5cclxuICBjb25zdCBoYW5kbGVJbWdFcnJvciA9IChlOiBSZWFjdC5TeW50aGV0aWNFdmVudCkgPT4ge1xyXG4gICAgKGUudGFyZ2V0IGFzIEhUTUxJbWFnZUVsZW1lbnQpLnNyYyA9IGAvaW1hZ2VzL2Jsb2cvZGVmYXVsdC11c2VyLnBuZ2A7XHJcbiAgfTtcclxuXHJcbiAgY29uc3Qgb25DbGlja01vZGFsID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIHNldExvZ2luTW9kYWwodHJ1ZSk7XHJcbiAgICB9XHJcbiAgfSwgW3VzZXJdKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmICghdXNlcikge1xyXG4gICAgICBzZXRDb250ZW50KFwiWW91IGNhbiBjb21tZW50IHdoZW4geW91IGFyZSBsb2dnZWQgaW4hXCIpO1xyXG4gICAgfVxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgY29uc3QgY29tbWVudENvbXBvbmVudCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgIHJldHVybiBwb3N0Py5Db21tZW50cz8ubWFwKCh2LCBpKSA9PiB7XHJcbiAgICAgIHJldHVybiA8Q29tbWVudHMga2V5PXtpfSBjb21tZW50PXt2fSAvPjtcclxuICAgIH0pO1xyXG4gIH0sIFtwb3N0Py5Db21tZW50c10pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbW1lbnRGb3JtV3JhcHBlciBvbkNsaWNrPXtvbkNsaWNrTW9kYWx9IGNsYXNzTmFtZT1cImJsb2dfcG9zdF9jb21tZW50XCIgaWQ9XCJjb21tZW50XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb21tZW50X2ljb25fd3JhcHBlclwiPlxyXG4gICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJjb21tZW50X2ltZ1wiXHJcbiAgICAgICAgICAgIHNyYz17XHJcbiAgICAgICAgICAgICAgdXNlcj8uaWNvblxyXG4gICAgICAgICAgICAgICAgPyB1c2VyLmljb24ucmVwbGFjZSgvXFwvdGh1bWJcXC8vLCBcIi9vcmlnaW5hbC9cIilcclxuICAgICAgICAgICAgICAgIDogXCIvaW1hZ2VzL2Jsb2cvZGVmYXVsdC11c2VyLnBuZ1wiXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYWx0PVwicHJvZmlsZVwiXHJcbiAgICAgICAgICAgIG9uRXJyb3I9e2hhbmRsZUltZ0Vycm9yfVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIDxoMz57dXNlciA/IHVzZXIubmFtZSA6IFwiR3Vlc3RcIn08L2gzPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luTGVmdDogXCIycmVtXCIsIHdpZHRoOiBcIjEwMCVcIiB9fT5cclxuICAgICAgICAgIDxUZXh0QXJlYSB2YWx1ZT17Y29udGVudH0gb25DaGFuZ2U9e29uQ2hhbmdlQ29udGVudH0gY2xhc3NOYW1lPVwiY29tbWVudF90ZXh0QXJlYVwiIC8+XHJcbiAgICAgICAgICA8YnV0dG9uXHJcbiAgICAgICAgICAgIHN0eWxlPXt7IHBhZGRpbmc6IFwiMC41cmVtIDBcIiB9fVxyXG4gICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrQWRkQ29tbWVudH1cclxuICAgICAgICAgICAgY2xhc3NOYW1lPVwicHVibGljX2J0biBjb21tZW50X2J0blwiXHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIENPTU1FTlRcclxuICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY3NzPXtMb2dpblN1Z2dlc3RNb2RhbChsb2dpbk1vZGFsKX0+XHJcbiAgICAgICAgICA8aDI+WW91IGNhbiBjb21tZW50IHdoZW4geW91IGFyZSBsb2dnZWQgaW4g8J+YojwvaDI+XHJcbiAgICAgICAgICA8TG9naW5MaW5rIGhyZWY9XCIvbG9naW5cIj5cclxuICAgICAgICAgICAgPGE+R08gVE8gTE9HSU4gUEFHRTwvYT5cclxuICAgICAgICAgIDwvTG9naW5MaW5rPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbW1lbnRGb3JtV3JhcHBlcj5cclxuICAgICAge3Bvc3Q/LkNvbW1lbnRzID8gKFxyXG4gICAgICAgIGNvbW1lbnRDb21wb25lbnQoKVxyXG4gICAgICApIDogKFxyXG4gICAgICAgIDxkaXYgY3NzPXtOb0NvbW1lbnR9PlxyXG4gICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICBzdHlsZT17eyB3aWR0aDogXCI4MHB4XCIsIG9wYWNpdHk6IFwiMC4zXCIgfX1cclxuICAgICAgICAgICAgYWx0PVwibm9Db21tZW50XCJcclxuICAgICAgICAgICAgc3JjPVwiaHR0cHM6Ly9pY29ucy5pY29uYXJjaGl2ZS5jb20vaWNvbnMvaWNvbnNtaW5kL291dGxpbmUvMjU2L0luYm94LUVtcHR5LWljb24ucG5nXCJcclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8aDM+Tm8gQ29tbWVudHMuLi48L2gzPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICApfVxyXG4gICAgPC8+XHJcbiAgKTtcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBtZW1vKENvbW1lbnRGb3JtKTtcclxuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nconst NoComment = true ? {\n  name: \"bwf6vw\",\n  styles: \"width:100%;padding:1rem 0;border-bottom:1px solid rgba(0, 0, 0, 0.07);position:relative;display:flex;flex-direction:column;align-items:center\"\n} : {\n  name: \"1w7o2yo-NoComment\",\n  styles: \"width:100%;padding:1rem 0;border-bottom:1px solid rgba(0, 0, 0, 0.07);position:relative;display:flex;flex-direction:column;align-items:center;label:NoComment;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENvbW1lbnRzXFxDb21tZW50Rm9ybS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMEVxQiIsImZpbGUiOiJDOlxcVXNlcnNcXE5vYWhcXERlc2t0b3BcXFByb2plY3RcXE5vYWh3b3JsZFxcY2xpZW50XFxjb21wb25lbnRzXFxCbG9nXFxDb21tZW50c1xcQ29tbWVudEZvcm0udHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUganN4LWExMXkvYW5jaG9yLWhhcy1jb250ZW50ICovXHJcbi8qIGVzbGludC1kaXNhYmxlIGpzeC1hMTF5L2FuY2hvci1pcy12YWxpZCAqL1xyXG5pbXBvcnQgeyBtZXNzYWdlIH0gZnJvbSBcImFudGRcIjtcclxuaW1wb3J0IFRleHRBcmVhIGZyb20gXCJhbnRkL2xpYi9pbnB1dC9UZXh0QXJlYVwiO1xyXG5pbXBvcnQgUmVhY3QsIHsgbWVtbywgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgdXNlRGlzcGF0Y2gsIHVzZVNlbGVjdG9yIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XHJcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XHJcbmltcG9ydCB7IFJvb3RTdGF0ZSB9IGZyb20gXCIuLi8uLi8uLi9AcmVkdWNlcnNcIjtcclxuaW1wb3J0IHsgQUREX0NPTU1FTlRfUkVRVUVTVCB9IGZyb20gXCIuLi8uLi8uLi9AcmVkdWNlcnMvcG9zdFwiO1xyXG5pbXBvcnQgeyBCTFVFX0NPTE9SIH0gZnJvbSBcIi4uLy4uLy4uL2NvbmZpZ1wiO1xyXG5pbXBvcnQgdXNlSW5wdXQgZnJvbSBcIi4uLy4uLy4uL3V0aWwvdXNlSW5wdXRcIjtcclxuaW1wb3J0IENvbW1lbnRzIGZyb20gXCIuL0NvbW1lbnRzXCI7XHJcbmltcG9ydCB7IGNzcyB9IGZyb20gXCJAZW1vdGlvbi9yZWFjdFwiO1xyXG5cclxuY29uc3QgTG9naW5MaW5rID0gc3R5bGVkKExpbmspYFxyXG4gIG1hcmdpbi10b3A6IDFyZW07XHJcbiAgcGFkZGluZzogMC41cmVtIDFyZW07XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICAmOmhvdmVyIHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7QkxVRV9DT0xPUn07XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgTG9naW5TdWdnZXN0TW9kYWwgPSAobG9naW5Nb2RhbDogYm9vbGVhbikgPT4gY3NzYFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG4gICR7bG9naW5Nb2RhbFxyXG4gICAgPyBcInZpc2liaWxpdHk6aW5pdGlhbDsgYW5pbWF0aW9uOjAuNXMgZmFkZUluO1wiXHJcbiAgICA6IFwidmlzaWJpbGl0eTogaGlkZGVuOyBhbmltYXRpb246bm9uZTtcIn1cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NnB4KSB7XHJcbiAgICBoMiB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMC45cmVtO1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuY29uc3QgQ29tbWVudEZvcm1XcmFwcGVyID0gc3R5bGVkLmRpdmBcclxuICBwYWRkaW5nOiAxLjVyZW0gMC41cmVtO1xyXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcclxuICAuY29tbWVudF9pY29uX3dyYXBwZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaDMge1xyXG4gICAgICBmb250LXNpemU6IDAuOXJlbTtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBtYXJnaW4tdG9wOiAwLjhyZW07XHJcbiAgICB9XHJcbiAgfVxyXG4gICY6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjA1KTtcclxuICB9XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzZweCkge1xyXG4gICAgcGFkZGluZy1yaWdodDogMDtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBOb0NvbW1lbnQgPSBjc3NgXHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogMXJlbSAwO1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMDcpO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuYDtcclxuXHJcbmNvbnN0IENvbW1lbnRGb3JtID0gbWVtbygoKSA9PiB7XHJcbiAgY29uc3QgeyB1c2VyIH0gPSB1c2VTZWxlY3Rvcigoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUudXNlcik7XHJcbiAgY29uc3QgeyBwb3N0IH0gPSB1c2VTZWxlY3Rvcigoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUucG9zdCk7XHJcbiAgY29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xyXG4gIGNvbnN0IFtjb250ZW50LCBvbkNoYW5nZUNvbnRlbnQsIHNldENvbnRlbnRdID0gdXNlSW5wdXQoXCJcIik7XHJcbiAgY29uc3QgW2xvZ2luTW9kYWwsIHNldExvZ2luTW9kYWxdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IG9uQ2xpY2tBZGRDb21tZW50ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgaWYgKGNvbnRlbnQgPT09IFwiXCIpIHtcclxuICAgICAgbWVzc2FnZS5lcnJvcihcIlBsZWFzZSB3cml0ZSBjb250ZW50LlwiKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIG1lc3NhZ2UuZXJyb3IoXCJQbGVhc2UgbG9naW4gZmlyc3QuXCIpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBkaXNwYXRjaCh7XHJcbiAgICAgIHR5cGU6IEFERF9DT01NRU5UX1JFUVVFU1QsXHJcbiAgICAgIGRhdGE6IHsgY29udGVudCwgcG9zdElkOiBwb3N0Py5pZCwgdXNlcklkOiB1c2VyLmlkIH0sXHJcbiAgICB9KTtcclxuICAgIHNldENvbnRlbnQoXCJcIik7XHJcbiAgfSwgW2NvbnRlbnQsIGRpc3BhdGNoLCBwb3N0Py5pZCwgc2V0Q29udGVudCwgdXNlcl0pO1xyXG5cclxuICBjb25zdCBoYW5kbGVJbWdFcnJvciA9IChlOiBSZWFjdC5TeW50aGV0aWNFdmVudCkgPT4ge1xyXG4gICAgKGUudGFyZ2V0IGFzIEhUTUxJbWFnZUVsZW1lbnQpLnNyYyA9IGAvaW1hZ2VzL2Jsb2cvZGVmYXVsdC11c2VyLnBuZ2A7XHJcbiAgfTtcclxuXHJcbiAgY29uc3Qgb25DbGlja01vZGFsID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIHNldExvZ2luTW9kYWwodHJ1ZSk7XHJcbiAgICB9XHJcbiAgfSwgW3VzZXJdKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmICghdXNlcikge1xyXG4gICAgICBzZXRDb250ZW50KFwiWW91IGNhbiBjb21tZW50IHdoZW4geW91IGFyZSBsb2dnZWQgaW4hXCIpO1xyXG4gICAgfVxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgY29uc3QgY29tbWVudENvbXBvbmVudCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgIHJldHVybiBwb3N0Py5Db21tZW50cz8ubWFwKCh2LCBpKSA9PiB7XHJcbiAgICAgIHJldHVybiA8Q29tbWVudHMga2V5PXtpfSBjb21tZW50PXt2fSAvPjtcclxuICAgIH0pO1xyXG4gIH0sIFtwb3N0Py5Db21tZW50c10pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbW1lbnRGb3JtV3JhcHBlciBvbkNsaWNrPXtvbkNsaWNrTW9kYWx9IGNsYXNzTmFtZT1cImJsb2dfcG9zdF9jb21tZW50XCIgaWQ9XCJjb21tZW50XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb21tZW50X2ljb25fd3JhcHBlclwiPlxyXG4gICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJjb21tZW50X2ltZ1wiXHJcbiAgICAgICAgICAgIHNyYz17XHJcbiAgICAgICAgICAgICAgdXNlcj8uaWNvblxyXG4gICAgICAgICAgICAgICAgPyB1c2VyLmljb24ucmVwbGFjZSgvXFwvdGh1bWJcXC8vLCBcIi9vcmlnaW5hbC9cIilcclxuICAgICAgICAgICAgICAgIDogXCIvaW1hZ2VzL2Jsb2cvZGVmYXVsdC11c2VyLnBuZ1wiXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYWx0PVwicHJvZmlsZVwiXHJcbiAgICAgICAgICAgIG9uRXJyb3I9e2hhbmRsZUltZ0Vycm9yfVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIDxoMz57dXNlciA/IHVzZXIubmFtZSA6IFwiR3Vlc3RcIn08L2gzPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luTGVmdDogXCIycmVtXCIsIHdpZHRoOiBcIjEwMCVcIiB9fT5cclxuICAgICAgICAgIDxUZXh0QXJlYSB2YWx1ZT17Y29udGVudH0gb25DaGFuZ2U9e29uQ2hhbmdlQ29udGVudH0gY2xhc3NOYW1lPVwiY29tbWVudF90ZXh0QXJlYVwiIC8+XHJcbiAgICAgICAgICA8YnV0dG9uXHJcbiAgICAgICAgICAgIHN0eWxlPXt7IHBhZGRpbmc6IFwiMC41cmVtIDBcIiB9fVxyXG4gICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrQWRkQ29tbWVudH1cclxuICAgICAgICAgICAgY2xhc3NOYW1lPVwicHVibGljX2J0biBjb21tZW50X2J0blwiXHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIENPTU1FTlRcclxuICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY3NzPXtMb2dpblN1Z2dlc3RNb2RhbChsb2dpbk1vZGFsKX0+XHJcbiAgICAgICAgICA8aDI+WW91IGNhbiBjb21tZW50IHdoZW4geW91IGFyZSBsb2dnZWQgaW4g8J+YojwvaDI+XHJcbiAgICAgICAgICA8TG9naW5MaW5rIGhyZWY9XCIvbG9naW5cIj5cclxuICAgICAgICAgICAgPGE+R08gVE8gTE9HSU4gUEFHRTwvYT5cclxuICAgICAgICAgIDwvTG9naW5MaW5rPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbW1lbnRGb3JtV3JhcHBlcj5cclxuICAgICAge3Bvc3Q/LkNvbW1lbnRzID8gKFxyXG4gICAgICAgIGNvbW1lbnRDb21wb25lbnQoKVxyXG4gICAgICApIDogKFxyXG4gICAgICAgIDxkaXYgY3NzPXtOb0NvbW1lbnR9PlxyXG4gICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICBzdHlsZT17eyB3aWR0aDogXCI4MHB4XCIsIG9wYWNpdHk6IFwiMC4zXCIgfX1cclxuICAgICAgICAgICAgYWx0PVwibm9Db21tZW50XCJcclxuICAgICAgICAgICAgc3JjPVwiaHR0cHM6Ly9pY29ucy5pY29uYXJjaGl2ZS5jb20vaWNvbnMvaWNvbnNtaW5kL291dGxpbmUvMjU2L0luYm94LUVtcHR5LWljb24ucG5nXCJcclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8aDM+Tm8gQ29tbWVudHMuLi48L2gzPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICApfVxyXG4gICAgPC8+XHJcbiAgKTtcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBtZW1vKENvbW1lbnRGb3JtKTtcclxuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nconst CommentForm = /*#__PURE__*/memo(() => {\n  const {\n    user\n  } = useSelector(state => state.user);\n  const {\n    post\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const [content, onChangeContent, setContent] = useInput(\"\");\n  const {\n    0: loginModal,\n    1: setLoginModal\n  } = useState(false);\n  const onClickAddComment = useCallback(() => {\n    if (content === \"\") {\n      message.error(\"Please write content.\");\n      return;\n    }\n\n    if (!user) {\n      message.error(\"Please login first.\");\n      return;\n    }\n\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content,\n        postId: post === null || post === void 0 ? void 0 : post.id,\n        userId: user.id\n      }\n    });\n    setContent(\"\");\n  }, [content, dispatch, post === null || post === void 0 ? void 0 : post.id, setContent, user]);\n\n  const handleImgError = e => {\n    e.target.src = `/images/blog/default-user.png`;\n  };\n\n  const onClickModal = useCallback(() => {\n    if (!user) {\n      setLoginModal(true);\n    }\n  }, [user]);\n  useEffect(() => {\n    if (!user) {\n      setContent(\"You can comment when you are logged in!\");\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  const commentComponent = useCallback(() => {\n    var _post$Comments;\n\n    return post === null || post === void 0 ? void 0 : (_post$Comments = post.Comments) === null || _post$Comments === void 0 ? void 0 : _post$Comments.map((v, i) => {\n      return ___EmotionJSX(Comments, {\n        key: i,\n        comment: v\n      });\n    });\n  }, [post === null || post === void 0 ? void 0 : post.Comments]);\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(CommentFormWrapper, {\n    onClick: onClickModal,\n    className: \"blog_post_comment\",\n    id: \"comment\"\n  }, ___EmotionJSX(\"div\", {\n    className: \"comment_icon_wrapper\"\n  }, ___EmotionJSX(\"img\", {\n    className: \"comment_img\",\n    src: user !== null && user !== void 0 && user.icon ? user.icon.replace(/\\/thumb\\//, \"/original/\") : \"/images/blog/default-user.png\",\n    alt: \"profile\",\n    onError: handleImgError\n  }), ___EmotionJSX(\"h3\", null, user ? user.name : \"Guest\")), ___EmotionJSX(\"div\", {\n    style: {\n      marginLeft: \"2rem\",\n      width: \"100%\"\n    }\n  }, ___EmotionJSX(TextArea, {\n    value: content,\n    onChange: onChangeContent,\n    className: \"comment_textArea\"\n  }), ___EmotionJSX(\"button\", {\n    style: {\n      padding: \"0.5rem 0\"\n    },\n    onClick: onClickAddComment,\n    className: \"public_btn comment_btn\"\n  }, \"COMMENT\")), ___EmotionJSX(\"div\", {\n    css: LoginSuggestModal(loginModal)\n  }, ___EmotionJSX(\"h2\", null, \"You can comment when you are logged in \\uD83D\\uDE22\"), ___EmotionJSX(LoginLink, {\n    href: \"/login\"\n  }, ___EmotionJSX(\"a\", null, \"GO TO LOGIN PAGE\")))), post !== null && post !== void 0 && post.Comments ? commentComponent() : ___EmotionJSX(\"div\", {\n    css: NoComment\n  }, ___EmotionJSX(\"img\", {\n    style: {\n      width: \"80px\",\n      opacity: \"0.3\"\n    },\n    alt: \"noComment\",\n    src: \"https://icons.iconarchive.com/icons/iconsmind/outline/256/Inbox-Empty-icon.png\"\n  }), ___EmotionJSX(\"h3\", null, \"No Comments...\")));\n});\nexport default /*#__PURE__*/memo(CommentForm);","map":{"version":3,"sources":["C:/Users/Noah/Desktop/Project/Noahworld/client/components/Blog/Comments/CommentForm.tsx"],"names":["message","TextArea","React","memo","useCallback","useEffect","useState","useDispatch","useSelector","Link","ADD_COMMENT_REQUEST","BLUE_COLOR","useInput","Comments","css","LoginLink","LoginSuggestModal","loginModal","CommentFormWrapper","NoComment","CommentForm","user","state","post","dispatch","content","onChangeContent","setContent","setLoginModal","onClickAddComment","error","type","data","postId","id","userId","handleImgError","e","target","src","onClickModal","commentComponent","map","v","i","icon","replace","name","marginLeft","width","padding","opacity"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-has-content */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { message } from \"antd\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport React, { memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Link from \"next/link\";\r\nimport styled from \"@emotion/styled\";\r\nimport { RootState } from \"../../../@reducers\";\r\nimport { ADD_COMMENT_REQUEST } from \"../../../@reducers/post\";\r\nimport { BLUE_COLOR } from \"../../../config\";\r\nimport useInput from \"../../../util/useInput\";\r\nimport Comments from \"./Comments\";\r\nimport { css } from \"@emotion/react\";\r\n\r\nconst LoginLink = styled(Link)`\r\n  margin-top: 1rem;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 5px;\r\n  transition: all 0.3s;\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  font-weight: bold;\r\n  &:hover {\r\n    color: white;\r\n    background-color: ${BLUE_COLOR};\r\n  }\r\n`;\r\n\r\nconst LoginSuggestModal = (loginModal: boolean) => css`\r\n  display: flex;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  ${loginModal\r\n    ? \"visibility:initial; animation:0.5s fadeIn;\"\r\n    : \"visibility: hidden; animation:none;\"}\r\n  @media only screen and (max-width: 576px) {\r\n    h2 {\r\n      font-size: 0.9rem;\r\n    }\r\n  }\r\n`;\r\nconst CommentFormWrapper = styled.div`\r\n  padding: 1.5rem 0.5rem;\r\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  position: relative;\r\n  transition: all 0.3s;\r\n  .comment_icon_wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    h3 {\r\n      font-size: 0.9rem;\r\n      text-align: center;\r\n      margin-top: 0.8rem;\r\n    }\r\n  }\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.05);\r\n  }\r\n  @media only screen and (max-width: 576px) {\r\n    padding-right: 0;\r\n  }\r\n`;\r\n\r\nconst NoComment = css`\r\n  width: 100%;\r\n  padding: 1rem 0;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.07);\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst CommentForm = memo(() => {\r\n  const { user } = useSelector((state: RootState) => state.user);\r\n  const { post } = useSelector((state: RootState) => state.post);\r\n  const dispatch = useDispatch();\r\n  const [content, onChangeContent, setContent] = useInput(\"\");\r\n  const [loginModal, setLoginModal] = useState(false);\r\n  const onClickAddComment = useCallback(() => {\r\n    if (content === \"\") {\r\n      message.error(\"Please write content.\");\r\n      return;\r\n    }\r\n    if (!user) {\r\n      message.error(\"Please login first.\");\r\n      return;\r\n    }\r\n    dispatch({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: { content, postId: post?.id, userId: user.id },\r\n    });\r\n    setContent(\"\");\r\n  }, [content, dispatch, post?.id, setContent, user]);\r\n\r\n  const handleImgError = (e: React.SyntheticEvent) => {\r\n    (e.target as HTMLImageElement).src = `/images/blog/default-user.png`;\r\n  };\r\n\r\n  const onClickModal = useCallback(() => {\r\n    if (!user) {\r\n      setLoginModal(true);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      setContent(\"You can comment when you are logged in!\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const commentComponent = useCallback(() => {\r\n    return post?.Comments?.map((v, i) => {\r\n      return <Comments key={i} comment={v} />;\r\n    });\r\n  }, [post?.Comments]);\r\n\r\n  return (\r\n    <>\r\n      <CommentFormWrapper onClick={onClickModal} className=\"blog_post_comment\" id=\"comment\">\r\n        <div className=\"comment_icon_wrapper\">\r\n          <img\r\n            className=\"comment_img\"\r\n            src={\r\n              user?.icon\r\n                ? user.icon.replace(/\\/thumb\\//, \"/original/\")\r\n                : \"/images/blog/default-user.png\"\r\n            }\r\n            alt=\"profile\"\r\n            onError={handleImgError}\r\n          />\r\n          <h3>{user ? user.name : \"Guest\"}</h3>\r\n        </div>\r\n        <div style={{ marginLeft: \"2rem\", width: \"100%\" }}>\r\n          <TextArea value={content} onChange={onChangeContent} className=\"comment_textArea\" />\r\n          <button\r\n            style={{ padding: \"0.5rem 0\" }}\r\n            onClick={onClickAddComment}\r\n            className=\"public_btn comment_btn\"\r\n          >\r\n            COMMENT\r\n          </button>\r\n        </div>\r\n        <div css={LoginSuggestModal(loginModal)}>\r\n          <h2>You can comment when you are logged in 😢</h2>\r\n          <LoginLink href=\"/login\">\r\n            <a>GO TO LOGIN PAGE</a>\r\n          </LoginLink>\r\n        </div>\r\n      </CommentFormWrapper>\r\n      {post?.Comments ? (\r\n        commentComponent()\r\n      ) : (\r\n        <div css={NoComment}>\r\n          <img\r\n            style={{ width: \"80px\", opacity: \"0.3\" }}\r\n            alt=\"noComment\"\r\n            src=\"https://icons.iconarchive.com/icons/iconsmind/outline/256/Inbox-Empty-icon.png\"\r\n          />\r\n          <h3>No Comments...</h3>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default memo(CommentForm);\r\n"]},"metadata":{},"sourceType":"module"}