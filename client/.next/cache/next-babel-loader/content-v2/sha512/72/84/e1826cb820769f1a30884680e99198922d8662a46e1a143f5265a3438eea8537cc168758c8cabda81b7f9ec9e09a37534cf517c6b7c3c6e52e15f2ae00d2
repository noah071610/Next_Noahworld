{"ast":null,"code":"import React, { memo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Divider } from \"antd\";\nimport Link from \"next/link\";\nimport CountUp from \"react-countup\";\nimport MainArticle from \"../components/Blog/Articles/MainArticle\";\nimport MostArticle from \"../components/Blog/Articles/MostArticle\";\nimport ClassCard from \"../components/Blog/Class/ClassCard\";\nimport UserProfile from \"../components/Blog/Profile/UserProfile\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nvar BlogMainPage = function BlogMainPage() {\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      user = _useSelector.user;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      techPosts = _useSelector2.techPosts,\n      dailyPosts = _useSelector2.dailyPosts,\n      hashtags = _useSelector2.hashtags,\n      mostLikedPost = _useSelector2.mostLikedPost,\n      mostViewedPost = _useSelector2.mostViewedPost,\n      mostCommentedPost = _useSelector2.mostCommentedPost;\n\n  return ___EmotionJSX(React.Fragment, null, user && ___EmotionJSX(UserProfile, null), ___EmotionJSX(\"div\", {\n    className: \"blog\"\n  }, ___EmotionJSX(\"h2\", {\n    className: \"blog_category_header header_small_on\"\n  }, \"HOME\", techPosts && dailyPosts && ___EmotionJSX(\"span\", {\n    className: \"blog_category_count\"\n  }, ___EmotionJSX(\"br\", {\n    className: \"br_category\"\n  }), \"+\\xA0\", ___EmotionJSX(CountUp, {\n    duration: 4,\n    start: 0,\n    end: techPosts.concat(dailyPosts).length\n  }), \"\\xA0posts.\\xA0+\\xA0\", ___EmotionJSX(CountUp, {\n    duration: 4,\n    start: 0,\n    end: hashtags === null || hashtags === void 0 ? void 0 : hashtags.length\n  }), \"\\xA0hashtags.\")), ___EmotionJSX(\"section\", {\n    className: \"blog_main\"\n  }, ___EmotionJSX(Divider, {\n    orientation: \"left\"\n  }, ___EmotionJSX(Link, {\n    href: \"/tech\"\n  }, ___EmotionJSX(\"a\", null, \"Information Technology\"))), ___EmotionJSX(MainArticle, {\n    category: techPosts\n  }), ___EmotionJSX(Divider, {\n    orientation: \"left\"\n  }, ___EmotionJSX(Link, {\n    href: \"/daily\"\n  }, ___EmotionJSX(\"a\", null, \"Daily\"))), ___EmotionJSX(MainArticle, {\n    category: dailyPosts\n  })), ___EmotionJSX(\"aside\", {\n    className: \"blog_aside\"\n  }, ___EmotionJSX(MostArticle, {\n    mostPost: mostLikedPost,\n    src: \"https://img.icons8.com/doodle/96/000000/trophy--v1.png\",\n    desc: \"Most Liked\",\n    type: \"like\",\n    aside: true\n  }), ___EmotionJSX(MostArticle, {\n    mostPost: mostViewedPost,\n    src: \"https://img.icons8.com/doodle/96/000000/goal.png\",\n    desc: \"Most View\",\n    type: \"view\",\n    aside: true\n  }), ___EmotionJSX(MostArticle, {\n    mostPost: mostCommentedPost,\n    src: \"https://img.icons8.com/doodle/96/000000/speech-bubble-with-dots.png\",\n    desc: \"Most Commented\",\n    type: \"comments\",\n    aside: true\n  }), ___EmotionJSX(Divider, null), ___EmotionJSX(MostArticle, {\n    hashtags: hashtags,\n    src: \"https://img.icons8.com/ios/100/000000/hashtag.png\",\n    desc: \"Hashtags\"\n  }))), ___EmotionJSX(\"section\", {\n    className: \"blog_md_aside\"\n  }, ___EmotionJSX(Divider, null), ___EmotionJSX(MostArticle, {\n    mostPost: mostLikedPost,\n    src: \"https://img.icons8.com/doodle/96/000000/trophy--v1.png\",\n    desc: \"Most Liked\",\n    type: \"like\"\n  }), ___EmotionJSX(MostArticle, {\n    mostPost: mostViewedPost,\n    src: \"https://img.icons8.com/doodle/96/000000/goal.png\",\n    desc: \"Most View\",\n    type: \"view\"\n  }), ___EmotionJSX(MostArticle, {\n    mostPost: mostCommentedPost,\n    src: \"https://img.icons8.com/doodle/96/000000/speech-bubble-with-dots.png\",\n    desc: \"Most Commented\",\n    type: \"comments\"\n  }), ___EmotionJSX(Divider, null), ___EmotionJSX(MostArticle, {\n    hashtags: hashtags,\n    src: \"https://img.icons8.com/ios/100/000000/hashtag.png\",\n    desc: \"Hashtags\"\n  })), ___EmotionJSX(ClassCard, null));\n};\n\nexport var __N_SSP = true;\nexport default /*#__PURE__*/memo(BlogMainPage);","map":{"version":3,"sources":["C:/Users/Noah/Desktop/Project/Noahworld/client/pages/index.tsx"],"names":["React","memo","useSelector","Divider","Link","CountUp","MainArticle","MostArticle","ClassCard","UserProfile","BlogMainPage","state","user","post","techPosts","dailyPosts","hashtags","mostLikedPost","mostViewedPost","mostCommentedPost","concat","length"],"mappings":"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","sourcesContent":["import React, { memo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Divider } from \"antd\";\nimport Link from \"next/link\";\nimport { CHAGE_HEADER } from \"../@reducers/blog\";\nimport { LOAD_POSTS_REQUEST } from \"../@reducers/post\";\nimport { LOAD_INFO_REQUEST } from \"../@reducers/user\";\nimport CountUp from \"react-countup\";\nimport { RootState } from \"../@reducers\";\nimport wrapper from \"../@store/configureStore\";\nimport axios from \"axios\";\nimport { END } from \"@redux-saga/core\";\nimport { IStore } from \"../types\";\nimport MainArticle from \"../components/Blog/Articles/MainArticle\";\nimport MostArticle from \"../components/Blog/Articles/MostArticle\";\nimport ClassCard from \"../components/Blog/Class/ClassCard\";\nimport UserProfile from \"../components/Blog/Profile/UserProfile\";\n\nconst BlogMainPage = () => {\n  const { user } = useSelector((state: RootState) => state.user);\n  const { techPosts, dailyPosts, hashtags, mostLikedPost, mostViewedPost, mostCommentedPost } =\n    useSelector((state: RootState) => state.post);\n\n  return (\n    <>\n      {user && <UserProfile />}\n      <div className=\"blog\">\n        <h2 className=\"blog_category_header header_small_on\">\n          HOME\n          {techPosts && dailyPosts && (\n            <span className=\"blog_category_count\">\n              <br className=\"br_category\" />\n              +&nbsp;\n              <CountUp duration={4} start={0} end={techPosts.concat(dailyPosts).length} />\n              &nbsp;posts.&nbsp;+&nbsp;\n              <CountUp duration={4} start={0} end={hashtags?.length} />\n              &nbsp;hashtags.\n            </span>\n          )}\n        </h2>\n        {/*Main Manu*/}\n        <section className=\"blog_main\">\n          <Divider orientation=\"left\">\n            <Link href=\"/tech\">\n              <a>Information Technology</a>\n            </Link>\n          </Divider>\n          <MainArticle category={techPosts} />\n          <Divider orientation=\"left\">\n            <Link href=\"/daily\">\n              <a>Daily</a>\n            </Link>\n          </Divider>\n          <MainArticle category={dailyPosts} />\n        </section>\n        {/*Aside Manu*/}\n        <aside className=\"blog_aside\">\n          <MostArticle\n            mostPost={mostLikedPost}\n            src=\"https://img.icons8.com/doodle/96/000000/trophy--v1.png\"\n            desc=\"Most Liked\"\n            type=\"like\"\n            aside={true}\n          />\n          <MostArticle\n            mostPost={mostViewedPost}\n            src=\"https://img.icons8.com/doodle/96/000000/goal.png\"\n            desc=\"Most View\"\n            type=\"view\"\n            aside={true}\n          />\n          <MostArticle\n            mostPost={mostCommentedPost}\n            src=\"https://img.icons8.com/doodle/96/000000/speech-bubble-with-dots.png\"\n            desc=\"Most Commented\"\n            type=\"comments\"\n            aside={true}\n          />\n          <Divider />\n          <MostArticle\n            hashtags={hashtags}\n            src=\"https://img.icons8.com/ios/100/000000/hashtag.png\"\n            desc=\"Hashtags\"\n          />\n        </aside>\n      </div>\n      {/*Aside Manu When SM*/}\n      <section className=\"blog_md_aside\">\n        <Divider />\n        <MostArticle\n          mostPost={mostLikedPost}\n          src=\"https://img.icons8.com/doodle/96/000000/trophy--v1.png\"\n          desc=\"Most Liked\"\n          type=\"like\"\n        />\n        <MostArticle\n          mostPost={mostViewedPost}\n          src=\"https://img.icons8.com/doodle/96/000000/goal.png\"\n          desc=\"Most View\"\n          type=\"view\"\n        />\n        <MostArticle\n          mostPost={mostCommentedPost}\n          src=\"https://img.icons8.com/doodle/96/000000/speech-bubble-with-dots.png\"\n          desc=\"Most Commented\"\n          type=\"comments\"\n        />\n        <Divider />\n        <MostArticle\n          hashtags={hashtags}\n          src=\"https://img.icons8.com/ios/100/000000/hashtag.png\"\n          desc=\"Hashtags\"\n        />\n      </section>\n      <ClassCard />\n    </>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = \"\";\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST,\n  });\n  context.store.dispatch({\n    type: LOAD_INFO_REQUEST,\n  });\n  context.store.dispatch({\n    type: CHAGE_HEADER,\n    header: \"blog\",\n  });\n  context.store.dispatch(END);\n  await (context.store as IStore).sagaTask.toPromise();\n});\n\nexport default memo(BlogMainPage);\n"]},"metadata":{},"sourceType":"module"}