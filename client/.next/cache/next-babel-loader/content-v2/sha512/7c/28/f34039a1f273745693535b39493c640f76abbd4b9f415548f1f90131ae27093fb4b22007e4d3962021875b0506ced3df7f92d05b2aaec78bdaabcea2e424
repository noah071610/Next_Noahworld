{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Noah/Desktop/Project/Noahworld/client/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addComment),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(removeComment),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(editComment),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(likeComment),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(unlikeComment),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(addSubComment),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(removeSubComment),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(editSubComment),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddComment),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemoveComment),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchEditComment),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchLikeComment),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnlikeComment),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddSubComment),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemoveSubComment),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(watchEditSubComment),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(commentSaga);\n\nimport { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LIKE_COMMENT_REQUEST, UNLIKE_COMMENT_REQUEST, ADD_SUB_COMMENT_REQUEST, REMOVE_SUB_COMMENT_REQUEST, EDIT_SUB_COMMENT_REQUEST, REMOVE_COMMENT_REQUEST, EDIT_COMMENT_REQUEST, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_CLEAR, ADD_COMMENT_FAILURE, REMOVE_COMMENT_SUCCESS, REMOVE_COMMENT_FAILURE, EDIT_COMMENT_SUCCESS, EDIT_COMMENT_CLEAR, EDIT_COMMENT_FAILURE, LIKE_COMMENT_SUCCESS, LIKE_COMMENT_FAILURE, UNLIKE_COMMENT_SUCCESS, UNLIKE_COMMENT_FAILURE, ADD_SUB_COMMENT_SUCCESS, ADD_SUB_COMMENT_CLEAR, ADD_SUB_COMMENT_FAILURE, REMOVE_SUB_COMMENT_SUCCESS, REMOVE_SUB_COMMENT_FAILURE, EDIT_SUB_COMMENT_SUCCESS, EDIT_SUB_COMMENT_CLEAR, EDIT_SUB_COMMENT_FAILURE } from \"../@reducers/post\";\n\nfunction addCommentAPI(data) {\n  return axios.post(\"/api/comment/\".concat(data.postId), data);\n}\n\nfunction addComment(action) {\n  var _yield$call, data;\n\n  return _regeneratorRuntime.wrap(function addComment$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addCommentAPI, action.data);\n\n        case 3:\n          _yield$call = _context.sent;\n          data = _yield$call.data;\n          _context.next = 7;\n          return put({\n            type: ADD_COMMENT_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context.next = 9;\n          return delay(3000);\n\n        case 9:\n          _context.next = 11;\n          return put({\n            type: ADD_COMMENT_CLEAR\n          });\n\n        case 11:\n          _context.next = 18;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 18;\n          return put({\n            type: ADD_COMMENT_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 13]]);\n}\n\nfunction removeCommentAPI(data) {\n  return axios[\"delete\"](\"/api/comment/\".concat(data));\n}\n\nfunction removeComment(action) {\n  var _yield$call2, data;\n\n  return _regeneratorRuntime.wrap(function removeComment$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(removeCommentAPI, action.data);\n\n        case 3:\n          _yield$call2 = _context2.sent;\n          data = _yield$call2.data;\n          _context2.next = 7;\n          return put({\n            type: REMOVE_COMMENT_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context2.next = 14;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          _context2.next = 14;\n          return put({\n            type: REMOVE_COMMENT_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\n\nfunction editCommentAPI(data) {\n  return axios.post(\"api/comment/edit/\".concat(data.CommentId, \"/\"), data);\n}\n\nfunction editComment(action) {\n  var _yield$call3, data;\n\n  return _regeneratorRuntime.wrap(function editComment$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(editCommentAPI, action.data);\n\n        case 3:\n          _yield$call3 = _context3.sent;\n          data = _yield$call3.data;\n          _context3.next = 7;\n          return put({\n            type: EDIT_COMMENT_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context3.next = 9;\n          return delay(3000);\n\n        case 9:\n          _context3.next = 11;\n          return put({\n            type: EDIT_COMMENT_CLEAR\n          });\n\n        case 11:\n          _context3.next = 17;\n          break;\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 17;\n          return put({\n            type: EDIT_COMMENT_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 13]]);\n}\n\nfunction likeCommentAPI(data) {\n  return axios.patch(\"/api/comment/like/\".concat(data.UserId, \"/\").concat(data.CommentId));\n}\n\nfunction likeComment(action) {\n  var _yield$call4, data;\n\n  return _regeneratorRuntime.wrap(function likeComment$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(likeCommentAPI, action.data);\n\n        case 3:\n          _yield$call4 = _context4.sent;\n          data = _yield$call4.data;\n          _context4.next = 7;\n          return put({\n            type: LIKE_COMMENT_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context4.next = 14;\n          break;\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error(_context4.t0);\n          _context4.next = 14;\n          return put({\n            type: LIKE_COMMENT_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 9]]);\n}\n\nfunction unlikeCommentAPI(data) {\n  return axios[\"delete\"](\"/api/comment/unlike/\".concat(data.UserId, \"/\").concat(data.CommentId));\n}\n\nfunction unlikeComment(action) {\n  var _yield$call5, data;\n\n  return _regeneratorRuntime.wrap(function unlikeComment$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(unlikeCommentAPI, action.data);\n\n        case 3:\n          _yield$call5 = _context5.sent;\n          data = _yield$call5.data;\n          _context5.next = 7;\n          return put({\n            type: UNLIKE_COMMENT_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context5.next = 14;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          _context5.next = 14;\n          return put({\n            type: UNLIKE_COMMENT_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\n\nfunction addSubCommentAPI(data) {\n  return axios.post(\"/api/comment/sub/\".concat(data.CommentId), data);\n}\n\nfunction addSubComment(action) {\n  var _yield$call6, data;\n\n  return _regeneratorRuntime.wrap(function addSubComment$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(addSubCommentAPI, action.data);\n\n        case 3:\n          _yield$call6 = _context6.sent;\n          data = _yield$call6.data;\n          _context6.next = 7;\n          return put({\n            type: ADD_SUB_COMMENT_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context6.next = 9;\n          return delay(3000);\n\n        case 9:\n          _context6.next = 11;\n          return put({\n            type: ADD_SUB_COMMENT_CLEAR\n          });\n\n        case 11:\n          _context6.next = 18;\n          break;\n\n        case 13:\n          _context6.prev = 13;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.log(_context6.t0);\n          _context6.next = 18;\n          return put({\n            type: ADD_SUB_COMMENT_FAILURE,\n            error: _context6.t0.response.data\n          });\n\n        case 18:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 13]]);\n}\n\nfunction removeSubCommentAPI(data) {\n  return axios[\"delete\"](\"/api/comment/sub/\".concat(data.CommentId, \"/\").concat(data.SubCommentId));\n}\n\nfunction removeSubComment(action) {\n  var _yield$call7, data;\n\n  return _regeneratorRuntime.wrap(function removeSubComment$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(removeSubCommentAPI, action.data);\n\n        case 3:\n          _yield$call7 = _context7.sent;\n          data = _yield$call7.data;\n          _context7.next = 7;\n          return put({\n            type: REMOVE_SUB_COMMENT_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context7.next = 14;\n          break;\n\n        case 9:\n          _context7.prev = 9;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.log(_context7.t0);\n          _context7.next = 14;\n          return put({\n            type: REMOVE_SUB_COMMENT_FAILURE,\n            error: _context7.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 9]]);\n}\n\nfunction editSubCommentAPI(data) {\n  return axios.post(\"api/comment/sub/edit/\".concat(data.CommentId, \"/\").concat(data.SubCommentId), data);\n}\n\nfunction editSubComment(action) {\n  var _yield$call8, data;\n\n  return _regeneratorRuntime.wrap(function editSubComment$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(editSubCommentAPI, action.data);\n\n        case 3:\n          _yield$call8 = _context8.sent;\n          data = _yield$call8.data;\n          console.log(data);\n          _context8.next = 8;\n          return put({\n            type: EDIT_SUB_COMMENT_SUCCESS,\n            data: data\n          });\n\n        case 8:\n          _context8.next = 10;\n          return delay(3000);\n\n        case 10:\n          _context8.next = 12;\n          return put({\n            type: EDIT_SUB_COMMENT_CLEAR\n          });\n\n        case 12:\n          _context8.next = 18;\n          break;\n\n        case 14:\n          _context8.prev = 14;\n          _context8.t0 = _context8[\"catch\"](0);\n          _context8.next = 18;\n          return put({\n            type: EDIT_SUB_COMMENT_FAILURE,\n            error: _context8.t0.response.data\n          });\n\n        case 18:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 14]]);\n}\n\nfunction watchAddComment() {\n  return _regeneratorRuntime.wrap(function watchAddComment$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(ADD_COMMENT_REQUEST, addComment);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchRemoveComment() {\n  return _regeneratorRuntime.wrap(function watchRemoveComment$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(REMOVE_COMMENT_REQUEST, removeComment);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction watchEditComment() {\n  return _regeneratorRuntime.wrap(function watchEditComment$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(EDIT_COMMENT_REQUEST, editComment);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction watchLikeComment() {\n  return _regeneratorRuntime.wrap(function watchLikeComment$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(LIKE_COMMENT_REQUEST, likeComment);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction watchUnlikeComment() {\n  return _regeneratorRuntime.wrap(function watchUnlikeComment$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeLatest(UNLIKE_COMMENT_REQUEST, unlikeComment);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction watchAddSubComment() {\n  return _regeneratorRuntime.wrap(function watchAddSubComment$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(ADD_SUB_COMMENT_REQUEST, addSubComment);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction watchRemoveSubComment() {\n  return _regeneratorRuntime.wrap(function watchRemoveSubComment$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeLatest(REMOVE_SUB_COMMENT_REQUEST, removeSubComment);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\n\nfunction watchEditSubComment() {\n  return _regeneratorRuntime.wrap(function watchEditSubComment$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeLatest(EDIT_SUB_COMMENT_REQUEST, editSubComment);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nexport default function commentSaga() {\n  return _regeneratorRuntime.wrap(function commentSaga$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return all([fork(watchAddComment), fork(watchRemoveComment), fork(watchEditComment), fork(watchLikeComment), fork(watchUnlikeComment), fork(watchAddSubComment), fork(watchRemoveSubComment), fork(watchEditSubComment)]);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}","map":{"version":3,"sources":["C:/Users/Noah/Desktop/Project/Noahworld/client/@saga/comment.ts"],"names":["addComment","removeComment","editComment","likeComment","unlikeComment","addSubComment","removeSubComment","editSubComment","watchAddComment","watchRemoveComment","watchEditComment","watchLikeComment","watchUnlikeComment","watchAddSubComment","watchRemoveSubComment","watchEditSubComment","commentSaga","all","call","delay","fork","put","takeLatest","axios","LIKE_COMMENT_REQUEST","UNLIKE_COMMENT_REQUEST","ADD_SUB_COMMENT_REQUEST","REMOVE_SUB_COMMENT_REQUEST","EDIT_SUB_COMMENT_REQUEST","REMOVE_COMMENT_REQUEST","EDIT_COMMENT_REQUEST","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_CLEAR","ADD_COMMENT_FAILURE","REMOVE_COMMENT_SUCCESS","REMOVE_COMMENT_FAILURE","EDIT_COMMENT_SUCCESS","EDIT_COMMENT_CLEAR","EDIT_COMMENT_FAILURE","LIKE_COMMENT_SUCCESS","LIKE_COMMENT_FAILURE","UNLIKE_COMMENT_SUCCESS","UNLIKE_COMMENT_FAILURE","ADD_SUB_COMMENT_SUCCESS","ADD_SUB_COMMENT_CLEAR","ADD_SUB_COMMENT_FAILURE","REMOVE_SUB_COMMENT_SUCCESS","REMOVE_SUB_COMMENT_FAILURE","EDIT_SUB_COMMENT_SUCCESS","EDIT_SUB_COMMENT_CLEAR","EDIT_SUB_COMMENT_FAILURE","addCommentAPI","data","post","postId","action","type","console","log","error","response","removeCommentAPI","editCommentAPI","CommentId","likeCommentAPI","patch","UserId","unlikeCommentAPI","addSubCommentAPI","removeSubCommentAPI","SubCommentId","editSubCommentAPI"],"mappings":"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","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LIKE_COMMENT_REQUEST,\r\n  UNLIKE_COMMENT_REQUEST,\r\n  ADD_SUB_COMMENT_REQUEST,\r\n  REMOVE_SUB_COMMENT_REQUEST,\r\n  EDIT_SUB_COMMENT_REQUEST,\r\n  REMOVE_COMMENT_REQUEST,\r\n  EDIT_COMMENT_REQUEST,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_COMMENT_CLEAR,\r\n  ADD_COMMENT_FAILURE,\r\n  REMOVE_COMMENT_SUCCESS,\r\n  REMOVE_COMMENT_FAILURE,\r\n  EDIT_COMMENT_SUCCESS,\r\n  EDIT_COMMENT_CLEAR,\r\n  EDIT_COMMENT_FAILURE,\r\n  LIKE_COMMENT_SUCCESS,\r\n  LIKE_COMMENT_FAILURE,\r\n  UNLIKE_COMMENT_SUCCESS,\r\n  UNLIKE_COMMENT_FAILURE,\r\n  ADD_SUB_COMMENT_SUCCESS,\r\n  ADD_SUB_COMMENT_CLEAR,\r\n  ADD_SUB_COMMENT_FAILURE,\r\n  REMOVE_SUB_COMMENT_SUCCESS,\r\n  REMOVE_SUB_COMMENT_FAILURE,\r\n  EDIT_SUB_COMMENT_SUCCESS,\r\n  EDIT_SUB_COMMENT_CLEAR,\r\n  EDIT_SUB_COMMENT_FAILURE,\r\n} from \"../@reducers/post\";\r\nimport {\r\n  AddCommentData,\r\n  AddCommentInter,\r\n  AddSubCommentData,\r\n  AddSubCommentInter,\r\n  EditCommentData,\r\n  EditCommentInter,\r\n  EditSubCommentInter,\r\n  LikeCommentData,\r\n  LikeCommentInter,\r\n  RemoveCommentInter,\r\n  RemoveSubCommentInter,\r\n  SubCommentData,\r\n  UnlikeCommentInter,\r\n} from \"./@sagaTypes\";\r\n\r\nfunction addCommentAPI(data: AddCommentData) {\r\n  return axios.post(`/api/comment/${data.postId}`, data);\r\n}\r\n\r\nfunction* addComment(action: AddCommentInter) {\r\n  try {\r\n    const { data } = yield call(addCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data,\r\n    });\r\n    yield delay(3000);\r\n    yield put({\r\n      type: ADD_COMMENT_CLEAR,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removeCommentAPI(data: number) {\r\n  return axios.delete(`/api/comment/${data}`);\r\n}\r\n\r\nfunction* removeComment(action: RemoveCommentInter) {\r\n  try {\r\n    const { data } = yield call(removeCommentAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_COMMENT_SUCCESS,\r\n      data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put({\r\n      type: REMOVE_COMMENT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction editCommentAPI(data: EditCommentData) {\r\n  return axios.post(`api/comment/edit/${data.CommentId}/`, data);\r\n}\r\n\r\nfunction* editComment(action: EditCommentInter) {\r\n  try {\r\n    const { data } = yield call(editCommentAPI, action.data);\r\n    yield put({\r\n      type: EDIT_COMMENT_SUCCESS,\r\n      data,\r\n    });\r\n    yield delay(3000);\r\n    yield put({\r\n      type: EDIT_COMMENT_CLEAR,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: EDIT_COMMENT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction likeCommentAPI(data: LikeCommentData) {\r\n  return axios.patch(`/api/comment/like/${data.UserId}/${data.CommentId}`);\r\n}\r\n\r\nfunction* likeComment(action: LikeCommentInter) {\r\n  try {\r\n    const { data } = yield call(likeCommentAPI, action.data);\r\n    yield put({\r\n      type: LIKE_COMMENT_SUCCESS,\r\n      data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LIKE_COMMENT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unlikeCommentAPI(data: LikeCommentData) {\r\n  return axios.delete(`/api/comment/unlike/${data.UserId}/${data.CommentId}`);\r\n}\r\n\r\nfunction* unlikeComment(action: UnlikeCommentInter) {\r\n  try {\r\n    const { data } = yield call(unlikeCommentAPI, action.data);\r\n    yield put({\r\n      type: UNLIKE_COMMENT_SUCCESS,\r\n      data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UNLIKE_COMMENT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addSubCommentAPI(data: AddSubCommentData) {\r\n  return axios.post(`/api/comment/sub/${data.CommentId}`, data);\r\n}\r\n\r\nfunction* addSubComment(action: AddSubCommentInter) {\r\n  try {\r\n    const { data } = yield call(addSubCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_SUB_COMMENT_SUCCESS,\r\n      data,\r\n    });\r\n    yield delay(3000);\r\n    yield put({\r\n      type: ADD_SUB_COMMENT_CLEAR,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put({\r\n      type: ADD_SUB_COMMENT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removeSubCommentAPI(data: SubCommentData) {\r\n  return axios.delete(`/api/comment/sub/${data.CommentId}/${data.SubCommentId}`);\r\n}\r\n\r\nfunction* removeSubComment(action: RemoveSubCommentInter) {\r\n  try {\r\n    const { data } = yield call(removeSubCommentAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_SUB_COMMENT_SUCCESS,\r\n      data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put({\r\n      type: REMOVE_SUB_COMMENT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction editSubCommentAPI(data: SubCommentData) {\r\n  return axios.post(`api/comment/sub/edit/${data.CommentId}/${data.SubCommentId}`, data);\r\n}\r\n\r\nfunction* editSubComment(action: EditSubCommentInter) {\r\n  try {\r\n    const { data } = yield call(editSubCommentAPI, action.data);\r\n    console.log(data);\r\n    yield put({\r\n      type: EDIT_SUB_COMMENT_SUCCESS,\r\n      data,\r\n    });\r\n    yield delay(3000);\r\n    yield put({\r\n      type: EDIT_SUB_COMMENT_CLEAR,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: EDIT_SUB_COMMENT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\nfunction* watchRemoveComment() {\r\n  yield takeLatest(REMOVE_COMMENT_REQUEST, removeComment);\r\n}\r\nfunction* watchEditComment() {\r\n  yield takeLatest(EDIT_COMMENT_REQUEST, editComment);\r\n}\r\nfunction* watchLikeComment() {\r\n  yield takeLatest(LIKE_COMMENT_REQUEST, likeComment);\r\n}\r\nfunction* watchUnlikeComment() {\r\n  yield takeLatest(UNLIKE_COMMENT_REQUEST, unlikeComment);\r\n}\r\nfunction* watchAddSubComment() {\r\n  yield takeLatest(ADD_SUB_COMMENT_REQUEST, addSubComment);\r\n}\r\nfunction* watchRemoveSubComment() {\r\n  yield takeLatest(REMOVE_SUB_COMMENT_REQUEST, removeSubComment);\r\n}\r\nfunction* watchEditSubComment() {\r\n  yield takeLatest(EDIT_SUB_COMMENT_REQUEST, editSubComment);\r\n}\r\n\r\nexport default function* commentSaga() {\r\n  yield all([\r\n    fork(watchAddComment),\r\n    fork(watchRemoveComment),\r\n    fork(watchEditComment),\r\n    fork(watchLikeComment),\r\n    fork(watchUnlikeComment),\r\n    fork(watchAddSubComment),\r\n    fork(watchRemoveSubComment),\r\n    fork(watchEditSubComment),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}