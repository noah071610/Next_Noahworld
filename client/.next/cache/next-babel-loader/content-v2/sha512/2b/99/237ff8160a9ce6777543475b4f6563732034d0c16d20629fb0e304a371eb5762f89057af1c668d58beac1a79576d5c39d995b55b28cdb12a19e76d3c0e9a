{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Noah/Desktop/Project/Noahworld/client/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loadPosts),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadCategoryPosts),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(loadMorePosts),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(loadClassPosts),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(loadPost),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(loadRecentPosts),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(likePost),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(unlikePost),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(uploadImages),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(uploadPostImage),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(removePost),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(editPost),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPosts),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(watchloadCategoryPosts),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(watchloadMorePosts),\n    _marked18 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadRecentPosts),\n    _marked19 = /*#__PURE__*/_regeneratorRuntime.mark(watchloadClassPosts),\n    _marked20 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPost),\n    _marked21 = /*#__PURE__*/_regeneratorRuntime.mark(watchLikePost),\n    _marked22 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnlikePost),\n    _marked23 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemovePost),\n    _marked24 = /*#__PURE__*/_regeneratorRuntime.mark(watchEditPost),\n    _marked25 = /*#__PURE__*/_regeneratorRuntime.mark(watchUploadImages),\n    _marked26 = /*#__PURE__*/_regeneratorRuntime.mark(watchUploadPostImage),\n    _marked27 = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LOAD_CATEGORY_POSTS_REQUEST, LOAD_CATEGORY_POSTS_FAILURE, LOAD_CATEGORY_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, LOAD_CLASS_POSTS_REQUEST, LOAD_CLASS_POSTS_SUCCESS, LOAD_CLASS_POSTS_FAILURE, EDIT_POST_REQUEST, EDIT_POST_FAILURE, EDIT_POST_SUCCESS, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_CLEAR, LOAD_MORE_POSTS_REQUEST, LOAD_MORE_POSTS_SUCCESS, LOAD_MORE_POSTS_FAILURE, UPLOAD_IMAGES_REQUEST, ADD_POST_CLEAR, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_CLEAR, LOAD_RECENT_POSTS_REQUEST, LOAD_RECENT_POSTS_SUCCESS, LOAD_RECENT_POSTS_FAILURE, UPLOAD_POST_IMAGE_REQUEST, UPLOAD_POST_IMAGE_SUCCESS, UPLOAD_POST_IMAGE_CLEAR, UPLOAD_POST_IMAGE_FAILURE, EDIT_POST_CLEAR } from \"../@reducers/post\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction addPost(action) {\n  var _yield$call, data;\n\n  return _regeneratorRuntime.wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addPostAPI, action.data);\n\n        case 3:\n          _yield$call = _context.sent;\n          data = _yield$call.data;\n          _context.next = 7;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context.next = 9;\n          return delay(3000);\n\n        case 9:\n          _context.next = 11;\n          return put({\n            type: ADD_POST_CLEAR\n          });\n\n        case 11:\n          _context.next = 17;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 17;\n          return put({\n            type: ADD_POST_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 13]]);\n}\n\nfunction loadPostsAPI() {\n  return axios.get(\"/api/post\");\n}\n\nfunction loadPosts() {\n  var _yield$call2, data;\n\n  return _regeneratorRuntime.wrap(function loadPosts$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(loadPostsAPI);\n\n        case 3:\n          _yield$call2 = _context2.sent;\n          data = _yield$call2.data;\n          _context2.next = 7;\n          return put({\n            type: LOAD_POSTS_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context2.next = 13;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 13;\n          return put({\n            type: LOAD_POSTS_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\n\nfunction loadCategoryPostsAPI(data) {\n  return axios.get(\"/api/post/category/\".concat(data));\n}\n\nfunction loadCategoryPosts(action) {\n  var _yield$call3, data;\n\n  return _regeneratorRuntime.wrap(function loadCategoryPosts$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loadCategoryPostsAPI, action.data);\n\n        case 3:\n          _yield$call3 = _context3.sent;\n          data = _yield$call3.data;\n          _context3.next = 7;\n          return put({\n            type: LOAD_CATEGORY_POSTS_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context3.next = 13;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 13;\n          return put({\n            type: LOAD_CATEGORY_POSTS_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nfunction loadMorePostsAPI(data) {\n  return axios.get(\"/api/post/morepost/\".concat(data.category, \"?lastId=\").concat(data.LastId));\n}\n\nfunction loadMorePosts(action) {\n  var _yield$call4, data;\n\n  return _regeneratorRuntime.wrap(function loadMorePosts$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(loadMorePostsAPI, action.data);\n\n        case 3:\n          _yield$call4 = _context4.sent;\n          data = _yield$call4.data;\n          _context4.next = 7;\n          return put({\n            type: LOAD_MORE_POSTS_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context4.next = 13;\n          break;\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 13;\n          return put({\n            type: LOAD_MORE_POSTS_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 9]]);\n}\n\nfunction loadClassPostsAPI() {\n  return axios.get(\"/api/post/class\");\n}\n\nfunction loadClassPosts() {\n  var _yield$call5, data;\n\n  return _regeneratorRuntime.wrap(function loadClassPosts$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(loadClassPostsAPI);\n\n        case 3:\n          _yield$call5 = _context5.sent;\n          data = _yield$call5.data;\n          _context5.next = 7;\n          return put({\n            type: LOAD_CLASS_POSTS_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context5.next = 13;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 13;\n          return put({\n            type: LOAD_CLASS_POSTS_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(\"/api/post/onePost/\".concat(data.postId, \"/\").concat(data.UserId, \"/\").concat(data.category));\n}\n\nfunction loadPost(action) {\n  var _yield$call6, data;\n\n  return _regeneratorRuntime.wrap(function loadPost$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(loadPostAPI, action.data);\n\n        case 3:\n          _yield$call6 = _context6.sent;\n          data = _yield$call6.data;\n          _context6.next = 7;\n          return put({\n            type: LOAD_POST_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context6.next = 13;\n          break;\n\n        case 9:\n          _context6.prev = 9;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 13;\n          return put({\n            type: LOAD_POST_FAILURE,\n            error: _context6.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 9]]);\n}\n\nfunction loadRecentPostsAPI(data) {\n  return axios.post(\"/api/post/recent\", data);\n}\n\nfunction loadRecentPosts(action) {\n  var _yield$call7, data;\n\n  return _regeneratorRuntime.wrap(function loadRecentPosts$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadRecentPostsAPI, action.data);\n\n        case 3:\n          _yield$call7 = _context7.sent;\n          data = _yield$call7.data;\n          _context7.next = 7;\n          return put({\n            type: LOAD_RECENT_POSTS_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context7.next = 13;\n          break;\n\n        case 9:\n          _context7.prev = 9;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 13;\n          return put({\n            type: LOAD_RECENT_POSTS_FAILURE,\n            error: _context7.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 9]]);\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(\"/api/post/like/\".concat(data.PostId, \"/\").concat(data.UserId));\n}\n\nfunction likePost(action) {\n  var _yield$call8, data;\n\n  return _regeneratorRuntime.wrap(function likePost$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(likePostAPI, action.data);\n\n        case 3:\n          _yield$call8 = _context8.sent;\n          data = _yield$call8.data;\n          _context8.next = 7;\n          return put({\n            type: LIKE_POST_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context8.next = 14;\n          break;\n\n        case 9:\n          _context8.prev = 9;\n          _context8.t0 = _context8[\"catch\"](0);\n          console.error(_context8.t0);\n          _context8.next = 14;\n          return put({\n            type: LIKE_POST_FAILURE,\n            error: _context8.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 9]]);\n}\n\nfunction unlikePostAPI(data) {\n  return axios[\"delete\"](\"/api/post/like/\".concat(data.PostId, \"/\").concat(data.UserId));\n}\n\nfunction unlikePost(action) {\n  var _yield$call9, data;\n\n  return _regeneratorRuntime.wrap(function unlikePost$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(unlikePostAPI, action.data);\n\n        case 3:\n          _yield$call9 = _context9.sent;\n          data = _yield$call9.data;\n          _context9.next = 7;\n          return put({\n            type: UNLIKE_POST_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context9.next = 14;\n          break;\n\n        case 9:\n          _context9.prev = 9;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.error(_context9.t0);\n          _context9.next = 14;\n          return put({\n            type: UNLIKE_POST_FAILURE,\n            error: _context9.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 9]]);\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(\"/api/post/images\", data);\n}\n\nfunction uploadImages(action) {\n  var _yield$call10, data;\n\n  return _regeneratorRuntime.wrap(function uploadImages$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          _context10.next = 3;\n          return call(uploadImagesAPI, action.data);\n\n        case 3:\n          _yield$call10 = _context10.sent;\n          data = _yield$call10.data;\n          _context10.next = 7;\n          return put({\n            type: UPLOAD_IMAGES_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context10.next = 9;\n          return delay(3000);\n\n        case 9:\n          _context10.next = 11;\n          return put({\n            type: UPLOAD_IMAGES_CLEAR\n          });\n\n        case 11:\n          _context10.next = 17;\n          break;\n\n        case 13:\n          _context10.prev = 13;\n          _context10.t0 = _context10[\"catch\"](0);\n          _context10.next = 17;\n          return put({\n            type: UPLOAD_IMAGES_FAILURE,\n            error: _context10.t0.response.data\n          });\n\n        case 17:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[0, 13]]);\n}\n\nfunction uploadPostImageAPI(data) {\n  return axios.post(\"/api/post/image\", data);\n}\n\nfunction uploadPostImage(action) {\n  var _yield$call11, data;\n\n  return _regeneratorRuntime.wrap(function uploadPostImage$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(uploadPostImageAPI, action.data);\n\n        case 3:\n          _yield$call11 = _context11.sent;\n          data = _yield$call11.data;\n          _context11.next = 7;\n          return put({\n            type: UPLOAD_POST_IMAGE_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context11.next = 9;\n          return delay(3000);\n\n        case 9:\n          _context11.next = 11;\n          return put({\n            type: UPLOAD_POST_IMAGE_CLEAR\n          });\n\n        case 11:\n          _context11.next = 21;\n          break;\n\n        case 13:\n          _context11.prev = 13;\n          _context11.t0 = _context11[\"catch\"](0);\n          _context11.next = 17;\n          return put({\n            type: UPLOAD_POST_IMAGE_FAILURE,\n            error: _context11.t0.response.data\n          });\n\n        case 17:\n          _context11.next = 19;\n          return delay(3000);\n\n        case 19:\n          _context11.next = 21;\n          return put({\n            type: UPLOAD_POST_IMAGE_CLEAR\n          });\n\n        case 21:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 13]]);\n}\n\nfunction removePostAPI(data) {\n  return axios.post(\"api/post/delete\", data);\n}\n\nfunction removePost(action) {\n  var _yield$call12, data;\n\n  return _regeneratorRuntime.wrap(function removePost$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.prev = 0;\n          _context12.next = 3;\n          return call(removePostAPI, action.data);\n\n        case 3:\n          _yield$call12 = _context12.sent;\n          data = _yield$call12.data;\n          _context12.next = 7;\n          return put({\n            type: REMOVE_POST_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context12.next = 9;\n          return delay(3000);\n\n        case 9:\n          _context12.next = 11;\n          return put({\n            type: REMOVE_POST_CLEAR\n          });\n\n        case 11:\n          _context12.next = 17;\n          break;\n\n        case 13:\n          _context12.prev = 13;\n          _context12.t0 = _context12[\"catch\"](0);\n          _context12.next = 17;\n          return put({\n            type: REMOVE_POST_FAILURE,\n            error: _context12.t0.response.data\n          });\n\n        case 17:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12, null, [[0, 13]]);\n}\n\nfunction editPostAPI(data) {\n  return axios.post(\"api/post/edit\", data);\n}\n\nfunction editPost(action) {\n  var _yield$call13, data;\n\n  return _regeneratorRuntime.wrap(function editPost$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return call(editPostAPI, action.data);\n\n        case 3:\n          _yield$call13 = _context13.sent;\n          data = _yield$call13.data;\n          _context13.next = 7;\n          return put({\n            type: EDIT_POST_SUCCESS,\n            data: data\n          });\n\n        case 7:\n          _context13.next = 9;\n          return delay(3000);\n\n        case 9:\n          _context13.next = 11;\n          return put({\n            type: EDIT_POST_CLEAR\n          });\n\n        case 11:\n          _context13.next = 17;\n          break;\n\n        case 13:\n          _context13.prev = 13;\n          _context13.t0 = _context13[\"catch\"](0);\n          _context13.next = 17;\n          return put({\n            type: EDIT_POST_FAILURE,\n            error: _context13.t0.response.data\n          });\n\n        case 17:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[0, 13]]);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(ADD_POST_REQUEST, addPost);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction watchLoadPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadPosts$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\n\nfunction watchloadCategoryPosts() {\n  return _regeneratorRuntime.wrap(function watchloadCategoryPosts$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeLatest(LOAD_CATEGORY_POSTS_REQUEST, loadCategoryPosts);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction watchloadMorePosts() {\n  return _regeneratorRuntime.wrap(function watchloadMorePosts$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return takeLatest(LOAD_MORE_POSTS_REQUEST, loadMorePosts);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}\n\nfunction watchLoadRecentPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadRecentPosts$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeLatest(LOAD_RECENT_POSTS_REQUEST, loadRecentPosts);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nfunction watchloadClassPosts() {\n  return _regeneratorRuntime.wrap(function watchloadClassPosts$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return takeLatest(LOAD_CLASS_POSTS_REQUEST, loadClassPosts);\n\n        case 2:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19);\n}\n\nfunction watchLoadPost() {\n  return _regeneratorRuntime.wrap(function watchLoadPost$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.next = 2;\n          return takeLatest(LOAD_POST_REQUEST, loadPost);\n\n        case 2:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _marked20);\n}\n\nfunction watchLikePost() {\n  return _regeneratorRuntime.wrap(function watchLikePost$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.next = 2;\n          return takeLatest(LIKE_POST_REQUEST, likePost);\n\n        case 2:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, _marked21);\n}\n\nfunction watchUnlikePost() {\n  return _regeneratorRuntime.wrap(function watchUnlikePost$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          _context22.next = 2;\n          return takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n\n        case 2:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, _marked22);\n}\n\nfunction watchRemovePost() {\n  return _regeneratorRuntime.wrap(function watchRemovePost$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          _context23.next = 2;\n          return takeLatest(REMOVE_POST_REQUEST, removePost);\n\n        case 2:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  }, _marked23);\n}\n\nfunction watchEditPost() {\n  return _regeneratorRuntime.wrap(function watchEditPost$(_context24) {\n    while (1) {\n      switch (_context24.prev = _context24.next) {\n        case 0:\n          _context24.next = 2;\n          return takeLatest(EDIT_POST_REQUEST, editPost);\n\n        case 2:\n        case \"end\":\n          return _context24.stop();\n      }\n    }\n  }, _marked24);\n}\n\nfunction watchUploadImages() {\n  return _regeneratorRuntime.wrap(function watchUploadImages$(_context25) {\n    while (1) {\n      switch (_context25.prev = _context25.next) {\n        case 0:\n          _context25.next = 2;\n          return takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n\n        case 2:\n        case \"end\":\n          return _context25.stop();\n      }\n    }\n  }, _marked25);\n}\n\nfunction watchUploadPostImage() {\n  return _regeneratorRuntime.wrap(function watchUploadPostImage$(_context26) {\n    while (1) {\n      switch (_context26.prev = _context26.next) {\n        case 0:\n          _context26.next = 2;\n          return takeLatest(UPLOAD_POST_IMAGE_REQUEST, uploadPostImage);\n\n        case 2:\n        case \"end\":\n          return _context26.stop();\n      }\n    }\n  }, _marked26);\n}\n\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context27) {\n    while (1) {\n      switch (_context27.prev = _context27.next) {\n        case 0:\n          _context27.next = 2;\n          return all([fork(watchAddPost), fork(watchLoadPosts), fork(watchloadCategoryPosts), fork(watchloadMorePosts), fork(watchloadClassPosts), fork(watchLoadPost), fork(watchLoadRecentPosts), fork(watchLikePost), fork(watchUnlikePost), fork(watchUploadImages), fork(watchUploadPostImage), fork(watchRemovePost), fork(watchEditPost)]);\n\n        case 2:\n        case \"end\":\n          return _context27.stop();\n      }\n    }\n  }, _marked27);\n}","map":{"version":3,"sources":["C:/Users/Noah/Desktop/Project/Noahworld/client/@saga/post.ts"],"names":["addPost","loadPosts","loadCategoryPosts","loadMorePosts","loadClassPosts","loadPost","loadRecentPosts","likePost","unlikePost","uploadImages","uploadPostImage","removePost","editPost","watchAddPost","watchLoadPosts","watchloadCategoryPosts","watchloadMorePosts","watchLoadRecentPosts","watchloadClassPosts","watchLoadPost","watchLikePost","watchUnlikePost","watchRemovePost","watchEditPost","watchUploadImages","watchUploadPostImage","postSaga","all","call","delay","fork","put","takeLatest","axios","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LOAD_CATEGORY_POSTS_REQUEST","LOAD_CATEGORY_POSTS_FAILURE","LOAD_CATEGORY_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_CLASS_POSTS_REQUEST","LOAD_CLASS_POSTS_SUCCESS","LOAD_CLASS_POSTS_FAILURE","EDIT_POST_REQUEST","EDIT_POST_FAILURE","EDIT_POST_SUCCESS","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_CLEAR","LOAD_MORE_POSTS_REQUEST","LOAD_MORE_POSTS_SUCCESS","LOAD_MORE_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","ADD_POST_CLEAR","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_CLEAR","LOAD_RECENT_POSTS_REQUEST","LOAD_RECENT_POSTS_SUCCESS","LOAD_RECENT_POSTS_FAILURE","UPLOAD_POST_IMAGE_REQUEST","UPLOAD_POST_IMAGE_SUCCESS","UPLOAD_POST_IMAGE_CLEAR","UPLOAD_POST_IMAGE_FAILURE","EDIT_POST_CLEAR","addPostAPI","data","post","action","type","error","response","loadPostsAPI","get","loadCategoryPostsAPI","loadMorePostsAPI","category","LastId","loadClassPostsAPI","loadPostAPI","postId","UserId","loadRecentPostsAPI","likePostAPI","patch","PostId","console","unlikePostAPI","uploadImagesAPI","uploadPostImageAPI","removePostAPI","editPostAPI"],"mappings":"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","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  LOAD_CATEGORY_POSTS_REQUEST,\r\n  LOAD_CATEGORY_POSTS_FAILURE,\r\n  LOAD_CATEGORY_POSTS_SUCCESS,\r\n  LOAD_POSTS_FAILURE,\r\n  LOAD_POSTS_REQUEST,\r\n  LOAD_POSTS_SUCCESS,\r\n  LOAD_POST_FAILURE,\r\n  LOAD_POST_REQUEST,\r\n  LOAD_POST_SUCCESS,\r\n  LIKE_POST_REQUEST,\r\n  UNLIKE_POST_REQUEST,\r\n  LIKE_POST_SUCCESS,\r\n  LIKE_POST_FAILURE,\r\n  UNLIKE_POST_SUCCESS,\r\n  UNLIKE_POST_FAILURE,\r\n  LOAD_CLASS_POSTS_REQUEST,\r\n  LOAD_CLASS_POSTS_SUCCESS,\r\n  LOAD_CLASS_POSTS_FAILURE,\r\n  EDIT_POST_REQUEST,\r\n  EDIT_POST_FAILURE,\r\n  EDIT_POST_SUCCESS,\r\n  REMOVE_POST_REQUEST,\r\n  REMOVE_POST_SUCCESS,\r\n  REMOVE_POST_FAILURE,\r\n  REMOVE_POST_CLEAR,\r\n  LOAD_MORE_POSTS_REQUEST,\r\n  LOAD_MORE_POSTS_SUCCESS,\r\n  LOAD_MORE_POSTS_FAILURE,\r\n  UPLOAD_IMAGES_REQUEST,\r\n  ADD_POST_CLEAR,\r\n  UPLOAD_IMAGES_SUCCESS,\r\n  UPLOAD_IMAGES_FAILURE,\r\n  UPLOAD_IMAGES_CLEAR,\r\n  LOAD_RECENT_POSTS_REQUEST,\r\n  LOAD_RECENT_POSTS_SUCCESS,\r\n  LOAD_RECENT_POSTS_FAILURE,\r\n  UPLOAD_POST_IMAGE_REQUEST,\r\n  UPLOAD_POST_IMAGE_SUCCESS,\r\n  UPLOAD_POST_IMAGE_CLEAR,\r\n  UPLOAD_POST_IMAGE_FAILURE,\r\n  EDIT_POST_CLEAR,\r\n} from \"../@reducers/post\";\r\nimport {\r\n  AddPostInter,\r\n  EditPostInter,\r\n  LikePostData,\r\n  LikePostInter,\r\n  LoadCategoryInter,\r\n  LoadMorePostsData,\r\n  LoadMorePostsInter,\r\n  LoadPostData,\r\n  LoadPostInter,\r\n  LoadRecentPostInter,\r\n  NewPostData,\r\n  RemovePostData,\r\n  RemovePostInter,\r\n  UploadImageData,\r\n  UploadImageInter,\r\n  UploadPostImageInter,\r\n} from \"./@sagaTypes\";\r\nimport { UserInter } from \"../@reducers/@reducerTypes\";\r\n\r\nfunction addPostAPI(data: NewPostData) {\r\n  return axios.post(\"/api/post\", data);\r\n}\r\n\r\nfunction* addPost(action: AddPostInter) {\r\n  try {\r\n    const { data } = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data,\r\n    });\r\n    yield delay(3000);\r\n    yield put({\r\n      type: ADD_POST_CLEAR,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadPostsAPI() {\r\n  return axios.get(`/api/post`);\r\n}\r\n\r\nfunction* loadPosts() {\r\n  try {\r\n    const { data } = yield call(loadPostsAPI);\r\n    yield put({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadCategoryPostsAPI(data: string) {\r\n  return axios.get(`/api/post/category/${data}`);\r\n}\r\n\r\nfunction* loadCategoryPosts(action: LoadCategoryInter) {\r\n  try {\r\n    const { data } = yield call(loadCategoryPostsAPI, action.data);\r\n    yield put({\r\n      type: LOAD_CATEGORY_POSTS_SUCCESS,\r\n      data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_CATEGORY_POSTS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadMorePostsAPI(data: LoadMorePostsData) {\r\n  return axios.get(`/api/post/morepost/${data.category}?lastId=${data.LastId}`);\r\n}\r\n\r\nfunction* loadMorePosts(action: LoadMorePostsInter) {\r\n  try {\r\n    const { data } = yield call(loadMorePostsAPI, action.data);\r\n    yield put({\r\n      type: LOAD_MORE_POSTS_SUCCESS,\r\n      data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_MORE_POSTS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadClassPostsAPI() {\r\n  return axios.get(`/api/post/class`);\r\n}\r\n\r\nfunction* loadClassPosts() {\r\n  try {\r\n    const { data } = yield call(loadClassPostsAPI);\r\n    yield put({\r\n      type: LOAD_CLASS_POSTS_SUCCESS,\r\n      data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_CLASS_POSTS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadPostAPI(data: LoadPostData) {\r\n  return axios.get(`/api/post/onePost/${data.postId}/${data.UserId}/${data.category}`);\r\n}\r\nfunction* loadPost(action: LoadPostInter) {\r\n  try {\r\n    const { data } = yield call(loadPostAPI, action.data);\r\n    yield put({\r\n      type: LOAD_POST_SUCCESS,\r\n      data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction loadRecentPostsAPI(data: UserInter) {\r\n  return axios.post(`/api/post/recent`, data);\r\n}\r\nfunction* loadRecentPosts(action: LoadRecentPostInter) {\r\n  try {\r\n    const { data } = yield call(loadRecentPostsAPI, action.data);\r\n    yield put({\r\n      type: LOAD_RECENT_POSTS_SUCCESS,\r\n      data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_RECENT_POSTS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction likePostAPI(data: LikePostData) {\r\n  return axios.patch(`/api/post/like/${data.PostId}/${data.UserId}`);\r\n}\r\n\r\nfunction* likePost(action: LikePostInter) {\r\n  try {\r\n    const { data } = yield call(likePostAPI, action.data);\r\n    yield put({\r\n      type: LIKE_POST_SUCCESS,\r\n      data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unlikePostAPI(data: LikePostData) {\r\n  return axios.delete(`/api/post/like/${data.PostId}/${data.UserId}`);\r\n}\r\n\r\nfunction* unlikePost(action: LikePostInter) {\r\n  try {\r\n    const { data } = yield call(unlikePostAPI, action.data);\r\n    yield put({\r\n      type: UNLIKE_POST_SUCCESS,\r\n      data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction uploadImagesAPI(data: UploadImageData) {\r\n  return axios.post(\"/api/post/images\", data);\r\n}\r\n\r\nfunction* uploadImages(action: UploadImageInter) {\r\n  try {\r\n    const { data } = yield call(uploadImagesAPI, action.data);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_SUCCESS,\r\n      data,\r\n    });\r\n    yield delay(3000);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_CLEAR,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UPLOAD_IMAGES_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction uploadPostImageAPI(data: UploadImageData) {\r\n  return axios.post(\"/api/post/image\", data);\r\n}\r\n\r\nfunction* uploadPostImage(action: UploadPostImageInter) {\r\n  try {\r\n    const { data } = yield call(uploadPostImageAPI, action.data);\r\n    yield put({\r\n      type: UPLOAD_POST_IMAGE_SUCCESS,\r\n      data,\r\n    });\r\n    yield delay(3000);\r\n    yield put({\r\n      type: UPLOAD_POST_IMAGE_CLEAR,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UPLOAD_POST_IMAGE_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n    yield delay(3000);\r\n    yield put({\r\n      type: UPLOAD_POST_IMAGE_CLEAR,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removePostAPI(data: RemovePostData) {\r\n  return axios.post(`api/post/delete`, data);\r\n}\r\n\r\nfunction* removePost(action: RemovePostInter) {\r\n  try {\r\n    const { data } = yield call(removePostAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data,\r\n    });\r\n    yield delay(3000);\r\n    yield put({\r\n      type: REMOVE_POST_CLEAR,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction editPostAPI(data: NewPostData) {\r\n  return axios.post(`api/post/edit`, data);\r\n}\r\n\r\nfunction* editPost(action: EditPostInter) {\r\n  try {\r\n    const { data } = yield call(editPostAPI, action.data);\r\n    yield put({\r\n      type: EDIT_POST_SUCCESS,\r\n      data,\r\n    });\r\n    yield delay(3000);\r\n    yield put({\r\n      type: EDIT_POST_CLEAR,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: EDIT_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchLoadPosts() {\r\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\nfunction* watchloadCategoryPosts() {\r\n  yield takeLatest(LOAD_CATEGORY_POSTS_REQUEST, loadCategoryPosts);\r\n}\r\nfunction* watchloadMorePosts() {\r\n  yield takeLatest(LOAD_MORE_POSTS_REQUEST, loadMorePosts);\r\n}\r\nfunction* watchLoadRecentPosts() {\r\n  yield takeLatest(LOAD_RECENT_POSTS_REQUEST, loadRecentPosts);\r\n}\r\nfunction* watchloadClassPosts() {\r\n  yield takeLatest(LOAD_CLASS_POSTS_REQUEST, loadClassPosts);\r\n}\r\nfunction* watchLoadPost() {\r\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\r\n}\r\n\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\n\r\nfunction* watchUnlikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\nfunction* watchEditPost() {\r\n  yield takeLatest(EDIT_POST_REQUEST, editPost);\r\n}\r\nfunction* watchUploadImages() {\r\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\nfunction* watchUploadPostImage() {\r\n  yield takeLatest(UPLOAD_POST_IMAGE_REQUEST, uploadPostImage);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchLoadPosts),\r\n    fork(watchloadCategoryPosts),\r\n    fork(watchloadMorePosts),\r\n    fork(watchloadClassPosts),\r\n    fork(watchLoadPost),\r\n    fork(watchLoadRecentPosts),\r\n    fork(watchLikePost),\r\n    fork(watchUnlikePost),\r\n    fork(watchUploadImages),\r\n    fork(watchUploadPostImage),\r\n    fork(watchRemovePost),\r\n    fork(watchEditPost),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}