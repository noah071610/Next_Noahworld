{"ast":null,"code":"import produce from \"immer\";\nconst initialState = {\n  techPosts: [],\n  dailyPosts: [],\n  classPosts: [],\n  culturePosts: [],\n  quizzes: [],\n  words: [],\n  hashtags: [],\n  mostLikedPost: null,\n  mostViewedPost: null,\n  mostCommentedPost: null,\n  post: null,\n  prevPost: [],\n  nextPost: [],\n  countPosts: [],\n  imagePath: null,\n  postImagePath: null,\n  recentViewPost: null,\n  recentCommentPost: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: false,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: false,\n  uploadPostImageLoading: false,\n  uploadPostImageDone: false,\n  uploadPostImageError: false,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: false,\n  editPostLoading: false,\n  editPostDone: false,\n  editPostError: false,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: false,\n  loadRecentPostsLoading: false,\n  loadRecentPostsDone: false,\n  loadRecentPostsError: false,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: false,\n  loadCategoryPostsLoading: false,\n  loadCategoryPostsDone: false,\n  loadCategoryPostsError: false,\n  loadMorePostsLoading: false,\n  loadMorePostsDone: false,\n  loadMorePostsError: false,\n  loadClassPostsLoading: false,\n  loadClassPostsDone: false,\n  loadClassPostsError: false,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: false,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: false,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: false,\n  editCommentLoading: false,\n  editCommentDone: false,\n  editCommentError: false,\n  removeCommentLoading: false,\n  removeCommentDone: false,\n  removeCommentError: false,\n  likeCommentLoading: false,\n  likeCommentDone: false,\n  likeCommentError: false,\n  unlikeCommentLoading: false,\n  unlikeCommentDone: false,\n  unlikeCommentError: false,\n  addSubCommentLoading: false,\n  addSubCommentDone: false,\n  addSubCommentError: false,\n  editSubCommentLoading: false,\n  editSubCommentDone: false,\n  editSubCommentError: false,\n  removeSubCommentLoading: false,\n  removeSubCommentDone: false,\n  removeSubCommentError: false,\n  hasMorePosts: false\n};\nexport const UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\nexport const UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\nexport const UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\nexport const UPLOAD_IMAGES_CLEAR = \"UPLOAD_IMAGES_CLEAR\";\nexport const UPLOAD_POST_IMAGE_REQUEST = \"UPLOAD_POST_IMAGE_REQUEST\";\nexport const UPLOAD_POST_IMAGE_SUCCESS = \"UPLOAD_POST_IMAGE_SUCCESS\";\nexport const UPLOAD_POST_IMAGE_FAILURE = \"UPLOAD_POST_IMAGE_FAILURE\";\nexport const UPLOAD_POST_IMAGE_CLEAR = \"UPLOAD_POST_IMAGE_CLEAR\";\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const ADD_POST_CLEAR = \"ADD_POST_CLEAR\";\nexport const LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\nexport const LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\nexport const LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\nexport const LOAD_RECENT_POSTS_REQUEST = \"LOAD_RECENT_POSTS_REQUEST\";\nexport const LOAD_RECENT_POSTS_SUCCESS = \"LOAD_RECENT_POSTS_SUCCESS\";\nexport const LOAD_RECENT_POSTS_FAILURE = \"LOAD_RECENT_POSTS_FAILURE\";\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport const LOAD_CATEGORY_POSTS_REQUEST = \"LOAD_CATEGORY_POSTS_REQUEST\";\nexport const LOAD_CATEGORY_POSTS_SUCCESS = \"LOAD_CATEGORY_POSTS_SUCCESS\";\nexport const LOAD_CATEGORY_POSTS_FAILURE = \"LOAD_CATEGORY_POSTS_FAILURE\";\nexport const LOAD_MORE_POSTS_REQUEST = \"LOAD_MORE_POSTS_REQUEST\";\nexport const LOAD_MORE_POSTS_SUCCESS = \"LOAD_MORE_POSTS_SUCCESS\";\nexport const LOAD_MORE_POSTS_FAILURE = \"LOAD_MORE_POSTS_FAILURE\";\nexport const LOAD_CLASS_POSTS_REQUEST = \"LOAD_CLASS_POSTS_REQUEST\";\nexport const LOAD_CLASS_POSTS_SUCCESS = \"LOAD_CLASS_POSTS_SUCCESS\";\nexport const LOAD_CLASS_POSTS_FAILURE = \"LOAD_CLASS_POSTS_FAILURE\";\nexport const EDIT_POST_REQUEST = \"EDIT_POST_REQUEST\";\nexport const EDIT_POST_SUCCESS = \"EDIT_POST_SUCCESS\";\nexport const EDIT_POST_FAILURE = \"EDIT_POST_FAILURE\";\nexport const EDIT_POST_CLEAR = \"EDIT_POST_CLEAR\";\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport const REMOVE_POST_CLEAR = \"REMOVE_POST_CLEAR\";\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nexport const LIKE_COMMENT_REQUEST = \"LIKE_COMMENT_REQUEST\";\nexport const LIKE_COMMENT_SUCCESS = \"LIKE_COMMENT_SUCCESS\";\nexport const LIKE_COMMENT_FAILURE = \"LIKE_COMMENT_FAILURE\";\nexport const UNLIKE_COMMENT_REQUEST = \"UNLIKE_COMMENT_REQUEST\";\nexport const UNLIKE_COMMENT_SUCCESS = \"UNLIKE_COMMENT_SUCCESS\";\nexport const UNLIKE_COMMENT_FAILURE = \"UNLIKE_COMMENT_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const ADD_COMMENT_CLEAR = \"ADD_COMMENT_CLEAR\";\nexport const REMOVE_COMMENT_REQUEST = \"REMOVE_COMMENT_REQUEST\";\nexport const REMOVE_COMMENT_SUCCESS = \"REMOVE_COMMENT_SUCCESS\";\nexport const REMOVE_COMMENT_FAILURE = \"REMOVE_COMMENT_FAILURE\";\nexport const EDIT_COMMENT_REQUEST = \"EDIT_COMMENT_REQUEST\";\nexport const EDIT_COMMENT_SUCCESS = \"EDIT_COMMENT_SUCCESS\";\nexport const EDIT_COMMENT_FAILURE = \"EDIT_COMMENT_FAILURE\";\nexport const EDIT_COMMENT_CLEAR = \"EDIT_COMMENT_CLEAR\";\nexport const ADD_SUB_COMMENT_REQUEST = \"ADD_SUB_COMMENT_REQUEST\";\nexport const ADD_SUB_COMMENT_SUCCESS = \"ADD_SUB_COMMENT_SUCCESS\";\nexport const ADD_SUB_COMMENT_FAILURE = \"ADD_SUB_COMMENT_FAILURE\";\nexport const ADD_SUB_COMMENT_CLEAR = \"ADD_SUB_COMMENT_CLEAR\";\nexport const REMOVE_SUB_COMMENT_REQUEST = \"REMOVE_SUB_COMMENT_REQUEST\";\nexport const REMOVE_SUB_COMMENT_SUCCESS = \"REMOVE_SUB_COMMENT_SUCCESS\";\nexport const REMOVE_SUB_COMMENT_FAILURE = \"REMOVE_SUB_COMMENT_FAILURE\";\nexport const EDIT_SUB_COMMENT_REQUEST = \"EDIT_SUB_COMMENT_REQUEST\";\nexport const EDIT_SUB_COMMENT_SUCCESS = \"EDIT_SUB_COMMENT_SUCCESS\";\nexport const EDIT_SUB_COMMENT_FAILURE = \"EDIT_SUB_COMMENT_FAILURE\";\nexport const EDIT_SUB_COMMENT_CLEAR = \"EDIT_SUB_COMMENT_CLEAR\";\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostError = false;\n      draft.addPostDone = false;\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      action.data.category === \"tech\" && draft.techPosts.unshift(action.data);\n      action.data.category === \"daily\" && draft.dailyPosts.unshift(action.data);\n      action.data.category === \"class\" && draft.classPosts.unshift(action.data);\n      action.data.category === \"culture\" && draft.culturePosts.unshift(action.data);\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n\n    case ADD_POST_CLEAR:\n      draft.addPostDone = false;\n      draft.addPostError = false;\n      break;\n\n    case LOAD_POSTS_REQUEST:\n      draft.loadPostsLoading = true;\n      draft.loadPostsDone = false;\n      draft.loadPostsError = false;\n      break;\n\n    case LOAD_POSTS_SUCCESS:\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      draft.techPosts = action.data.techPosts;\n      draft.dailyPosts = action.data.dailyPosts;\n      draft.hashtags = action.data.hashtags;\n      draft.mostViewedPost = action.data.mostViewedPost;\n      draft.mostLikedPost = action.data.mostLikedPost;\n      draft.mostCommentedPost = action.data.mostCommentedPost;\n      break;\n\n    case LOAD_POSTS_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsError = action.error;\n      break;\n\n    case LOAD_POST_REQUEST:\n      draft.loadPostsLoading = true;\n      draft.loadPostsDone = false;\n      draft.loadPostsError = false;\n      break;\n\n    case LOAD_POST_SUCCESS:\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      draft.post = action.data.post;\n      draft.prevPost = action.data.prevPost;\n      draft.nextPost = action.data.nextPost;\n      break;\n\n    case LOAD_POST_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsError = action.error;\n      break;\n\n    case LOAD_CATEGORY_POSTS_REQUEST:\n      draft.loadCategoryPostsLoading = true;\n      draft.loadCategoryPostsDone = false;\n      draft.loadCategoryPostsError = false;\n      break;\n\n    case LOAD_CATEGORY_POSTS_SUCCESS:\n      draft.loadCategoryPostsLoading = false;\n      draft.loadCategoryPostsDone = true;\n      draft.techPosts = action.data.category === \"tech\" ? action.data.posts : false;\n      draft.dailyPosts = action.data.category === \"daily\" ? action.data.posts : false;\n      draft.countPosts = action.data.countPosts;\n      draft.hasMorePosts = action.data.posts.length > 6;\n      break;\n\n    case LOAD_CATEGORY_POSTS_FAILURE:\n      draft.loadCategoryPostsLoading = false;\n      draft.loadCategoryPostsError = action.error;\n      break;\n\n    case LOAD_MORE_POSTS_REQUEST:\n      draft.loadMorePostsLoading = true;\n      draft.loadMorePostsDone = false;\n      draft.loadMorePostsError = false;\n      break;\n\n    case LOAD_MORE_POSTS_SUCCESS:\n      draft.loadMorePostsLoading = false;\n      draft.loadMorePostsDone = true; //카테고리에 맞는 포스트를 넣어준다.\n\n      const moreTechPosts = action.data.category === \"tech\" && draft.techPosts.concat(action.data.morePosts);\n      const moreDailyPosts = action.data.category === \"daily\" && draft.dailyPosts.concat(action.data.morePosts);\n      draft.techPosts = moreTechPosts;\n      draft.dailyPosts = moreDailyPosts; //불러온 포스트가 limit값인 6개라는것은 불러온 포스트가 더 있다는 의미이다.\n      //만약 갯수가 딱 맞아서 다음 값이 없다고 해도 그 요청은 0개임으로 false가 된다.\n\n      draft.hasMorePosts = action.data.morePosts.length === 6;\n      break;\n\n    case LOAD_MORE_POSTS_FAILURE:\n      draft.loadMorePostsLoading = false;\n      draft.loadMorePostsError = action.error;\n      draft.hasMorePosts = false;\n      break;\n\n    case LOAD_CLASS_POSTS_REQUEST:\n      draft.loadClassPostsLoading = true;\n      draft.loadClassPostsDone = false;\n      draft.loadClassPostsError = false;\n      break;\n\n    case LOAD_CLASS_POSTS_SUCCESS:\n      draft.loadClassPostsLoading = false;\n      draft.loadClassPostsDone = true;\n      draft.classPosts = action.data.classPosts_class;\n      draft.culturePosts = action.data.culturePosts_class;\n      draft.quizzes = action.data.quizzes;\n      draft.words = action.data.words;\n      break;\n\n    case LOAD_CLASS_POSTS_FAILURE:\n      draft.loadClassPostsLoading = false;\n      draft.loadClassPostsError = action.error;\n      break;\n\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.addCommentError = false;\n      break;\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        var _draft$post, _draft$post$Comments;\n\n        (_draft$post = draft.post) === null || _draft$post === void 0 ? void 0 : (_draft$post$Comments = _draft$post.Comments) === null || _draft$post$Comments === void 0 ? void 0 : _draft$post$Comments.push(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      }\n\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n\n    case ADD_COMMENT_CLEAR:\n      draft.addCommentLoading = false;\n      draft.addCommentDone = false;\n      draft.addCommentError = false;\n      break;\n\n    case LIKE_POST_REQUEST:\n      draft.likePostLoading = true;\n      draft.likePostDone = false;\n      draft.likePostError = false;\n      break;\n\n    case LIKE_POST_SUCCESS:\n      {\n        var _draft$post2, _draft$post2$PostLike;\n\n        (_draft$post2 = draft.post) === null || _draft$post2 === void 0 ? void 0 : (_draft$post2$PostLike = _draft$post2.PostLikers) === null || _draft$post2$PostLike === void 0 ? void 0 : _draft$post2$PostLike.push({\n          id: action.data.UserId\n        });\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        break;\n      }\n\n    case LIKE_POST_FAILURE:\n      draft.likePostLoading = false;\n      draft.likePostError = action.error;\n      break;\n\n    case UNLIKE_POST_REQUEST:\n      draft.unlikePostLoading = true;\n      draft.unlikePostDone = false;\n      draft.unlikePostError = false;\n      break;\n\n    case UNLIKE_POST_SUCCESS:\n      {\n        var _draft$post3, _draft$post3$PostLike;\n\n        (_draft$post3 = draft.post) === null || _draft$post3 === void 0 ? void 0 : (_draft$post3$PostLike = _draft$post3.PostLikers) === null || _draft$post3$PostLike === void 0 ? void 0 : _draft$post3$PostLike.filter(v => v.id !== action.data.UserId);\n        draft.unlikePostLoading = false;\n        draft.unlikePostDone = true;\n        break;\n      }\n\n    case UNLIKE_POST_FAILURE:\n      draft.unlikePostLoading = false;\n      draft.unlikePostError = action.error;\n      break;\n\n    case EDIT_POST_REQUEST:\n      draft.editPostLoading = true;\n      draft.editPostDone = false;\n      draft.editPostError = false;\n      break;\n\n    case EDIT_POST_SUCCESS:\n      draft.editPostLoading = false;\n      draft.editPostDone = true;\n      break;\n\n    case EDIT_POST_FAILURE:\n      draft.editPostLoading = false;\n      draft.editPostError = action.error;\n      break;\n\n    case EDIT_POST_CLEAR:\n      draft.editPostLoading = false;\n      draft.editPostDone = false;\n      draft.editPostError = false;\n      break;\n\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = false;\n      break;\n\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      break;\n\n    case REMOVE_POST_CLEAR:\n      draft.removePostLoading = false;\n      draft.removePostDone = false;\n      break;\n\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n\n    case EDIT_COMMENT_REQUEST:\n      draft.editCommentLoading = true;\n      draft.editCommentDone = false;\n      draft.editCommentError = false;\n      break;\n\n    case EDIT_COMMENT_SUCCESS:\n      {\n        draft.post.Comments.find(v => {\n          return v.id === action.data.CommentId;\n        }).content = action.data.newComment;\n        draft.editCommentLoading = false;\n        draft.editCommentDone = true;\n        break;\n      }\n\n    case EDIT_COMMENT_FAILURE:\n      draft.editCommentLoading = false;\n      draft.editCommentError = action.error;\n      break;\n\n    case EDIT_COMMENT_CLEAR:\n      draft.editCommentLoading = false;\n      draft.editCommentDone = false;\n      draft.editCommentError = false;\n      break;\n\n    case REMOVE_COMMENT_REQUEST:\n      draft.removeCommentLoading = true;\n      draft.removeCommentDone = false;\n      draft.removeCommentError = false;\n      break;\n\n    case REMOVE_COMMENT_SUCCESS:\n      {\n        draft.removeCommentLoading = false;\n        draft.removeCommentDone = true;\n        break;\n      }\n\n    case REMOVE_COMMENT_FAILURE:\n      draft.removeCommentLoading = false;\n      draft.removeCommentError = action.error;\n      break;\n\n    case LIKE_COMMENT_REQUEST:\n      draft.likeCommentLoading = true;\n      draft.likeCommentDone = false;\n      draft.likeCommentError = false;\n      break;\n\n    case LIKE_COMMENT_SUCCESS:\n      {\n        var _draft$post4, _draft$post4$Comments;\n\n        (_draft$post4 = draft.post) === null || _draft$post4 === void 0 ? void 0 : (_draft$post4$Comments = _draft$post4.Comments) === null || _draft$post4$Comments === void 0 ? void 0 : _draft$post4$Comments.find(v => v.id === action.data.CommentId).CommentLikers.push({\n          id: action.data.UserId\n        });\n        draft.likeCommentLoading = false;\n        draft.likeCommentDone = true;\n        break;\n      }\n\n    case LIKE_COMMENT_FAILURE:\n      draft.likeCommentLoading = false;\n      draft.likeCommentError = action.error;\n      break;\n\n    case UNLIKE_COMMENT_REQUEST:\n      //REQUEST , SUCCESS , FAILURE 로 Reducer를 쪼개서 오류관리를 보다 쉽게 했습니다.\n      draft.unlikeCommentLoading = true;\n      draft.unlikeCommentDone = false;\n      draft.unlikeCommentError = false;\n      break;\n\n    case UNLIKE_COMMENT_SUCCESS:\n      {\n        var _draft$post5, _draft$post5$Comments;\n\n        //immer 적용으로 불변성을 안지켜도 됨.\n        let CommentsWithoutDeleted = (_draft$post5 = draft.post) === null || _draft$post5 === void 0 ? void 0 : (_draft$post5$Comments = _draft$post5.Comments) === null || _draft$post5$Comments === void 0 ? void 0 : _draft$post5$Comments.find(v => v.id === action.data.CommentId).CommentLikers.filter(v => v.id !== action.data.UserId);\n        draft.post.Comments.find(v => v.id === action.data.CommentId).CommentLikers = CommentsWithoutDeleted;\n        draft.unlikeCommentLoading = false;\n        draft.unlikeCommentDone = true;\n        break;\n      }\n\n    case UNLIKE_COMMENT_FAILURE:\n      draft.unlikeCommentLoading = false;\n      draft.unlikeCommentError = action.error;\n      break;\n\n    case ADD_SUB_COMMENT_SUCCESS:\n      {\n        var _draft$post6, _draft$post6$Comments;\n\n        (_draft$post6 = draft.post) === null || _draft$post6 === void 0 ? void 0 : (_draft$post6$Comments = _draft$post6.Comments) === null || _draft$post6$Comments === void 0 ? void 0 : _draft$post6$Comments.find(v => v.id === action.data.CommentId).SubComments.push(action.data.fullSubComment);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      }\n\n    case ADD_SUB_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n\n    case ADD_SUB_COMMENT_CLEAR:\n      draft.addCommentLoading = false;\n      draft.addCommentDone = false;\n      draft.addCommentError = false;\n      break;\n\n    case EDIT_SUB_COMMENT_REQUEST:\n      draft.editSubCommentLoading = true;\n      draft.editSubCommentDone = false;\n      draft.editSubCommentError = false;\n      break;\n\n    case EDIT_SUB_COMMENT_SUCCESS:\n      {\n        draft.post.Comments.find(v => {\n          return v.id === action.data.CommentId;\n        }).SubComments.find(v => {\n          return v.id === action.data.SubCommentId;\n        }).content = action.data.content;\n        draft.editSubCommentLoading = false;\n        draft.editSubCommentDone = true;\n        break;\n      }\n\n    case EDIT_SUB_COMMENT_FAILURE:\n      draft.editSubCommentLoading = false;\n      draft.editSubCommentError = action.error;\n      break;\n\n    case EDIT_SUB_COMMENT_CLEAR:\n      draft.editSubCommentLoading = false;\n      draft.editSubCommentDone = false;\n      draft.editSubCommentError = false;\n      break;\n\n    case REMOVE_SUB_COMMENT_REQUEST:\n      draft.removeSubCommentLoading = true;\n      draft.removeSubCommentDone = false;\n      draft.removeSubCommentError = false;\n      break;\n\n    case REMOVE_SUB_COMMENT_SUCCESS:\n      {\n        draft.removeSubCommentLoading = false;\n        draft.removeSubCommentDone = true;\n        break;\n      }\n\n    case REMOVE_SUB_COMMENT_FAILURE:\n      draft.removeSubCommentLoading = false;\n      draft.removeSubCommentError = action.error;\n      break;\n\n    case UPLOAD_IMAGES_REQUEST:\n      draft.uploadImagesLoading = true;\n      draft.uploadImagesDone = false;\n      draft.uploadImagesError = false;\n      break;\n\n    case UPLOAD_IMAGES_SUCCESS:\n      {\n        draft.imagePath = action.data;\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = true;\n        break;\n      }\n\n    case UPLOAD_IMAGES_FAILURE:\n      draft.uploadImagesLoading = false;\n      draft.uploadImagesError = action.error;\n      break;\n\n    case UPLOAD_IMAGES_CLEAR:\n      draft.uploadImagesLoading = false;\n      draft.uploadImagesDone = false;\n      break;\n\n    case UPLOAD_POST_IMAGE_REQUEST:\n      draft.uploadPostImageLoading = true;\n      draft.uploadPostImageDone = false;\n      draft.uploadPostImageError = false;\n      break;\n\n    case UPLOAD_POST_IMAGE_SUCCESS:\n      {\n        draft.postImagePath = action.data;\n        draft.uploadPostImageLoading = false;\n        draft.uploadPostImageDone = true;\n        break;\n      }\n\n    case UPLOAD_POST_IMAGE_FAILURE:\n      draft.uploadPostImageLoading = false;\n      draft.uploadPostImageError = action.error;\n      break;\n\n    case UPLOAD_POST_IMAGE_CLEAR:\n      draft.uploadPostImageLoading = false;\n      draft.uploadPostImageDone = false;\n      break;\n\n    case LOAD_RECENT_POSTS_REQUEST:\n      draft.loadRecentPostsLoading = true;\n      draft.loadRecentPostsDone = false;\n      draft.loadRecentPostsError = false;\n      break;\n\n    case LOAD_RECENT_POSTS_SUCCESS:\n      draft.loadRecentPostsLoading = false;\n      draft.loadRecentPostsDone = true;\n      draft.recentViewPost = action.data.recentViewPost;\n      draft.recentCommentPost = action.data.recentCommentPost;\n      break;\n\n    case LOAD_RECENT_POSTS_FAILURE:\n      draft.loadRecentPostsLoading = false;\n      draft.loadRecentPostsError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Noah/Desktop/Project/Noahworld/client/@reducers/post.ts"],"names":["produce","initialState","techPosts","dailyPosts","classPosts","culturePosts","quizzes","words","hashtags","mostLikedPost","mostViewedPost","mostCommentedPost","post","prevPost","nextPost","countPosts","imagePath","postImagePath","recentViewPost","recentCommentPost","addPostLoading","addPostDone","addPostError","uploadImagesLoading","uploadImagesDone","uploadImagesError","uploadPostImageLoading","uploadPostImageDone","uploadPostImageError","removePostLoading","removePostDone","removePostError","editPostLoading","editPostDone","editPostError","loadPostLoading","loadPostDone","loadPostError","loadRecentPostsLoading","loadRecentPostsDone","loadRecentPostsError","loadPostsLoading","loadPostsDone","loadPostsError","loadCategoryPostsLoading","loadCategoryPostsDone","loadCategoryPostsError","loadMorePostsLoading","loadMorePostsDone","loadMorePostsError","loadClassPostsLoading","loadClassPostsDone","loadClassPostsError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","addCommentLoading","addCommentDone","addCommentError","editCommentLoading","editCommentDone","editCommentError","removeCommentLoading","removeCommentDone","removeCommentError","likeCommentLoading","likeCommentDone","likeCommentError","unlikeCommentLoading","unlikeCommentDone","unlikeCommentError","addSubCommentLoading","addSubCommentDone","addSubCommentError","editSubCommentLoading","editSubCommentDone","editSubCommentError","removeSubCommentLoading","removeSubCommentDone","removeSubCommentError","hasMorePosts","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_CLEAR","UPLOAD_POST_IMAGE_REQUEST","UPLOAD_POST_IMAGE_SUCCESS","UPLOAD_POST_IMAGE_FAILURE","UPLOAD_POST_IMAGE_CLEAR","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_POST_CLEAR","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_RECENT_POSTS_REQUEST","LOAD_RECENT_POSTS_SUCCESS","LOAD_RECENT_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_CATEGORY_POSTS_REQUEST","LOAD_CATEGORY_POSTS_SUCCESS","LOAD_CATEGORY_POSTS_FAILURE","LOAD_MORE_POSTS_REQUEST","LOAD_MORE_POSTS_SUCCESS","LOAD_MORE_POSTS_FAILURE","LOAD_CLASS_POSTS_REQUEST","LOAD_CLASS_POSTS_SUCCESS","LOAD_CLASS_POSTS_FAILURE","EDIT_POST_REQUEST","EDIT_POST_SUCCESS","EDIT_POST_FAILURE","EDIT_POST_CLEAR","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_CLEAR","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LIKE_COMMENT_REQUEST","LIKE_COMMENT_SUCCESS","LIKE_COMMENT_FAILURE","UNLIKE_COMMENT_REQUEST","UNLIKE_COMMENT_SUCCESS","UNLIKE_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_CLEAR","REMOVE_COMMENT_REQUEST","REMOVE_COMMENT_SUCCESS","REMOVE_COMMENT_FAILURE","EDIT_COMMENT_REQUEST","EDIT_COMMENT_SUCCESS","EDIT_COMMENT_FAILURE","EDIT_COMMENT_CLEAR","ADD_SUB_COMMENT_REQUEST","ADD_SUB_COMMENT_SUCCESS","ADD_SUB_COMMENT_FAILURE","ADD_SUB_COMMENT_CLEAR","REMOVE_SUB_COMMENT_REQUEST","REMOVE_SUB_COMMENT_SUCCESS","REMOVE_SUB_COMMENT_FAILURE","EDIT_SUB_COMMENT_REQUEST","EDIT_SUB_COMMENT_SUCCESS","EDIT_SUB_COMMENT_FAILURE","EDIT_SUB_COMMENT_CLEAR","reducer","state","action","draft","type","data","category","unshift","error","posts","length","moreTechPosts","concat","morePosts","moreDailyPosts","classPosts_class","culturePosts_class","Comments","push","PostLikers","id","UserId","filter","v","find","CommentId","content","newComment","CommentLikers","CommentsWithoutDeleted","SubComments","fullSubComment","SubCommentId"],"mappings":"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","sourcesContent":["import produce from \"immer\";\r\nimport { CommentsInter, PostState } from \"./@reducerTypes\";\r\n\r\nconst initialState = {\r\n  techPosts: [],\r\n  dailyPosts: [],\r\n  classPosts: [],\r\n  culturePosts: [],\r\n  quizzes: [],\r\n  words: [],\r\n  hashtags: [],\r\n  mostLikedPost: null,\r\n  mostViewedPost: null,\r\n  mostCommentedPost: null,\r\n  post: null,\r\n  prevPost: [],\r\n  nextPost: [],\r\n  countPosts: [],\r\n  imagePath: null,\r\n  postImagePath: null,\r\n  recentViewPost: null,\r\n  recentCommentPost: null,\r\n\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: false,\r\n\r\n  uploadImagesLoading: false,\r\n  uploadImagesDone: false,\r\n  uploadImagesError: false,\r\n\r\n  uploadPostImageLoading: false,\r\n  uploadPostImageDone: false,\r\n  uploadPostImageError: false,\r\n\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: false,\r\n\r\n  editPostLoading: false,\r\n  editPostDone: false,\r\n  editPostError: false,\r\n\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: false,\r\n\r\n  loadRecentPostsLoading: false,\r\n  loadRecentPostsDone: false,\r\n  loadRecentPostsError: false,\r\n\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: false,\r\n\r\n  loadCategoryPostsLoading: false,\r\n  loadCategoryPostsDone: false,\r\n  loadCategoryPostsError: false,\r\n\r\n  loadMorePostsLoading: false,\r\n  loadMorePostsDone: false,\r\n  loadMorePostsError: false,\r\n\r\n  loadClassPostsLoading: false,\r\n  loadClassPostsDone: false,\r\n  loadClassPostsError: false,\r\n\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: false,\r\n\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: false,\r\n\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: false,\r\n\r\n  editCommentLoading: false,\r\n  editCommentDone: false,\r\n  editCommentError: false,\r\n\r\n  removeCommentLoading: false,\r\n  removeCommentDone: false,\r\n  removeCommentError: false,\r\n\r\n  likeCommentLoading: false,\r\n  likeCommentDone: false,\r\n  likeCommentError: false,\r\n\r\n  unlikeCommentLoading: false,\r\n  unlikeCommentDone: false,\r\n  unlikeCommentError: false,\r\n\r\n  addSubCommentLoading: false,\r\n  addSubCommentDone: false,\r\n  addSubCommentError: false,\r\n\r\n  editSubCommentLoading: false,\r\n  editSubCommentDone: false,\r\n  editSubCommentError: false,\r\n\r\n  removeSubCommentLoading: false,\r\n  removeSubCommentDone: false,\r\n  removeSubCommentError: false,\r\n\r\n  hasMorePosts: false,\r\n};\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\" as const;\r\nexport const UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\" as const;\r\nexport const UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\" as const;\r\nexport const UPLOAD_IMAGES_CLEAR = \"UPLOAD_IMAGES_CLEAR\" as const;\r\n\r\nexport const UPLOAD_POST_IMAGE_REQUEST = \"UPLOAD_POST_IMAGE_REQUEST\" as const;\r\nexport const UPLOAD_POST_IMAGE_SUCCESS = \"UPLOAD_POST_IMAGE_SUCCESS\" as const;\r\nexport const UPLOAD_POST_IMAGE_FAILURE = \"UPLOAD_POST_IMAGE_FAILURE\" as const;\r\nexport const UPLOAD_POST_IMAGE_CLEAR = \"UPLOAD_POST_IMAGE_CLEAR\" as const;\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\" as const;\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\" as const;\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\" as const;\r\nexport const ADD_POST_CLEAR = \"ADD_POST_CLEAR\" as const;\r\n\r\nexport const LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\" as const;\r\nexport const LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\" as const;\r\nexport const LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\" as const;\r\n\r\nexport const LOAD_RECENT_POSTS_REQUEST = \"LOAD_RECENT_POSTS_REQUEST\" as const;\r\nexport const LOAD_RECENT_POSTS_SUCCESS = \"LOAD_RECENT_POSTS_SUCCESS\" as const;\r\nexport const LOAD_RECENT_POSTS_FAILURE = \"LOAD_RECENT_POSTS_FAILURE\" as const;\r\n\r\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\" as const;\r\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\" as const;\r\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\" as const;\r\n\r\nexport const LOAD_CATEGORY_POSTS_REQUEST = \"LOAD_CATEGORY_POSTS_REQUEST\" as const;\r\nexport const LOAD_CATEGORY_POSTS_SUCCESS = \"LOAD_CATEGORY_POSTS_SUCCESS\" as const;\r\nexport const LOAD_CATEGORY_POSTS_FAILURE = \"LOAD_CATEGORY_POSTS_FAILURE\" as const;\r\n\r\nexport const LOAD_MORE_POSTS_REQUEST = \"LOAD_MORE_POSTS_REQUEST\" as const;\r\nexport const LOAD_MORE_POSTS_SUCCESS = \"LOAD_MORE_POSTS_SUCCESS\" as const;\r\nexport const LOAD_MORE_POSTS_FAILURE = \"LOAD_MORE_POSTS_FAILURE\" as const;\r\n\r\nexport const LOAD_CLASS_POSTS_REQUEST = \"LOAD_CLASS_POSTS_REQUEST\" as const;\r\nexport const LOAD_CLASS_POSTS_SUCCESS = \"LOAD_CLASS_POSTS_SUCCESS\" as const;\r\nexport const LOAD_CLASS_POSTS_FAILURE = \"LOAD_CLASS_POSTS_FAILURE\" as const;\r\n\r\nexport const EDIT_POST_REQUEST = \"EDIT_POST_REQUEST\" as const;\r\nexport const EDIT_POST_SUCCESS = \"EDIT_POST_SUCCESS\" as const;\r\nexport const EDIT_POST_FAILURE = \"EDIT_POST_FAILURE\" as const;\r\nexport const EDIT_POST_CLEAR = \"EDIT_POST_CLEAR\" as const;\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\" as const;\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\" as const;\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\" as const;\r\nexport const REMOVE_POST_CLEAR = \"REMOVE_POST_CLEAR\" as const;\r\n\r\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\" as const;\r\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\" as const;\r\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\" as const;\r\n\r\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\" as const;\r\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\" as const;\r\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\" as const;\r\n\r\nexport const LIKE_COMMENT_REQUEST = \"LIKE_COMMENT_REQUEST\" as const;\r\nexport const LIKE_COMMENT_SUCCESS = \"LIKE_COMMENT_SUCCESS\" as const;\r\nexport const LIKE_COMMENT_FAILURE = \"LIKE_COMMENT_FAILURE\" as const;\r\n\r\nexport const UNLIKE_COMMENT_REQUEST = \"UNLIKE_COMMENT_REQUEST\" as const;\r\nexport const UNLIKE_COMMENT_SUCCESS = \"UNLIKE_COMMENT_SUCCESS\" as const;\r\nexport const UNLIKE_COMMENT_FAILURE = \"UNLIKE_COMMENT_FAILURE\" as const;\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\" as const;\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\" as const;\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\" as const;\r\nexport const ADD_COMMENT_CLEAR = \"ADD_COMMENT_CLEAR\" as const;\r\n\r\nexport const REMOVE_COMMENT_REQUEST = \"REMOVE_COMMENT_REQUEST\" as const;\r\nexport const REMOVE_COMMENT_SUCCESS = \"REMOVE_COMMENT_SUCCESS\" as const;\r\nexport const REMOVE_COMMENT_FAILURE = \"REMOVE_COMMENT_FAILURE\" as const;\r\n\r\nexport const EDIT_COMMENT_REQUEST = \"EDIT_COMMENT_REQUEST\" as const;\r\nexport const EDIT_COMMENT_SUCCESS = \"EDIT_COMMENT_SUCCESS\" as const;\r\nexport const EDIT_COMMENT_FAILURE = \"EDIT_COMMENT_FAILURE\" as const;\r\nexport const EDIT_COMMENT_CLEAR = \"EDIT_COMMENT_CLEAR\" as const;\r\n\r\nexport const ADD_SUB_COMMENT_REQUEST = \"ADD_SUB_COMMENT_REQUEST\" as const;\r\nexport const ADD_SUB_COMMENT_SUCCESS = \"ADD_SUB_COMMENT_SUCCESS\" as const;\r\nexport const ADD_SUB_COMMENT_FAILURE = \"ADD_SUB_COMMENT_FAILURE\" as const;\r\nexport const ADD_SUB_COMMENT_CLEAR = \"ADD_SUB_COMMENT_CLEAR\" as const;\r\n\r\nexport const REMOVE_SUB_COMMENT_REQUEST = \"REMOVE_SUB_COMMENT_REQUEST\" as const;\r\nexport const REMOVE_SUB_COMMENT_SUCCESS = \"REMOVE_SUB_COMMENT_SUCCESS\" as const;\r\nexport const REMOVE_SUB_COMMENT_FAILURE = \"REMOVE_SUB_COMMENT_FAILURE\" as const;\r\n\r\nexport const EDIT_SUB_COMMENT_REQUEST = \"EDIT_SUB_COMMENT_REQUEST\" as const;\r\nexport const EDIT_SUB_COMMENT_SUCCESS = \"EDIT_SUB_COMMENT_SUCCESS\" as const;\r\nexport const EDIT_SUB_COMMENT_FAILURE = \"EDIT_SUB_COMMENT_FAILURE\" as const;\r\nexport const EDIT_SUB_COMMENT_CLEAR = \"EDIT_SUB_COMMENT_CLEAR\" as const;\r\n\r\nconst reducer = (state: PostState = initialState, action: any) =>\r\n  produce(state, (draft: any) => {\r\n    switch (action.type) {\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostError = false;\r\n        draft.addPostDone = false;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        action.data.category === \"tech\" && draft.techPosts.unshift(action.data);\r\n        action.data.category === \"daily\" && draft.dailyPosts.unshift(action.data);\r\n        action.data.category === \"class\" && draft.classPosts.unshift(action.data);\r\n        action.data.category === \"culture\" && draft.culturePosts.unshift(action.data);\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case ADD_POST_CLEAR:\r\n        draft.addPostDone = false;\r\n        draft.addPostError = false;\r\n        break;\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsDone = false;\r\n        draft.loadPostsError = false;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.techPosts = action.data.techPosts;\r\n        draft.dailyPosts = action.data.dailyPosts;\r\n        draft.hashtags = action.data.hashtags;\r\n        draft.mostViewedPost = action.data.mostViewedPost;\r\n        draft.mostLikedPost = action.data.mostLikedPost;\r\n        draft.mostCommentedPost = action.data.mostCommentedPost;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n      case LOAD_POST_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsDone = false;\r\n        draft.loadPostsError = false;\r\n        break;\r\n      case LOAD_POST_SUCCESS:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.post = action.data.post;\r\n        draft.prevPost = action.data.prevPost;\r\n        draft.nextPost = action.data.nextPost;\r\n        break;\r\n      case LOAD_POST_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n      case LOAD_CATEGORY_POSTS_REQUEST:\r\n        draft.loadCategoryPostsLoading = true;\r\n        draft.loadCategoryPostsDone = false;\r\n        draft.loadCategoryPostsError = false;\r\n        break;\r\n      case LOAD_CATEGORY_POSTS_SUCCESS:\r\n        draft.loadCategoryPostsLoading = false;\r\n        draft.loadCategoryPostsDone = true;\r\n        draft.techPosts = action.data.category === \"tech\" ? action.data.posts : false;\r\n        draft.dailyPosts = action.data.category === \"daily\" ? action.data.posts : false;\r\n        draft.countPosts = action.data.countPosts;\r\n        draft.hasMorePosts = action.data.posts.length > 6;\r\n        break;\r\n      case LOAD_CATEGORY_POSTS_FAILURE:\r\n        draft.loadCategoryPostsLoading = false;\r\n        draft.loadCategoryPostsError = action.error;\r\n        break;\r\n      case LOAD_MORE_POSTS_REQUEST:\r\n        draft.loadMorePostsLoading = true;\r\n        draft.loadMorePostsDone = false;\r\n        draft.loadMorePostsError = false;\r\n        break;\r\n      case LOAD_MORE_POSTS_SUCCESS:\r\n        draft.loadMorePostsLoading = false;\r\n        draft.loadMorePostsDone = true;\r\n        //카테고리에 맞는 포스트를 넣어준다.\r\n        const moreTechPosts =\r\n          action.data.category === \"tech\" && draft.techPosts.concat(action.data.morePosts);\r\n        const moreDailyPosts =\r\n          action.data.category === \"daily\" && draft.dailyPosts.concat(action.data.morePosts);\r\n        draft.techPosts = moreTechPosts;\r\n        draft.dailyPosts = moreDailyPosts;\r\n        //불러온 포스트가 limit값인 6개라는것은 불러온 포스트가 더 있다는 의미이다.\r\n        //만약 갯수가 딱 맞아서 다음 값이 없다고 해도 그 요청은 0개임으로 false가 된다.\r\n        draft.hasMorePosts = action.data.morePosts.length === 6;\r\n        break;\r\n      case LOAD_MORE_POSTS_FAILURE:\r\n        draft.loadMorePostsLoading = false;\r\n        draft.loadMorePostsError = action.error;\r\n        draft.hasMorePosts = false;\r\n        break;\r\n      case LOAD_CLASS_POSTS_REQUEST:\r\n        draft.loadClassPostsLoading = true;\r\n        draft.loadClassPostsDone = false;\r\n        draft.loadClassPostsError = false;\r\n        break;\r\n      case LOAD_CLASS_POSTS_SUCCESS:\r\n        draft.loadClassPostsLoading = false;\r\n        draft.loadClassPostsDone = true;\r\n        draft.classPosts = action.data.classPosts_class;\r\n        draft.culturePosts = action.data.culturePosts_class;\r\n        draft.quizzes = action.data.quizzes;\r\n        draft.words = action.data.words;\r\n        break;\r\n      case LOAD_CLASS_POSTS_FAILURE:\r\n        draft.loadClassPostsLoading = false;\r\n        draft.loadClassPostsError = action.error;\r\n        break;\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = false;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS: {\r\n        draft.post?.Comments?.push(action.data);\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        break;\r\n      }\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n        break;\r\n      case ADD_COMMENT_CLEAR:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = false;\r\n        break;\r\n\r\n      case LIKE_POST_REQUEST:\r\n        draft.likePostLoading = true;\r\n        draft.likePostDone = false;\r\n        draft.likePostError = false;\r\n        break;\r\n      case LIKE_POST_SUCCESS: {\r\n        draft.post?.PostLikers?.push({ id: action.data.UserId });\r\n        draft.likePostLoading = false;\r\n        draft.likePostDone = true;\r\n        break;\r\n      }\r\n      case LIKE_POST_FAILURE:\r\n        draft.likePostLoading = false;\r\n        draft.likePostError = action.error;\r\n        break;\r\n      case UNLIKE_POST_REQUEST:\r\n        draft.unlikePostLoading = true;\r\n        draft.unlikePostDone = false;\r\n        draft.unlikePostError = false;\r\n        break;\r\n      case UNLIKE_POST_SUCCESS: {\r\n        draft.post?.PostLikers?.filter((v: any) => v.id !== action.data.UserId);\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostDone = true;\r\n        break;\r\n      }\r\n      case UNLIKE_POST_FAILURE:\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostError = action.error;\r\n        break;\r\n      case EDIT_POST_REQUEST:\r\n        draft.editPostLoading = true;\r\n        draft.editPostDone = false;\r\n        draft.editPostError = false;\r\n        break;\r\n      case EDIT_POST_SUCCESS:\r\n        draft.editPostLoading = false;\r\n        draft.editPostDone = true;\r\n        break;\r\n      case EDIT_POST_FAILURE:\r\n        draft.editPostLoading = false;\r\n        draft.editPostError = action.error;\r\n        break;\r\n      case EDIT_POST_CLEAR:\r\n        draft.editPostLoading = false;\r\n        draft.editPostDone = false;\r\n        draft.editPostError = false;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = false;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        break;\r\n      case REMOVE_POST_CLEAR:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = false;\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case EDIT_COMMENT_REQUEST:\r\n        draft.editCommentLoading = true;\r\n        draft.editCommentDone = false;\r\n        draft.editCommentError = false;\r\n        break;\r\n      case EDIT_COMMENT_SUCCESS: {\r\n        draft.post.Comments.find((v: CommentsInter) => {\r\n          return v.id === action.data.CommentId;\r\n        }).content = action.data.newComment;\r\n        draft.editCommentLoading = false;\r\n        draft.editCommentDone = true;\r\n        break;\r\n      }\r\n      case EDIT_COMMENT_FAILURE:\r\n        draft.editCommentLoading = false;\r\n        draft.editCommentError = action.error;\r\n        break;\r\n      case EDIT_COMMENT_CLEAR:\r\n        draft.editCommentLoading = false;\r\n        draft.editCommentDone = false;\r\n        draft.editCommentError = false;\r\n        break;\r\n      case REMOVE_COMMENT_REQUEST:\r\n        draft.removeCommentLoading = true;\r\n        draft.removeCommentDone = false;\r\n        draft.removeCommentError = false;\r\n        break;\r\n      case REMOVE_COMMENT_SUCCESS: {\r\n        draft.removeCommentLoading = false;\r\n        draft.removeCommentDone = true;\r\n        break;\r\n      }\r\n      case REMOVE_COMMENT_FAILURE:\r\n        draft.removeCommentLoading = false;\r\n        draft.removeCommentError = action.error;\r\n        break;\r\n      case LIKE_COMMENT_REQUEST:\r\n        draft.likeCommentLoading = true;\r\n        draft.likeCommentDone = false;\r\n        draft.likeCommentError = false;\r\n        break;\r\n      case LIKE_COMMENT_SUCCESS: {\r\n        draft.post?.Comments?.find((v: any) => v.id === action.data.CommentId).CommentLikers.push({\r\n          id: action.data.UserId,\r\n        });\r\n        draft.likeCommentLoading = false;\r\n        draft.likeCommentDone = true;\r\n        break;\r\n      }\r\n      case LIKE_COMMENT_FAILURE:\r\n        draft.likeCommentLoading = false;\r\n        draft.likeCommentError = action.error;\r\n        break;\r\n      case UNLIKE_COMMENT_REQUEST:\r\n        //REQUEST , SUCCESS , FAILURE 로 Reducer를 쪼개서 오류관리를 보다 쉽게 했습니다.\r\n        draft.unlikeCommentLoading = true;\r\n        draft.unlikeCommentDone = false;\r\n        draft.unlikeCommentError = false;\r\n        break;\r\n      case UNLIKE_COMMENT_SUCCESS: {\r\n        //immer 적용으로 불변성을 안지켜도 됨.\r\n        let CommentsWithoutDeleted = draft.post?.Comments?.find(\r\n          (v: CommentsInter) => v.id === action.data.CommentId\r\n        ).CommentLikers.filter((v: any) => v.id !== action.data.UserId);\r\n        draft.post.Comments.find(\r\n          (v: CommentsInter) => v.id === action.data.CommentId\r\n        ).CommentLikers = CommentsWithoutDeleted;\r\n        draft.unlikeCommentLoading = false;\r\n        draft.unlikeCommentDone = true;\r\n        break;\r\n      }\r\n      case UNLIKE_COMMENT_FAILURE:\r\n        draft.unlikeCommentLoading = false;\r\n        draft.unlikeCommentError = action.error;\r\n        break;\r\n      case ADD_SUB_COMMENT_SUCCESS: {\r\n        draft.post?.Comments?.find((v: any) => v.id === action.data.CommentId).SubComments.push(\r\n          action.data.fullSubComment\r\n        );\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        break;\r\n      }\r\n      case ADD_SUB_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n        break;\r\n      case ADD_SUB_COMMENT_CLEAR:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = false;\r\n        break;\r\n\r\n      case EDIT_SUB_COMMENT_REQUEST:\r\n        draft.editSubCommentLoading = true;\r\n        draft.editSubCommentDone = false;\r\n        draft.editSubCommentError = false;\r\n        break;\r\n      case EDIT_SUB_COMMENT_SUCCESS: {\r\n        draft.post.Comments.find((v: CommentsInter) => {\r\n          return v.id === action.data.CommentId;\r\n        }).SubComments.find((v: any) => {\r\n          return v.id === action.data.SubCommentId;\r\n        }).content = action.data.content;\r\n        draft.editSubCommentLoading = false;\r\n        draft.editSubCommentDone = true;\r\n        break;\r\n      }\r\n      case EDIT_SUB_COMMENT_FAILURE:\r\n        draft.editSubCommentLoading = false;\r\n        draft.editSubCommentError = action.error;\r\n        break;\r\n      case EDIT_SUB_COMMENT_CLEAR:\r\n        draft.editSubCommentLoading = false;\r\n        draft.editSubCommentDone = false;\r\n        draft.editSubCommentError = false;\r\n        break;\r\n      case REMOVE_SUB_COMMENT_REQUEST:\r\n        draft.removeSubCommentLoading = true;\r\n        draft.removeSubCommentDone = false;\r\n        draft.removeSubCommentError = false;\r\n        break;\r\n      case REMOVE_SUB_COMMENT_SUCCESS: {\r\n        draft.removeSubCommentLoading = false;\r\n        draft.removeSubCommentDone = true;\r\n        break;\r\n      }\r\n      case REMOVE_SUB_COMMENT_FAILURE:\r\n        draft.removeSubCommentLoading = false;\r\n        draft.removeSubCommentError = action.error;\r\n        break;\r\n      case UPLOAD_IMAGES_REQUEST:\r\n        draft.uploadImagesLoading = true;\r\n        draft.uploadImagesDone = false;\r\n        draft.uploadImagesError = false;\r\n        break;\r\n      case UPLOAD_IMAGES_SUCCESS: {\r\n        draft.imagePath = action.data;\r\n        draft.uploadImagesLoading = false;\r\n        draft.uploadImagesDone = true;\r\n        break;\r\n      }\r\n      case UPLOAD_IMAGES_FAILURE:\r\n        draft.uploadImagesLoading = false;\r\n        draft.uploadImagesError = action.error;\r\n        break;\r\n      case UPLOAD_IMAGES_CLEAR:\r\n        draft.uploadImagesLoading = false;\r\n        draft.uploadImagesDone = false;\r\n        break;\r\n      case UPLOAD_POST_IMAGE_REQUEST:\r\n        draft.uploadPostImageLoading = true;\r\n        draft.uploadPostImageDone = false;\r\n        draft.uploadPostImageError = false;\r\n        break;\r\n      case UPLOAD_POST_IMAGE_SUCCESS: {\r\n        draft.postImagePath = action.data;\r\n        draft.uploadPostImageLoading = false;\r\n        draft.uploadPostImageDone = true;\r\n        break;\r\n      }\r\n      case UPLOAD_POST_IMAGE_FAILURE:\r\n        draft.uploadPostImageLoading = false;\r\n        draft.uploadPostImageError = action.error;\r\n        break;\r\n      case UPLOAD_POST_IMAGE_CLEAR:\r\n        draft.uploadPostImageLoading = false;\r\n        draft.uploadPostImageDone = false;\r\n        break;\r\n      case LOAD_RECENT_POSTS_REQUEST:\r\n        draft.loadRecentPostsLoading = true;\r\n        draft.loadRecentPostsDone = false;\r\n        draft.loadRecentPostsError = false;\r\n        break;\r\n      case LOAD_RECENT_POSTS_SUCCESS:\r\n        draft.loadRecentPostsLoading = false;\r\n        draft.loadRecentPostsDone = true;\r\n        draft.recentViewPost = action.data.recentViewPost;\r\n        draft.recentCommentPost = action.data.recentCommentPost;\r\n        break;\r\n      case LOAD_RECENT_POSTS_FAILURE:\r\n        draft.loadRecentPostsLoading = false;\r\n        draft.loadRecentPostsError = action.error;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}