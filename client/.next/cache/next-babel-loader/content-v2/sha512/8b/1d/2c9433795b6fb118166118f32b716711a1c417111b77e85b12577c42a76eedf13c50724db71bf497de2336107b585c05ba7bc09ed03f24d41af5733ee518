{"ast":null,"code":"import _styled from \"@emotion/styled/base\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noah\\\\Desktop\\\\Project\\\\Noahworld\\\\client\\\\components\\\\Blog\\\\Class\\\\QuizForm.tsx\";\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { Input, message } from \"antd\";\nimport React, { memo, useCallback, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ArrowRightOutlined, EnterOutlined } from \"@ant-design/icons\";\nimport useInput from \"../../../util/useInput\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst Quiz = _styled(\"div\", false ? {\n  target: \"e1wpxer25\"\n} : {\n  target: \"e1wpxer25\",\n  label: \"Quiz\"\n})(false ? {\n  name: \"q33aza\",\n  styles: \"display:block;position:relative;overflow:hidden;width:100%;height:500px;.quiz_input_wrapper{width:320px;position:absolute;right:3.5rem;bottom:0.6rem;}.quiz_input{width:300px;}@media only screen and (max-width: 476px){display:none;}\"\n} : {\n  name: \"q33aza\",\n  styles: \"display:block;position:relative;overflow:hidden;width:100%;height:500px;.quiz_input_wrapper{width:320px;position:absolute;right:3.5rem;bottom:0.6rem;}.quiz_input{width:300px;}@media only screen and (max-width: 476px){display:none;}\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nconst QuizWrapper = _styled(\"div\", false ? {\n  target: \"e1wpxer24\"\n} : {\n  target: \"e1wpxer24\",\n  label: \"QuizWrapper\"\n})(false ? {\n  name: \"x3o4b7\",\n  styles: \"width:420px;height:100%;position:absolute;right:1rem;bottom:0\"\n} : {\n  name: \"x3o4b7\",\n  styles: \"width:420px;height:100%;position:absolute;right:1rem;bottom:0\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nconst KakaoContent = _styled(\"div\", false ? {\n  target: \"e1wpxer23\"\n} : {\n  target: \"e1wpxer23\",\n  label: \"KakaoContent\"\n})(\"font-size:0.9rem;padding:0.5rem;background-color:\", ({\n  whiteType\n}) => whiteType ? \"rgb(235, 235, 235)\" : \"#ffe941\", \";border-radius:3px;margin-bottom:1rem;width:100%;height:80px;position:relative;word-break:break-all;-ms-overflow-style:none;overflow:auto;&::-webkit-scrollbar{display:none;}button{margin-top:0.5rem;font-size:1rem;padding:0.5rem 1rem;float:right;}\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\n\nconst ContentTailQuestion = _styled(\"div\", false ? {\n  target: \"e1wpxer22\"\n} : {\n  target: \"e1wpxer22\",\n  label: \"ContentTailQuestion\"\n})(false ? {\n  name: \"7ub5ei\",\n  styles: \"position:absolute;left:-5px;transform:rotateZ(45deg);top:10px;width:9px;height:9px;background-color:#ffe941;content:\\\"\\\"\"\n} : {\n  name: \"7ub5ei\",\n  styles: \"position:absolute;left:-5px;transform:rotateZ(45deg);top:10px;width:9px;height:9px;background-color:#ffe941;content:\\\"\\\"\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENsYXNzXFxRdWl6Rm9ybS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0RzQyIsImZpbGUiOiJDOlxcVXNlcnNcXE5vYWhcXERlc2t0b3BcXFByb2plY3RcXE5vYWh3b3JsZFxcY2xpZW50XFxjb21wb25lbnRzXFxCbG9nXFxDbGFzc1xcUXVpekZvcm0udHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUganN4LWExMXkvYW5jaG9yLWlzLXZhbGlkICovXHJcbmltcG9ydCB7IElucHV0LCBtZXNzYWdlIH0gZnJvbSBcImFudGRcIjtcclxuaW1wb3J0IFJlYWN0LCB7IG1lbW8sIHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJAZW1vdGlvbi9zdHlsZWRcIjtcclxuaW1wb3J0IHsgQXJyb3dSaWdodE91dGxpbmVkLCBFbnRlck91dGxpbmVkIH0gZnJvbSBcIkBhbnQtZGVzaWduL2ljb25zXCI7XHJcbmltcG9ydCB7IFJvb3RTdGF0ZSB9IGZyb20gXCIuLi8uLi8uLi9AcmVkdWNlcnNcIjtcclxuaW1wb3J0IHVzZUlucHV0IGZyb20gXCIuLi8uLi8uLi91dGlsL3VzZUlucHV0XCI7XHJcblxyXG5jb25zdCBRdWl6ID0gc3R5bGVkLmRpdmBcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDUwMHB4O1xyXG4gIC5xdWl6X2lucHV0X3dyYXBwZXIge1xyXG4gICAgd2lkdGg6IDMyMHB4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgcmlnaHQ6IDMuNXJlbTtcclxuICAgIGJvdHRvbTogMC42cmVtO1xyXG4gIH1cclxuICAucXVpel9pbnB1dCB7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbiAgfVxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDc2cHgpIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG5gO1xyXG5jb25zdCBRdWl6V3JhcHBlciA9IHN0eWxlZC5kaXZgXHJcbiAgd2lkdGg6IDQyMHB4O1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgcmlnaHQ6IDFyZW07XHJcbiAgYm90dG9tOiAwO1xyXG5gO1xyXG5cclxuaW50ZXJmYWNlIEtha2FvQ29udGVudFByb3BzIHtcclxuICB3aGl0ZVR5cGU6IEJvb2xlYW47XHJcbn1cclxuXHJcbmNvbnN0IEtha2FvQ29udGVudCA9IHN0eWxlZC5kaXY8S2FrYW9Db250ZW50UHJvcHM+YFxyXG4gIGZvbnQtc2l6ZTogMC45cmVtO1xyXG4gIHBhZGRpbmc6IDAuNXJlbTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyh7IHdoaXRlVHlwZSB9KSA9PiAod2hpdGVUeXBlID8gXCJyZ2IoMjM1LCAyMzUsIDIzNSlcIiA6IFwiI2ZmZTk0MVwiKX07XHJcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiA4MHB4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lO1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG4gICY6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG4gIGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAwLjVyZW07XHJcbiAgICBmb250LXNpemU6IDFyZW07XHJcbiAgICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBDb250ZW50VGFpbFF1ZXN0aW9uID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbGVmdDogLTVweDtcclxuICB0cmFuc2Zvcm06IHJvdGF0ZVooNDVkZWcpO1xyXG4gIHRvcDogMTBweDtcclxuICB3aWR0aDogOXB4O1xyXG4gIGhlaWdodDogOXB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmU5NDE7XHJcbiAgY29udGVudDogXCJcIjtcclxuYDtcclxuY29uc3QgQ29udGVudFRhaWxBbnN3ZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICByaWdodDogLTAuMzJyZW07XHJcbiAgdHJhbnNmb3JtOiByb3RhdGVaKDQ1ZGVnKTtcclxuICB6LWluZGV4OiAxO1xyXG4gIHdpZHRoOiA5cHg7XHJcbiAgaGVpZ2h0OiA5cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzNSwgMjM1LCAyMzUpO1xyXG4gIGNvbnRlbnQ6IFwiXCI7XHJcbiAgYm90dG9tOiA0cmVtO1xyXG5gO1xyXG5jb25zdCBRdWl6Q29udGVudCA9IHN0eWxlZC5kaXZgXHJcbiAgd2lkdGg6IDI1MHB4O1xyXG4gIGhlaWdodDogMTgwcHg7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHJpZ2h0OiA0cmVtO1xyXG4gIGJvdHRvbTogNC4ycmVtO1xyXG5gO1xyXG5cclxuY29uc3QgUXVpekZvcm0gPSBtZW1vKCgpID0+IHtcclxuICBjb25zdCB7IHF1aXp6ZXMgfSA9IHVzZVNlbGVjdG9yKChzdGF0ZTogUm9vdFN0YXRlKSA9PiBzdGF0ZS5wb3N0KTtcclxuICBjb25zdCBbcXVpekFuc3dlciwgb25DaGFuZ2VRdWl6QW5zd2VyLCBzZXRRdWl6QW5zd2VyXSA9IHVzZUlucHV0KFwiXCIpO1xyXG4gIGNvbnN0IFt2aWV3UXVpekFuc3dlciwgc2V0Vmlld1F1aXpBbnN3ZXJdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IFtyYW5kb21RdWl6LCBzZXRSYW5kb21RdWl6XSA9IHVzZVN0YXRlKDApO1xyXG5cclxuICBjb25zdCBvbkNsaWNrTmV4dFF1aXogPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICAvL+y0nSDtgLTspogg6rCv7IiY7KSRIO2VmOuCmOulvCDrnpzrjaTsnLzroZwg672R7JWE7Ji164uI64ukLlxyXG4gICAgbGV0IG15UmFuZE51bSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHF1aXp6ZXMubGVuZ3RoKTtcclxuICAgIC8v66eM7JW9IOuenOuNpOycvOuhnCDrvZHsnYAg6rCS7J20IO2YhOyerOqwkuydtOuekSDsnbzsuZjtlZzri6TrqbQuLi5cclxuICAgIGlmIChteVJhbmROdW0gPT09IHJhbmRvbVF1aXopIHtcclxuICAgICAgLy8yLiDrnpzrjaTsnLzroZwg672R7J2A6rCS7J20IOuniOyngOunieqwkuyduCDsg4Htg5zsl5DshJwgKzEg7J2EIO2VmOqyjCDrkJjrqbQg7Jik66WY6rCAIOuCmOqyjCDrkJjquLAg65WM66y47JeQXHJcbiAgICAgIC8vICAg7LKr67KI7Ke4IOqwkuycvOuhnCDrs4Dqsr3tlbTshJwg66as7YS07ZW07KSN64uI64ukLlxyXG4gICAgICBpZiAobXlSYW5kTnVtID09PSBxdWl6emVzLmxlbmd0aCAtIDEpIHtcclxuICAgICAgICBzZXRSYW5kb21RdWl6KDApO1xyXG4gICAgICAgIHNldFZpZXdRdWl6QW5zd2VyKGZhbHNlKTtcclxuICAgICAgICBzZXRRdWl6QW5zd2VyKFwiXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICAvLzEuIOuenOuNpOycvOuhnCDrvZHsnYAg6rCS7J2YIOuLpOydjOqwkuydhCDrpqzthLTtlanri4jri6QuXHJcbiAgICAgIHNldFJhbmRvbVF1aXoobXlSYW5kTnVtICsgMSk7XHJcbiAgICAgIHNldFZpZXdRdWl6QW5zd2VyKGZhbHNlKTtcclxuICAgICAgc2V0UXVpekFuc3dlcihcIlwiKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgc2V0UmFuZG9tUXVpeihteVJhbmROdW0pO1xyXG4gICAgc2V0Vmlld1F1aXpBbnN3ZXIoZmFsc2UpO1xyXG4gICAgc2V0UXVpekFuc3dlcihcIlwiKTtcclxuICB9LCBbcXVpenplcy5sZW5ndGgsIHJhbmRvbVF1aXosIHNldFF1aXpBbnN3ZXJdKTtcclxuXHJcbiAgY29uc3Qgb25DbGlja1F1aXpTdWJtaXQgPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICAvL+2AtOymiOyXkCDqsJLsnYQg64Sj7KeAIOyViuyVmOuLpOuptCDsoJzstpzrsoTtirzsnbQg7J6R64+Z7ZWY7KeAIOyViuqyjCDtlanri4jri6QuXHJcbiAgICBpZiAocXVpekFuc3dlciA9PT0gXCJcIikge1xyXG4gICAgICBtZXNzYWdlLmVycm9yKFwi562U44GI44KS5pu444GE44Gm44GP44Gg44GV44GE44Gt77yBXCIpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBzZXRWaWV3UXVpekFuc3dlcih0cnVlKTtcclxuICB9LCBbcXVpekFuc3dlcl0pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFF1aXpcclxuICAgICAgc3R5bGU9e3tcclxuICAgICAgICBiYWNrZ3JvdW5kOiBgdXJsKCdodHRwczovL2ltYWdlcy51bnNwbGFzaC5jb20vcGhvdG8tMTUyMjc3MTczOTg0NC02YTlmNmQ1ZjE0YWY/aXhpZD1NWHd4TWpBM2ZEQjhNSHh3YUc5MGJ5MXdZV2RsZkh4OGZHVnVmREI4Zkh3JTNEJml4bGliPXJiLTEuMi4xJmF1dG89Zm9ybWF0JmZpdD1jcm9wJnc9MTM1MSZxPTgwJykgbm8tcmVwZWF0IGJvdHRvbSBmaXhlZGAsXHJcbiAgICAgICAgYmFja2dyb3VuZFNpemU6IFwiY292ZXJcIixcclxuICAgICAgfX1cclxuICAgID5cclxuICAgICAgPFF1aXpXcmFwcGVyXHJcbiAgICAgICAgc3R5bGU9e3tcclxuICAgICAgICAgIGJhY2tncm91bmQ6IGB1cmwoJy9pbWFnZXMvYmxvZy9rYWthby5wbmcnKSBuby1yZXBlYXRgLFxyXG4gICAgICAgICAgYmFja2dyb3VuZFNpemU6IFwiY292ZXJcIixcclxuICAgICAgICB9fVxyXG4gICAgICA+XHJcbiAgICAgICAgPFF1aXpDb250ZW50PlxyXG4gICAgICAgICAgPENvbnRlbnRUYWlsUXVlc3Rpb24gLz5cclxuICAgICAgICAgIDxLYWthb0NvbnRlbnQgd2hpdGVUeXBlPXtmYWxzZX0+XHJcbiAgICAgICAgICAgIHt2aWV3UXVpekFuc3dlciA/IHF1aXp6ZXNbcmFuZG9tUXVpel0/LmFuc3dlciA6IHF1aXp6ZXNbcmFuZG9tUXVpel0/LnF1ZXN0aW9ufVxyXG4gICAgICAgICAgPC9LYWthb0NvbnRlbnQ+XHJcbiAgICAgICAgICB7dmlld1F1aXpBbnN3ZXIgPyAoXHJcbiAgICAgICAgICAgIDw+XHJcbiAgICAgICAgICAgICAgPENvbnRlbnRUYWlsQW5zd2VyIC8+XHJcbiAgICAgICAgICAgICAgPEtha2FvQ29udGVudCB3aGl0ZVR5cGU9e3RydWV9PlxyXG4gICAgICAgICAgICAgICAg6LK05pa544Gu562U44GI77yae3F1aXpBbnN3ZXJ9XHJcbiAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwicHVibGljX2J0blwiIG9uQ2xpY2s9e29uQ2xpY2tOZXh0UXVpen0+XHJcbiAgICAgICAgICAgICAgICAgIOasoeOBruOCr+OCpOOCulxyXG4gICAgICAgICAgICAgICAgICA8QXJyb3dSaWdodE91dGxpbmVkIC8+XHJcbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICAgICAgICA8L0tha2FvQ29udGVudD5cclxuICAgICAgICAgICAgPC8+XHJcbiAgICAgICAgICApIDogbnVsbH1cclxuICAgICAgICA8L1F1aXpDb250ZW50PlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicXVpel9pbnB1dF93cmFwcGVyXCI+XHJcbiAgICAgICAgICA8SW5wdXRcclxuICAgICAgICAgICAgY2xhc3NOYW1lPVwicXVpel9pbnB1dFwiXHJcbiAgICAgICAgICAgIHZhbHVlPXtxdWl6QW5zd2VyfVxyXG4gICAgICAgICAgICBkaXNhYmxlZD17dmlld1F1aXpBbnN3ZXIgPyB0cnVlIDogZmFsc2V9XHJcbiAgICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZVF1aXpBbnN3ZXJ9XHJcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwi57+76Kiz44GX44Gm44GP44KM77yBXCJcclxuICAgICAgICAgICAgYm9yZGVyZWQ9e2ZhbHNlfVxyXG4gICAgICAgICAgICBvblByZXNzRW50ZXI9e29uQ2xpY2tRdWl6U3VibWl0fVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIDxhPlxyXG4gICAgICAgICAgICA8RW50ZXJPdXRsaW5lZFxyXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tRdWl6U3VibWl0fVxyXG4gICAgICAgICAgICAgIHN0eWxlPXt7IGNvbG9yOiBcIiNDQUJGQ0NcIiwgZm9udFNpemU6IFwiMS4ycmVtXCIgfX1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgIDwvYT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9RdWl6V3JhcHBlcj5cclxuICAgIDwvUXVpej5cclxuICApO1xyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG1lbW8oUXVpekZvcm0pO1xyXG4iXX0= */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nconst ContentTailAnswer = _styled(\"div\", false ? {\n  target: \"e1wpxer21\"\n} : {\n  target: \"e1wpxer21\",\n  label: \"ContentTailAnswer\"\n})(false ? {\n  name: \"yk8mwo\",\n  styles: \"position:absolute;right:-0.32rem;transform:rotateZ(45deg);z-index:1;width:9px;height:9px;background-color:rgb(235, 235, 235);content:\\\"\\\";bottom:4rem\"\n} : {\n  name: \"yk8mwo\",\n  styles: \"position:absolute;right:-0.32rem;transform:rotateZ(45deg);z-index:1;width:9px;height:9px;background-color:rgb(235, 235, 235);content:\\\"\\\";bottom:4rem\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nconst QuizContent = _styled(\"div\", false ? {\n  target: \"e1wpxer20\"\n} : {\n  target: \"e1wpxer20\",\n  label: \"QuizContent\"\n})(false ? {\n  name: \"17hkg96\",\n  styles: \"width:250px;height:180px;position:absolute;right:4rem;bottom:4.2rem\"\n} : {\n  name: \"17hkg96\",\n  styles: \"width:250px;height:180px;position:absolute;right:4rem;bottom:4.2rem\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nconst QuizForm = /*#__PURE__*/memo(() => {\n  var _quizzes$randomQuiz, _quizzes$randomQuiz2;\n\n  const {\n    quizzes\n  } = useSelector(state => state.post);\n  const [quizAnswer, onChangeQuizAnswer, setQuizAnswer] = useInput(\"\");\n  const {\n    0: viewQuizAnswer,\n    1: setViewQuizAnswer\n  } = useState(false);\n  const {\n    0: randomQuiz,\n    1: setRandomQuiz\n  } = useState(0);\n  const onClickNextQuiz = useCallback(() => {\n    //총 퀴즈 갯수중 하나를 랜덤으로 뽑아옵니다.\n    let myRandNum = Math.floor(Math.random() * quizzes.length); //만약 랜덤으로 뽑은 값이 현재값이랑 일치한다면...\n\n    if (myRandNum === randomQuiz) {\n      //2. 랜덤으로 뽑은값이 마지막값인 상태에서 +1 을 하게 되면 오류가 나게 되기 때문에\n      //   첫번째 값으로 변경해서 리턴해줍니다.\n      if (myRandNum === quizzes.length - 1) {\n        setRandomQuiz(0);\n        setViewQuizAnswer(false);\n        setQuizAnswer(\"\");\n        return;\n      } //1. 랜덤으로 뽑은 값의 다음값을 리턴합니다.\n\n\n      setRandomQuiz(myRandNum + 1);\n      setViewQuizAnswer(false);\n      setQuizAnswer(\"\");\n      return;\n    }\n\n    setRandomQuiz(myRandNum);\n    setViewQuizAnswer(false);\n    setQuizAnswer(\"\");\n  }, [quizzes.length, randomQuiz, setQuizAnswer]);\n  const onClickQuizSubmit = useCallback(() => {\n    //퀴즈에 값을 넣지 않았다면 제출버튼이 작동하지 않게 합니다.\n    if (quizAnswer === \"\") {\n      message.error(\"答えを書いてくださいね！\");\n      return;\n    }\n\n    setViewQuizAnswer(true);\n  }, [quizAnswer]);\n  return ___EmotionJSX(Quiz, {\n    style: {\n      background: `url('https://images.unsplash.com/photo-1522771739844-6a9f6d5f14af?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1351&q=80') no-repeat bottom fixed`,\n      backgroundSize: \"cover\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(QuizWrapper, {\n    style: {\n      background: `url('/images/blog/kakao.png') no-repeat`,\n      backgroundSize: \"cover\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(QuizContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(ContentTailQuestion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }), ___EmotionJSX(KakaoContent, {\n    whiteType: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, viewQuizAnswer ? (_quizzes$randomQuiz = quizzes[randomQuiz]) === null || _quizzes$randomQuiz === void 0 ? void 0 : _quizzes$randomQuiz.answer : (_quizzes$randomQuiz2 = quizzes[randomQuiz]) === null || _quizzes$randomQuiz2 === void 0 ? void 0 : _quizzes$randomQuiz2.question), viewQuizAnswer ? ___EmotionJSX(React.Fragment, null, ___EmotionJSX(ContentTailAnswer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }), ___EmotionJSX(KakaoContent, {\n    whiteType: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, \"\\u8CB4\\u65B9\\u306E\\u7B54\\u3048\\uFF1A\", quizAnswer, ___EmotionJSX(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }), ___EmotionJSX(\"button\", {\n    className: \"public_btn\",\n    onClick: onClickNextQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, \"\\u6B21\\u306E\\u30AF\\u30A4\\u30BA\", ___EmotionJSX(ArrowRightOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  })))) : null), ___EmotionJSX(\"div\", {\n    className: \"quiz_input_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Input, {\n    className: \"quiz_input\",\n    value: quizAnswer,\n    disabled: viewQuizAnswer ? true : false,\n    onChange: onChangeQuizAnswer,\n    placeholder: \"\\u7FFB\\u8A33\\u3057\\u3066\\u304F\\u308C\\uFF01\",\n    bordered: false,\n    onPressEnter: onClickQuizSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }), ___EmotionJSX(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(EnterOutlined, {\n    onClick: onClickQuizSubmit,\n    style: {\n      color: \"#CABFCC\",\n      fontSize: \"1.2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  })))));\n});\nexport default /*#__PURE__*/memo(QuizForm);","map":{"version":3,"sources":["C:/Users/Noah/Desktop/Project/Noahworld/client/components/Blog/Class/QuizForm.tsx"],"names":["Input","message","React","memo","useCallback","useState","useSelector","ArrowRightOutlined","EnterOutlined","useInput","Quiz","QuizWrapper","KakaoContent","whiteType","ContentTailQuestion","ContentTailAnswer","QuizContent","QuizForm","quizzes","state","post","quizAnswer","onChangeQuizAnswer","setQuizAnswer","viewQuizAnswer","setViewQuizAnswer","randomQuiz","setRandomQuiz","onClickNextQuiz","myRandNum","Math","floor","random","length","onClickQuizSubmit","error","background","backgroundSize","answer","question","color","fontSize"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { Input, message } from \"antd\";\r\nimport React, { memo, useCallback, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"@emotion/styled\";\r\nimport { ArrowRightOutlined, EnterOutlined } from \"@ant-design/icons\";\r\nimport { RootState } from \"../../../@reducers\";\r\nimport useInput from \"../../../util/useInput\";\r\n\r\nconst Quiz = styled.div`\r\n  display: block;\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: 500px;\r\n  .quiz_input_wrapper {\r\n    width: 320px;\r\n    position: absolute;\r\n    right: 3.5rem;\r\n    bottom: 0.6rem;\r\n  }\r\n  .quiz_input {\r\n    width: 300px;\r\n  }\r\n  @media only screen and (max-width: 476px) {\r\n    display: none;\r\n  }\r\n`;\r\nconst QuizWrapper = styled.div`\r\n  width: 420px;\r\n  height: 100%;\r\n  position: absolute;\r\n  right: 1rem;\r\n  bottom: 0;\r\n`;\r\n\r\ninterface KakaoContentProps {\r\n  whiteType: Boolean;\r\n}\r\n\r\nconst KakaoContent = styled.div<KakaoContentProps>`\r\n  font-size: 0.9rem;\r\n  padding: 0.5rem;\r\n  background-color: ${({ whiteType }) => (whiteType ? \"rgb(235, 235, 235)\" : \"#ffe941\")};\r\n  border-radius: 3px;\r\n  margin-bottom: 1rem;\r\n  width: 100%;\r\n  height: 80px;\r\n  position: relative;\r\n  word-break: break-all;\r\n  -ms-overflow-style: none;\r\n  overflow: auto;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  button {\r\n    margin-top: 0.5rem;\r\n    font-size: 1rem;\r\n    padding: 0.5rem 1rem;\r\n    float: right;\r\n  }\r\n`;\r\n\r\nconst ContentTailQuestion = styled.div`\r\n  position: absolute;\r\n  left: -5px;\r\n  transform: rotateZ(45deg);\r\n  top: 10px;\r\n  width: 9px;\r\n  height: 9px;\r\n  background-color: #ffe941;\r\n  content: \"\";\r\n`;\r\nconst ContentTailAnswer = styled.div`\r\n  position: absolute;\r\n  right: -0.32rem;\r\n  transform: rotateZ(45deg);\r\n  z-index: 1;\r\n  width: 9px;\r\n  height: 9px;\r\n  background-color: rgb(235, 235, 235);\r\n  content: \"\";\r\n  bottom: 4rem;\r\n`;\r\nconst QuizContent = styled.div`\r\n  width: 250px;\r\n  height: 180px;\r\n  position: absolute;\r\n  right: 4rem;\r\n  bottom: 4.2rem;\r\n`;\r\n\r\nconst QuizForm = memo(() => {\r\n  const { quizzes } = useSelector((state: RootState) => state.post);\r\n  const [quizAnswer, onChangeQuizAnswer, setQuizAnswer] = useInput(\"\");\r\n  const [viewQuizAnswer, setViewQuizAnswer] = useState(false);\r\n  const [randomQuiz, setRandomQuiz] = useState(0);\r\n\r\n  const onClickNextQuiz = useCallback(() => {\r\n    //총 퀴즈 갯수중 하나를 랜덤으로 뽑아옵니다.\r\n    let myRandNum = Math.floor(Math.random() * quizzes.length);\r\n    //만약 랜덤으로 뽑은 값이 현재값이랑 일치한다면...\r\n    if (myRandNum === randomQuiz) {\r\n      //2. 랜덤으로 뽑은값이 마지막값인 상태에서 +1 을 하게 되면 오류가 나게 되기 때문에\r\n      //   첫번째 값으로 변경해서 리턴해줍니다.\r\n      if (myRandNum === quizzes.length - 1) {\r\n        setRandomQuiz(0);\r\n        setViewQuizAnswer(false);\r\n        setQuizAnswer(\"\");\r\n        return;\r\n      }\r\n      //1. 랜덤으로 뽑은 값의 다음값을 리턴합니다.\r\n      setRandomQuiz(myRandNum + 1);\r\n      setViewQuizAnswer(false);\r\n      setQuizAnswer(\"\");\r\n      return;\r\n    }\r\n    setRandomQuiz(myRandNum);\r\n    setViewQuizAnswer(false);\r\n    setQuizAnswer(\"\");\r\n  }, [quizzes.length, randomQuiz, setQuizAnswer]);\r\n\r\n  const onClickQuizSubmit = useCallback(() => {\r\n    //퀴즈에 값을 넣지 않았다면 제출버튼이 작동하지 않게 합니다.\r\n    if (quizAnswer === \"\") {\r\n      message.error(\"答えを書いてくださいね！\");\r\n      return;\r\n    }\r\n    setViewQuizAnswer(true);\r\n  }, [quizAnswer]);\r\n\r\n  return (\r\n    <Quiz\r\n      style={{\r\n        background: `url('https://images.unsplash.com/photo-1522771739844-6a9f6d5f14af?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1351&q=80') no-repeat bottom fixed`,\r\n        backgroundSize: \"cover\",\r\n      }}\r\n    >\r\n      <QuizWrapper\r\n        style={{\r\n          background: `url('/images/blog/kakao.png') no-repeat`,\r\n          backgroundSize: \"cover\",\r\n        }}\r\n      >\r\n        <QuizContent>\r\n          <ContentTailQuestion />\r\n          <KakaoContent whiteType={false}>\r\n            {viewQuizAnswer ? quizzes[randomQuiz]?.answer : quizzes[randomQuiz]?.question}\r\n          </KakaoContent>\r\n          {viewQuizAnswer ? (\r\n            <>\r\n              <ContentTailAnswer />\r\n              <KakaoContent whiteType={true}>\r\n                貴方の答え：{quizAnswer}\r\n                <br />\r\n                <button className=\"public_btn\" onClick={onClickNextQuiz}>\r\n                  次のクイズ\r\n                  <ArrowRightOutlined />\r\n                </button>\r\n              </KakaoContent>\r\n            </>\r\n          ) : null}\r\n        </QuizContent>\r\n        <div className=\"quiz_input_wrapper\">\r\n          <Input\r\n            className=\"quiz_input\"\r\n            value={quizAnswer}\r\n            disabled={viewQuizAnswer ? true : false}\r\n            onChange={onChangeQuizAnswer}\r\n            placeholder=\"翻訳してくれ！\"\r\n            bordered={false}\r\n            onPressEnter={onClickQuizSubmit}\r\n          />\r\n          <a>\r\n            <EnterOutlined\r\n              onClick={onClickQuizSubmit}\r\n              style={{ color: \"#CABFCC\", fontSize: \"1.2rem\" }}\r\n            />\r\n          </a>\r\n        </div>\r\n      </QuizWrapper>\r\n    </Quiz>\r\n  );\r\n});\r\n\r\nexport default memo(QuizForm);\r\n"]},"metadata":{},"sourceType":"module"}