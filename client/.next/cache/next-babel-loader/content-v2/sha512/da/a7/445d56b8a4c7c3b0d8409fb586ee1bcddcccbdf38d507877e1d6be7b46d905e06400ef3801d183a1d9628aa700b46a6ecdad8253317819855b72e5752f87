{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { ADD_QUIZ_CLEAR, ADD_QUIZ_FAILURE, ADD_QUIZ_REQUEST, ADD_QUIZ_SUCCESS, SEARCH_HASH_TAG_CLEAR, SEARCH_HASH_TAG_FAILURE, SEARCH_HASH_TAG_REQUEST, SEARCH_HASH_TAG_SUCCESS, SEARCH_KEYWORD_CLEAR, SEARCH_KEYWORD_FAILURE, SEARCH_KEYWORD_REQUEST, SEARCH_KEYWORD_SUCCESS } from \"../@reducers/blog\";\n\nfunction addQuizAPI(data) {\n  return axios.post(`/api/quiz`, data);\n}\n\nfunction* addQuiz(action) {\n  try {\n    yield call(addQuizAPI, action.data);\n    yield put({\n      type: ADD_QUIZ_SUCCESS\n    });\n    yield delay(3000);\n    yield put({\n      type: ADD_QUIZ_CLEAR\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_QUIZ_FAILURE,\n      error: err.response.data\n    });\n    yield delay(3000);\n    yield put({\n      type: ADD_QUIZ_CLEAR\n    });\n  }\n}\n\nfunction searchKeywordAPI(data) {\n  return axios.post(`/api/search/`, data);\n}\n\nfunction* searchKeyword(action) {\n  try {\n    const {\n      data\n    } = yield call(searchKeywordAPI, action.data);\n    yield put({\n      type: SEARCH_KEYWORD_SUCCESS,\n      data\n    });\n    yield delay(3000);\n    yield put({\n      type: SEARCH_KEYWORD_CLEAR\n    });\n  } catch (err) {\n    yield put({\n      type: SEARCH_KEYWORD_FAILURE,\n      error: err.response.data\n    });\n    yield delay(3000);\n    yield put({\n      type: SEARCH_KEYWORD_CLEAR\n    });\n  }\n}\n\nfunction searchHashtagAPI(data) {\n  return axios.post(`/api/search/hashtag`, data);\n}\n\nfunction* searchHashtag(action) {\n  try {\n    const {\n      data\n    } = yield call(searchHashtagAPI, action.data);\n    yield put({\n      type: SEARCH_HASH_TAG_SUCCESS,\n      data\n    });\n    yield delay(3000);\n    yield put({\n      type: SEARCH_HASH_TAG_CLEAR\n    });\n  } catch (err) {\n    yield put({\n      type: SEARCH_HASH_TAG_FAILURE,\n      error: err.response.data\n    });\n    yield delay(3000);\n    yield put({\n      type: SEARCH_HASH_TAG_CLEAR\n    });\n  }\n}\n\nfunction* watchAddQuiz() {\n  yield takeLatest(ADD_QUIZ_REQUEST, addQuiz);\n}\n\nfunction* watchSearchKeyword() {\n  yield takeLatest(SEARCH_KEYWORD_REQUEST, searchKeyword);\n}\n\nfunction* watchSearchHashtag() {\n  yield takeLatest(SEARCH_HASH_TAG_REQUEST, searchHashtag);\n}\n\nexport default function* blogSaga() {\n  yield all([fork(watchAddQuiz), fork(watchSearchKeyword), fork(watchSearchHashtag)]);\n}","map":{"version":3,"sources":["C:/Users/Noah/Desktop/Project/Noahworld/client/@saga/blog.ts"],"names":["all","call","delay","fork","put","takeLatest","axios","ADD_QUIZ_CLEAR","ADD_QUIZ_FAILURE","ADD_QUIZ_REQUEST","ADD_QUIZ_SUCCESS","SEARCH_HASH_TAG_CLEAR","SEARCH_HASH_TAG_FAILURE","SEARCH_HASH_TAG_REQUEST","SEARCH_HASH_TAG_SUCCESS","SEARCH_KEYWORD_CLEAR","SEARCH_KEYWORD_FAILURE","SEARCH_KEYWORD_REQUEST","SEARCH_KEYWORD_SUCCESS","addQuizAPI","data","post","addQuiz","action","type","err","error","response","searchKeywordAPI","searchKeyword","searchHashtagAPI","searchHashtag","watchAddQuiz","watchSearchKeyword","watchSearchHashtag","blogSaga"],"mappings":"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","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n  ADD_QUIZ_CLEAR,\r\n  ADD_QUIZ_FAILURE,\r\n  ADD_QUIZ_REQUEST,\r\n  ADD_QUIZ_SUCCESS,\r\n  SEARCH_HASH_TAG_CLEAR,\r\n  SEARCH_HASH_TAG_FAILURE,\r\n  SEARCH_HASH_TAG_REQUEST,\r\n  SEARCH_HASH_TAG_SUCCESS,\r\n  SEARCH_KEYWORD_CLEAR,\r\n  SEARCH_KEYWORD_FAILURE,\r\n  SEARCH_KEYWORD_REQUEST,\r\n  SEARCH_KEYWORD_SUCCESS,\r\n} from \"../@reducers/blog\";\r\nimport {\r\n  AddQuizData,\r\n  AddQuizInter,\r\n  SearchHashtagData,\r\n  SearchHashtagInter,\r\n  SearchKeywordData,\r\n  SearchKeywordInter,\r\n} from \"./@sagaTypes\";\r\n\r\nfunction addQuizAPI(data: AddQuizData) {\r\n  return axios.post(`/api/quiz`, data);\r\n}\r\n\r\nfunction* addQuiz(action: AddQuizInter) {\r\n  try {\r\n    yield call(addQuizAPI, action.data);\r\n    yield put({\r\n      type: ADD_QUIZ_SUCCESS,\r\n    });\r\n    yield delay(3000);\r\n    yield put({\r\n      type: ADD_QUIZ_CLEAR,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_QUIZ_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n    yield delay(3000);\r\n    yield put({\r\n      type: ADD_QUIZ_CLEAR,\r\n    });\r\n  }\r\n}\r\n\r\nfunction searchKeywordAPI(data: SearchKeywordData) {\r\n  return axios.post(`/api/search/`, data);\r\n}\r\n\r\nfunction* searchKeyword(action: SearchKeywordInter) {\r\n  try {\r\n    const { data } = yield call(searchKeywordAPI, action.data);\r\n    yield put({\r\n      type: SEARCH_KEYWORD_SUCCESS,\r\n      data,\r\n    });\r\n    yield delay(3000);\r\n    yield put({\r\n      type: SEARCH_KEYWORD_CLEAR,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SEARCH_KEYWORD_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n    yield delay(3000);\r\n    yield put({\r\n      type: SEARCH_KEYWORD_CLEAR,\r\n    });\r\n  }\r\n}\r\n\r\nfunction searchHashtagAPI(data: SearchHashtagData) {\r\n  return axios.post(`/api/search/hashtag`, data);\r\n}\r\n\r\nfunction* searchHashtag(action: SearchHashtagInter) {\r\n  try {\r\n    const { data } = yield call(searchHashtagAPI, action.data);\r\n\r\n    yield put({\r\n      type: SEARCH_HASH_TAG_SUCCESS,\r\n      data,\r\n    });\r\n    yield delay(3000);\r\n    yield put({\r\n      type: SEARCH_HASH_TAG_CLEAR,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SEARCH_HASH_TAG_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n    yield delay(3000);\r\n    yield put({\r\n      type: SEARCH_HASH_TAG_CLEAR,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddQuiz() {\r\n  yield takeLatest(ADD_QUIZ_REQUEST, addQuiz);\r\n}\r\nfunction* watchSearchKeyword() {\r\n  yield takeLatest(SEARCH_KEYWORD_REQUEST, searchKeyword);\r\n}\r\nfunction* watchSearchHashtag() {\r\n  yield takeLatest(SEARCH_HASH_TAG_REQUEST, searchHashtag);\r\n}\r\n\r\nexport default function* blogSaga() {\r\n  yield all([fork(watchAddQuiz), fork(watchSearchKeyword), fork(watchSearchHashtag)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}