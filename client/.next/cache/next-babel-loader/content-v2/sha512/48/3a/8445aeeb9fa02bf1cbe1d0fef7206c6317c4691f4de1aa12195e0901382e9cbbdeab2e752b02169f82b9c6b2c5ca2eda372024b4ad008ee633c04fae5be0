{"ast":null,"code":"import { Input } from \"antd\";\nimport dayjs from \"dayjs\";\nimport React, { memo } from \"react\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nvar CommentContent = /*#__PURE__*/memo(function (_ref) {\n  var _comment$User;\n\n  var comment = _ref.comment,\n      editText = _ref.editText,\n      editForm = _ref.editForm,\n      onChangeEditText = _ref.onChangeEditText;\n\n  var handleImgError = function handleImgError(e) {\n    e.target.src = \"/images/blog/default-user.png\";\n  };\n\n  return ___EmotionJSX(\"div\", {\n    className: \"comment_main_content\"\n  }, ___EmotionJSX(\"div\", null, ___EmotionJSX(\"img\", {\n    src: (_comment$User = comment.User) !== null && _comment$User !== void 0 && _comment$User.icon ? comment.User.icon.replace(/\\/thumb\\//, \"/original/\") : \"/images/blog/default-user.png\",\n    onError: handleImgError,\n    alt: \"profile\"\n  })), ___EmotionJSX(\"div\", null, ___EmotionJSX(\"a\", null, comment.User.name), ___EmotionJSX(\"span\", null, dayjs().to(dayjs(comment.createdAt), true), \"\\xA0ago\"), editForm ? ___EmotionJSX(Input.TextArea, {\n    style: {\n      width: \"100%\"\n    },\n    value: editText,\n    defaultValue: comment.content,\n    onChange: onChangeEditText\n  }) : ___EmotionJSX(\"p\", {\n    style: {\n      width: \"100%\",\n      margin: 0\n    }\n  }, comment.content)));\n});\nexport default /*#__PURE__*/memo(CommentContent);","map":{"version":3,"sources":["C:/Users/Noah/Desktop/Project/Noahworld/client/components/Blog/Comments/CommentContent.tsx"],"names":["Input","dayjs","React","memo","CommentContent","comment","editText","editForm","onChangeEditText","handleImgError","e","target","src","User","icon","replace","name","to","createdAt","width","content","margin"],"mappings":"AAAA,SAASA,KAAT,QAAsB,MAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAoBC,IAApB,QAAgC,OAAhC;;AAUA,IAAMC,cAAkC,gBAAGD,IAAI,CAC7C,gBAAuD;AAAA;;AAAA,MAApDE,OAAoD,QAApDA,OAAoD;AAAA,MAA3CC,QAA2C,QAA3CA,QAA2C;AAAA,MAAjCC,QAAiC,QAAjCA,QAAiC;AAAA,MAAvBC,gBAAuB,QAAvBA,gBAAuB;;AACrD,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAA6B;AACjDA,IAAAA,CAAC,CAACC,MAAH,CAA+BC,GAA/B;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,2BACE;AACE,IAAA,GAAG,EACD,iBAAAP,OAAO,CAACQ,IAAR,wDAAcC,IAAd,GACIT,OAAO,CAACQ,IAAR,CAAaC,IAAb,CAAkBC,OAAlB,CAA0B,WAA1B,EAAuC,YAAvC,CADJ,GAEI,+BAJR;AAME,IAAA,OAAO,EAAEN,cANX;AAOE,IAAA,GAAG,EAAC;AAPN,IADF,CADF,EAYE,2BACE,yBAAIJ,OAAO,CAACQ,IAAR,CAAaG,IAAjB,CADF,EAEE,4BAAOf,KAAK,GAAGgB,EAAR,CAAWhB,KAAK,CAACI,OAAO,CAACa,SAAT,CAAhB,EAAqC,IAArC,CAAP,YAFF,EAGGX,QAAQ,GACP,cAAC,KAAD,CAAO,QAAP;AACE,IAAA,KAAK,EAAE;AAAEY,MAAAA,KAAK,EAAE;AAAT,KADT;AAEE,IAAA,KAAK,EAAEb,QAFT;AAGE,IAAA,YAAY,EAAED,OAAO,CAACe,OAHxB;AAIE,IAAA,QAAQ,EAAEZ;AAJZ,IADO,GAQP;AAAG,IAAA,KAAK,EAAE;AAAEW,MAAAA,KAAK,EAAE,MAAT;AAAiBE,MAAAA,MAAM,EAAE;AAAzB;AAAV,KAAyChB,OAAO,CAACe,OAAjD,CAXJ,CAZF,CADF;AA6BD,CAnC4C,CAA/C;AAsCA,4BAAejB,IAAI,CAACC,cAAD,CAAnB","sourcesContent":["import { Input } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\nimport React, { FC, memo } from \"react\";\r\nimport { CommentsInter } from \"../../../@reducers/@reducerTypes\";\r\n\r\ninterface CommentContent {\r\n  comment: CommentsInter;\r\n  editText: string;\r\n  editForm: boolean;\r\n  onChangeEditText: () => void;\r\n}\r\n\r\nconst CommentContent: FC<CommentContent> = memo(\r\n  ({ comment, editText, editForm, onChangeEditText }) => {\r\n    const handleImgError = (e: React.SyntheticEvent) => {\r\n      (e.target as HTMLImageElement).src = `/images/blog/default-user.png`;\r\n    };\r\n\r\n    return (\r\n      <div className=\"comment_main_content\">\r\n        <div>\r\n          <img\r\n            src={\r\n              comment.User?.icon\r\n                ? comment.User.icon.replace(/\\/thumb\\//, \"/original/\")\r\n                : \"/images/blog/default-user.png\"\r\n            }\r\n            onError={handleImgError}\r\n            alt=\"profile\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <a>{comment.User.name}</a>\r\n          <span>{dayjs().to(dayjs(comment.createdAt), true)}&nbsp;ago</span>\r\n          {editForm ? (\r\n            <Input.TextArea\r\n              style={{ width: \"100%\" }}\r\n              value={editText}\r\n              defaultValue={comment.content}\r\n              onChange={onChangeEditText}\r\n            />\r\n          ) : (\r\n            <p style={{ width: \"100%\", margin: 0 }}>{comment.content}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default memo(CommentContent);\r\n"]},"metadata":{},"sourceType":"module"}