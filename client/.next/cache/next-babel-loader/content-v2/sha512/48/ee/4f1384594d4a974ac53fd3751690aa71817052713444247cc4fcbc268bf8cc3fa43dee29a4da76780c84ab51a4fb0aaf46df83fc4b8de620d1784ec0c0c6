{"ast":null,"code":"import _slicedToArray from \"C:/Users/Noah/Desktop/Project/Noahworld/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _styled from \"@emotion/styled/base\";\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { Input, message } from \"antd\";\nimport React, { memo, useCallback, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ArrowRightOutlined, EnterOutlined } from \"@ant-design/icons\";\nimport useInput from \"../../../util/useInput\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nvar QuizWrapper = _styled(\"div\", true ? {\n  target: \"ec4d6x4\"\n} : {\n  target: \"ec4d6x4\",\n  label: \"QuizWrapper\"\n})(true ? {\n  name: \"10flst2\",\n  styles: \"display:none;@media only screen and (max-width: 476px){display:block;width:100%;position:relative;.quiz_input_wrapper{width:93%;position:absolute;display:flex;justify-content:space-between;align-items:center;right:5%;bottom:2.3%;}}\"\n} : {\n  name: \"10flst2\",\n  styles: \"display:none;@media only screen and (max-width: 476px){display:block;width:100%;position:relative;.quiz_input_wrapper{width:93%;position:absolute;display:flex;justify-content:space-between;align-items:center;right:5%;bottom:2.3%;}}\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENsYXNzXFxRdWl6Rm9ybVNtYWxsLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFTOEIiLCJmaWxlIjoiQzpcXFVzZXJzXFxOb2FoXFxEZXNrdG9wXFxQcm9qZWN0XFxOb2Fod29ybGRcXGNsaWVudFxcY29tcG9uZW50c1xcQmxvZ1xcQ2xhc3NcXFF1aXpGb3JtU21hbGwudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUganN4LWExMXkvYW5jaG9yLWlzLXZhbGlkICovXHJcbmltcG9ydCB7IElucHV0LCBtZXNzYWdlIH0gZnJvbSBcImFudGRcIjtcclxuaW1wb3J0IFJlYWN0LCB7IG1lbW8sIHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJAZW1vdGlvbi9zdHlsZWRcIjtcclxuaW1wb3J0IHsgQXJyb3dSaWdodE91dGxpbmVkLCBFbnRlck91dGxpbmVkIH0gZnJvbSBcIkBhbnQtZGVzaWduL2ljb25zXCI7XHJcbmltcG9ydCB7IFJvb3RTdGF0ZSB9IGZyb20gXCIuLi8uLi8uLi9AcmVkdWNlcnNcIjtcclxuaW1wb3J0IHVzZUlucHV0IGZyb20gXCIuLi8uLi8uLi91dGlsL3VzZUlucHV0XCI7XHJcblxyXG5jb25zdCBRdWl6V3JhcHBlciA9IHN0eWxlZC5kaXZgXHJcbiAgZGlzcGxheTogbm9uZTtcclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ3NnB4KSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgLnF1aXpfaW5wdXRfd3JhcHBlciB7XHJcbiAgICAgIHdpZHRoOiA5MyU7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICByaWdodDogNSU7XHJcbiAgICAgIGJvdHRvbTogMi4zJTtcclxuICAgIH1cclxuICB9XHJcbmA7XHJcblxyXG5pbnRlcmZhY2UgS2FrYW9Db250ZW50UHJvcHMge1xyXG4gIHdoaXRlVHlwZTogQm9vbGVhbjtcclxufVxyXG5cclxuY29uc3QgS2FrYW9Db250ZW50ID0gc3R5bGVkLmRpdjxLYWthb0NvbnRlbnRQcm9wcz5gXHJcbiAgZm9udC1zaXplOiAwLjlyZW07XHJcbiAgcGFkZGluZzogMC41cmVtO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICR7KHsgd2hpdGVUeXBlIH0pID0+ICh3aGl0ZVR5cGUgPyBcInJnYigyMzUsIDIzNSwgMjM1KVwiIDogXCIjZmZlOTQxXCIpfTtcclxuICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDgwcHg7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcclxuICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgJjo6LXdlYmtpdC1zY3JvbGxiYXIge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcbiAgYnV0dG9uIHtcclxuICAgIG1hcmdpbi10b3A6IDAuNXJlbTtcclxuICAgIGZvbnQtc2l6ZTogMXJlbTtcclxuICAgIHBhZGRpbmc6IDAuMnJlbSAwLjhyZW07XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgQ29udGVudFRhaWxRdWVzdGlvbiA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGxlZnQ6IC01cHg7XHJcbiAgdHJhbnNmb3JtOiByb3RhdGVaKDQ1ZGVnKTtcclxuICB0b3A6IDEwcHg7XHJcbiAgd2lkdGg6IDlweDtcclxuICBoZWlnaHQ6IDlweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZlOTQxO1xyXG4gIGNvbnRlbnQ6IFwiXCI7XHJcbmA7XHJcbmNvbnN0IENvbnRlbnRUYWlsQW5zd2VyID0gc3R5bGVkLmRpdmBcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgcmlnaHQ6IC0wLjMycmVtO1xyXG4gIHRyYW5zZm9ybTogcm90YXRlWig0NWRlZyk7XHJcbiAgei1pbmRleDogMTtcclxuICB3aWR0aDogOXB4O1xyXG4gIGhlaWdodDogOXB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzUsIDIzNSwgMjM1KTtcclxuICBjb250ZW50OiBcIlwiO1xyXG4gIGJvdHRvbTogNC41cmVtO1xyXG5gO1xyXG5jb25zdCBRdWl6Q29udGVudCA9IHN0eWxlZC5kaXZgXHJcbiAgd2lkdGg6IDcwJTtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAyOCU7XHJcbiAgbGVmdDogMjAlO1xyXG5gO1xyXG5cclxuY29uc3QgUXVpekZvcm1TbWFsbCA9IG1lbW8oKCkgPT4ge1xyXG4gIGNvbnN0IHsgcXVpenplcyB9ID0gdXNlU2VsZWN0b3IoKHN0YXRlOiBSb290U3RhdGUpID0+IHN0YXRlLnBvc3QpO1xyXG4gIGNvbnN0IFtxdWl6QW5zd2VyLCBvbkNoYW5nZVF1aXpBbnN3ZXIsIHNldFF1aXpBbnN3ZXJdID0gdXNlSW5wdXQoXCJcIik7XHJcbiAgY29uc3QgW3ZpZXdRdWl6QW5zd2VyLCBzZXRWaWV3UXVpekFuc3dlcl0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgY29uc3QgW3JhbmRvbVF1aXosIHNldFJhbmRvbVF1aXpdID0gdXNlU3RhdGUoMCk7XHJcblxyXG4gIGNvbnN0IG9uQ2xpY2tOZXh0UXVpeiA9IHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgIGxldCBteVJhbmROdW0gPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBxdWl6emVzLmxlbmd0aCk7XHJcbiAgICBpZiAobXlSYW5kTnVtID09PSByYW5kb21RdWl6KSB7XHJcbiAgICAgIGlmIChteVJhbmROdW0gPT09IHF1aXp6ZXMubGVuZ3RoIC0gMSkge1xyXG4gICAgICAgIHNldFJhbmRvbVF1aXooMCk7XHJcbiAgICAgICAgc2V0Vmlld1F1aXpBbnN3ZXIoZmFsc2UpO1xyXG4gICAgICAgIHNldFF1aXpBbnN3ZXIoXCJcIik7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIGxldCBteU5ld1JhbmROdW0gPSBteVJhbmROdW0gKyAxO1xyXG4gICAgICBzZXRSYW5kb21RdWl6KG15TmV3UmFuZE51bSk7XHJcbiAgICAgIHNldFZpZXdRdWl6QW5zd2VyKGZhbHNlKTtcclxuICAgICAgc2V0UXVpekFuc3dlcihcIlwiKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgc2V0UmFuZG9tUXVpeihteVJhbmROdW0pO1xyXG4gICAgc2V0Vmlld1F1aXpBbnN3ZXIoZmFsc2UpO1xyXG4gICAgc2V0UXVpekFuc3dlcihcIlwiKTtcclxuICB9LCBbcXVpenplcy5sZW5ndGgsIHJhbmRvbVF1aXosIHNldFF1aXpBbnN3ZXJdKTtcclxuXHJcbiAgY29uc3Qgb25DbGlja1F1aXpTdWJtaXQgPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICBpZiAocXVpekFuc3dlciA9PT0gXCJcIikge1xyXG4gICAgICBtZXNzYWdlLmVycm9yKFwi562U44GI44KS5pu444GE44Gm44GP44Gg44GV44GE44Gt77yBXCIpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBzZXRWaWV3UXVpekFuc3dlcih0cnVlKTtcclxuICB9LCBbcXVpekFuc3dlcl0pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFF1aXpXcmFwcGVyPlxyXG4gICAgICA8aW1nIGFsdD1cImtha2FvX3NtYWxsXCIgc3JjPVwiL2ltYWdlcy9ibG9nL2tha2FvX3NtYWxsLnBuZ1wiIHN0eWxlPXt7IHdpZHRoOiBcIjEwMCVcIiB9fSAvPlxyXG4gICAgICA8UXVpekNvbnRlbnQ+XHJcbiAgICAgICAgPENvbnRlbnRUYWlsUXVlc3Rpb24gLz5cclxuICAgICAgICA8S2FrYW9Db250ZW50IHdoaXRlVHlwZT17ZmFsc2V9PlxyXG4gICAgICAgICAge3ZpZXdRdWl6QW5zd2VyID8gcXVpenplc1tyYW5kb21RdWl6XT8uYW5zd2VyIDogcXVpenplc1tyYW5kb21RdWl6XT8ucXVlc3Rpb259XHJcbiAgICAgICAgPC9LYWthb0NvbnRlbnQ+XHJcbiAgICAgICAge3ZpZXdRdWl6QW5zd2VyID8gKFxyXG4gICAgICAgICAgPD5cclxuICAgICAgICAgICAgPENvbnRlbnRUYWlsQW5zd2VyIC8+XHJcbiAgICAgICAgICAgIDxLYWthb0NvbnRlbnQgd2hpdGVUeXBlPXt0cnVlfT5cclxuICAgICAgICAgICAgICDosrTmlrnjga7nrZTjgYjvvJp7cXVpekFuc3dlcn1cclxuICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cInB1YmxpY19idG5cIiBvbkNsaWNrPXtvbkNsaWNrTmV4dFF1aXp9PlxyXG4gICAgICAgICAgICAgICAg5qyh44Gu44Kv44Kk44K6XHJcbiAgICAgICAgICAgICAgICA8QXJyb3dSaWdodE91dGxpbmVkIC8+XHJcbiAgICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICAgIDwvS2FrYW9Db250ZW50PlxyXG4gICAgICAgICAgPC8+XHJcbiAgICAgICAgKSA6IG51bGx9XHJcbiAgICAgIDwvUXVpekNvbnRlbnQ+XHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicXVpel9pbnB1dF93cmFwcGVyXCI+XHJcbiAgICAgICAgPElucHV0XHJcbiAgICAgICAgICBjbGFzc05hbWU9XCJxdWl6X2lucHV0XCJcclxuICAgICAgICAgIHZhbHVlPXtxdWl6QW5zd2VyfVxyXG4gICAgICAgICAgZGlzYWJsZWQ9e3ZpZXdRdWl6QW5zd2VyID8gdHJ1ZSA6IGZhbHNlfVxyXG4gICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlUXVpekFuc3dlcn1cclxuICAgICAgICAgIHBsYWNlaG9sZGVyPVwi57+76Kiz44GX44Gm44GP44KM77yBXCJcclxuICAgICAgICAgIGJvcmRlcmVkPXtmYWxzZX1cclxuICAgICAgICAgIG9uUHJlc3NFbnRlcj17b25DbGlja1F1aXpTdWJtaXR9XHJcbiAgICAgICAgLz5cclxuICAgICAgICA8YT5cclxuICAgICAgICAgIDxFbnRlck91dGxpbmVkXHJcbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tRdWl6U3VibWl0fVxyXG4gICAgICAgICAgICBzdHlsZT17eyBjb2xvcjogXCIjQ0FCRkNDXCIsIGZvbnRTaXplOiBcIjEuMnJlbVwiIH19XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgIDwvYT5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L1F1aXpXcmFwcGVyPlxyXG4gICk7XHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbWVtbyhRdWl6Rm9ybVNtYWxsKTtcclxuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nvar KakaoContent = _styled(\"div\", true ? {\n  target: \"ec4d6x3\"\n} : {\n  target: \"ec4d6x3\",\n  label: \"KakaoContent\"\n})(\"font-size:0.9rem;padding:0.5rem;background-color:\", function (_ref) {\n  var whiteType = _ref.whiteType;\n  return whiteType ? \"rgb(235, 235, 235)\" : \"#ffe941\";\n}, \";border-radius:3px;margin-bottom:1rem;width:100%;height:80px;position:relative;word-break:break-all;-ms-overflow-style:none;overflow:auto;&::-webkit-scrollbar{display:none;}button{margin-top:0.5rem;font-size:1rem;padding:0.2rem 0.8rem;float:right;}\" + (true ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENsYXNzXFxRdWl6Rm9ybVNtYWxsLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErQmtEIiwiZmlsZSI6IkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENsYXNzXFxRdWl6Rm9ybVNtYWxsLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIGpzeC1hMTF5L2FuY2hvci1pcy12YWxpZCAqL1xyXG5pbXBvcnQgeyBJbnB1dCwgbWVzc2FnZSB9IGZyb20gXCJhbnRkXCI7XHJcbmltcG9ydCBSZWFjdCwgeyBtZW1vLCB1c2VDYWxsYmFjaywgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgdXNlU2VsZWN0b3IgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XHJcbmltcG9ydCB7IEFycm93UmlnaHRPdXRsaW5lZCwgRW50ZXJPdXRsaW5lZCB9IGZyb20gXCJAYW50LWRlc2lnbi9pY29uc1wiO1xyXG5pbXBvcnQgeyBSb290U3RhdGUgfSBmcm9tIFwiLi4vLi4vLi4vQHJlZHVjZXJzXCI7XHJcbmltcG9ydCB1c2VJbnB1dCBmcm9tIFwiLi4vLi4vLi4vdXRpbC91c2VJbnB1dFwiO1xyXG5cclxuY29uc3QgUXVpeldyYXBwZXIgPSBzdHlsZWQuZGl2YFxyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0NzZweCkge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIC5xdWl6X2lucHV0X3dyYXBwZXIge1xyXG4gICAgICB3aWR0aDogOTMlO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgcmlnaHQ6IDUlO1xyXG4gICAgICBib3R0b206IDIuMyU7XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuaW50ZXJmYWNlIEtha2FvQ29udGVudFByb3BzIHtcclxuICB3aGl0ZVR5cGU6IEJvb2xlYW47XHJcbn1cclxuXHJcbmNvbnN0IEtha2FvQ29udGVudCA9IHN0eWxlZC5kaXY8S2FrYW9Db250ZW50UHJvcHM+YFxyXG4gIGZvbnQtc2l6ZTogMC45cmVtO1xyXG4gIHBhZGRpbmc6IDAuNXJlbTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyh7IHdoaXRlVHlwZSB9KSA9PiAod2hpdGVUeXBlID8gXCJyZ2IoMjM1LCAyMzUsIDIzNSlcIiA6IFwiI2ZmZTk0MVwiKX07XHJcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiA4MHB4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lO1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG4gICY6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG4gIGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAwLjVyZW07XHJcbiAgICBmb250LXNpemU6IDFyZW07XHJcbiAgICBwYWRkaW5nOiAwLjJyZW0gMC44cmVtO1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IENvbnRlbnRUYWlsUXVlc3Rpb24gPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBsZWZ0OiAtNXB4O1xyXG4gIHRyYW5zZm9ybTogcm90YXRlWig0NWRlZyk7XHJcbiAgdG9wOiAxMHB4O1xyXG4gIHdpZHRoOiA5cHg7XHJcbiAgaGVpZ2h0OiA5cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZTk0MTtcclxuICBjb250ZW50OiBcIlwiO1xyXG5gO1xyXG5jb25zdCBDb250ZW50VGFpbEFuc3dlciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHJpZ2h0OiAtMC4zMnJlbTtcclxuICB0cmFuc2Zvcm06IHJvdGF0ZVooNDVkZWcpO1xyXG4gIHotaW5kZXg6IDE7XHJcbiAgd2lkdGg6IDlweDtcclxuICBoZWlnaHQ6IDlweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM1LCAyMzUsIDIzNSk7XHJcbiAgY29udGVudDogXCJcIjtcclxuICBib3R0b206IDQuNXJlbTtcclxuYDtcclxuY29uc3QgUXVpekNvbnRlbnQgPSBzdHlsZWQuZGl2YFxyXG4gIHdpZHRoOiA3MCU7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMjglO1xyXG4gIGxlZnQ6IDIwJTtcclxuYDtcclxuXHJcbmNvbnN0IFF1aXpGb3JtU21hbGwgPSBtZW1vKCgpID0+IHtcclxuICBjb25zdCB7IHF1aXp6ZXMgfSA9IHVzZVNlbGVjdG9yKChzdGF0ZTogUm9vdFN0YXRlKSA9PiBzdGF0ZS5wb3N0KTtcclxuICBjb25zdCBbcXVpekFuc3dlciwgb25DaGFuZ2VRdWl6QW5zd2VyLCBzZXRRdWl6QW5zd2VyXSA9IHVzZUlucHV0KFwiXCIpO1xyXG4gIGNvbnN0IFt2aWV3UXVpekFuc3dlciwgc2V0Vmlld1F1aXpBbnN3ZXJdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IFtyYW5kb21RdWl6LCBzZXRSYW5kb21RdWl6XSA9IHVzZVN0YXRlKDApO1xyXG5cclxuICBjb25zdCBvbkNsaWNrTmV4dFF1aXogPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICBsZXQgbXlSYW5kTnVtID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcXVpenplcy5sZW5ndGgpO1xyXG4gICAgaWYgKG15UmFuZE51bSA9PT0gcmFuZG9tUXVpeikge1xyXG4gICAgICBpZiAobXlSYW5kTnVtID09PSBxdWl6emVzLmxlbmd0aCAtIDEpIHtcclxuICAgICAgICBzZXRSYW5kb21RdWl6KDApO1xyXG4gICAgICAgIHNldFZpZXdRdWl6QW5zd2VyKGZhbHNlKTtcclxuICAgICAgICBzZXRRdWl6QW5zd2VyKFwiXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBsZXQgbXlOZXdSYW5kTnVtID0gbXlSYW5kTnVtICsgMTtcclxuICAgICAgc2V0UmFuZG9tUXVpeihteU5ld1JhbmROdW0pO1xyXG4gICAgICBzZXRWaWV3UXVpekFuc3dlcihmYWxzZSk7XHJcbiAgICAgIHNldFF1aXpBbnN3ZXIoXCJcIik7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHNldFJhbmRvbVF1aXoobXlSYW5kTnVtKTtcclxuICAgIHNldFZpZXdRdWl6QW5zd2VyKGZhbHNlKTtcclxuICAgIHNldFF1aXpBbnN3ZXIoXCJcIik7XHJcbiAgfSwgW3F1aXp6ZXMubGVuZ3RoLCByYW5kb21RdWl6LCBzZXRRdWl6QW5zd2VyXSk7XHJcblxyXG4gIGNvbnN0IG9uQ2xpY2tRdWl6U3VibWl0ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgaWYgKHF1aXpBbnN3ZXIgPT09IFwiXCIpIHtcclxuICAgICAgbWVzc2FnZS5lcnJvcihcIuetlOOBiOOCkuabuOOBhOOBpuOBj+OBoOOBleOBhOOBre+8gVwiKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgc2V0Vmlld1F1aXpBbnN3ZXIodHJ1ZSk7XHJcbiAgfSwgW3F1aXpBbnN3ZXJdKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxRdWl6V3JhcHBlcj5cclxuICAgICAgPGltZyBhbHQ9XCJrYWthb19zbWFsbFwiIHNyYz1cIi9pbWFnZXMvYmxvZy9rYWthb19zbWFsbC5wbmdcIiBzdHlsZT17eyB3aWR0aDogXCIxMDAlXCIgfX0gLz5cclxuICAgICAgPFF1aXpDb250ZW50PlxyXG4gICAgICAgIDxDb250ZW50VGFpbFF1ZXN0aW9uIC8+XHJcbiAgICAgICAgPEtha2FvQ29udGVudCB3aGl0ZVR5cGU9e2ZhbHNlfT5cclxuICAgICAgICAgIHt2aWV3UXVpekFuc3dlciA/IHF1aXp6ZXNbcmFuZG9tUXVpel0/LmFuc3dlciA6IHF1aXp6ZXNbcmFuZG9tUXVpel0/LnF1ZXN0aW9ufVxyXG4gICAgICAgIDwvS2FrYW9Db250ZW50PlxyXG4gICAgICAgIHt2aWV3UXVpekFuc3dlciA/IChcclxuICAgICAgICAgIDw+XHJcbiAgICAgICAgICAgIDxDb250ZW50VGFpbEFuc3dlciAvPlxyXG4gICAgICAgICAgICA8S2FrYW9Db250ZW50IHdoaXRlVHlwZT17dHJ1ZX0+XHJcbiAgICAgICAgICAgICAg6LK05pa544Gu562U44GI77yae3F1aXpBbnN3ZXJ9XHJcbiAgICAgICAgICAgICAgPGJyIC8+XHJcbiAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJwdWJsaWNfYnRuXCIgb25DbGljaz17b25DbGlja05leHRRdWl6fT5cclxuICAgICAgICAgICAgICAgIOasoeOBruOCr+OCpOOCulxyXG4gICAgICAgICAgICAgICAgPEFycm93UmlnaHRPdXRsaW5lZCAvPlxyXG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8L0tha2FvQ29udGVudD5cclxuICAgICAgICAgIDwvPlxyXG4gICAgICAgICkgOiBudWxsfVxyXG4gICAgICA8L1F1aXpDb250ZW50PlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInF1aXpfaW5wdXRfd3JhcHBlclwiPlxyXG4gICAgICAgIDxJbnB1dFxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwicXVpel9pbnB1dFwiXHJcbiAgICAgICAgICB2YWx1ZT17cXVpekFuc3dlcn1cclxuICAgICAgICAgIGRpc2FibGVkPXt2aWV3UXVpekFuc3dlciA/IHRydWUgOiBmYWxzZX1cclxuICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZVF1aXpBbnN3ZXJ9XHJcbiAgICAgICAgICBwbGFjZWhvbGRlcj1cIue/u+ios+OBl+OBpuOBj+OCjO+8gVwiXHJcbiAgICAgICAgICBib3JkZXJlZD17ZmFsc2V9XHJcbiAgICAgICAgICBvblByZXNzRW50ZXI9e29uQ2xpY2tRdWl6U3VibWl0fVxyXG4gICAgICAgIC8+XHJcbiAgICAgICAgPGE+XHJcbiAgICAgICAgICA8RW50ZXJPdXRsaW5lZFxyXG4gICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrUXVpelN1Ym1pdH1cclxuICAgICAgICAgICAgc3R5bGU9e3sgY29sb3I6IFwiI0NBQkZDQ1wiLCBmb250U2l6ZTogXCIxLjJyZW1cIiB9fVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICA8L2E+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9RdWl6V3JhcHBlcj5cclxuICApO1xyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG1lbW8oUXVpekZvcm1TbWFsbCk7XHJcbiJdfQ== */\"));\n\nvar ContentTailQuestion = _styled(\"div\", true ? {\n  target: \"ec4d6x2\"\n} : {\n  target: \"ec4d6x2\",\n  label: \"ContentTailQuestion\"\n})(true ? {\n  name: \"7ub5ei\",\n  styles: \"position:absolute;left:-5px;transform:rotateZ(45deg);top:10px;width:9px;height:9px;background-color:#ffe941;content:\\\"\\\"\"\n} : {\n  name: \"7ub5ei\",\n  styles: \"position:absolute;left:-5px;transform:rotateZ(45deg);top:10px;width:9px;height:9px;background-color:#ffe941;content:\\\"\\\"\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENsYXNzXFxRdWl6Rm9ybVNtYWxsLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzRHNDIiwiZmlsZSI6IkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENsYXNzXFxRdWl6Rm9ybVNtYWxsLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIGpzeC1hMTF5L2FuY2hvci1pcy12YWxpZCAqL1xyXG5pbXBvcnQgeyBJbnB1dCwgbWVzc2FnZSB9IGZyb20gXCJhbnRkXCI7XHJcbmltcG9ydCBSZWFjdCwgeyBtZW1vLCB1c2VDYWxsYmFjaywgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgdXNlU2VsZWN0b3IgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XHJcbmltcG9ydCB7IEFycm93UmlnaHRPdXRsaW5lZCwgRW50ZXJPdXRsaW5lZCB9IGZyb20gXCJAYW50LWRlc2lnbi9pY29uc1wiO1xyXG5pbXBvcnQgeyBSb290U3RhdGUgfSBmcm9tIFwiLi4vLi4vLi4vQHJlZHVjZXJzXCI7XHJcbmltcG9ydCB1c2VJbnB1dCBmcm9tIFwiLi4vLi4vLi4vdXRpbC91c2VJbnB1dFwiO1xyXG5cclxuY29uc3QgUXVpeldyYXBwZXIgPSBzdHlsZWQuZGl2YFxyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0NzZweCkge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIC5xdWl6X2lucHV0X3dyYXBwZXIge1xyXG4gICAgICB3aWR0aDogOTMlO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgcmlnaHQ6IDUlO1xyXG4gICAgICBib3R0b206IDIuMyU7XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuaW50ZXJmYWNlIEtha2FvQ29udGVudFByb3BzIHtcclxuICB3aGl0ZVR5cGU6IEJvb2xlYW47XHJcbn1cclxuXHJcbmNvbnN0IEtha2FvQ29udGVudCA9IHN0eWxlZC5kaXY8S2FrYW9Db250ZW50UHJvcHM+YFxyXG4gIGZvbnQtc2l6ZTogMC45cmVtO1xyXG4gIHBhZGRpbmc6IDAuNXJlbTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyh7IHdoaXRlVHlwZSB9KSA9PiAod2hpdGVUeXBlID8gXCJyZ2IoMjM1LCAyMzUsIDIzNSlcIiA6IFwiI2ZmZTk0MVwiKX07XHJcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiA4MHB4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lO1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG4gICY6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG4gIGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAwLjVyZW07XHJcbiAgICBmb250LXNpemU6IDFyZW07XHJcbiAgICBwYWRkaW5nOiAwLjJyZW0gMC44cmVtO1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IENvbnRlbnRUYWlsUXVlc3Rpb24gPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBsZWZ0OiAtNXB4O1xyXG4gIHRyYW5zZm9ybTogcm90YXRlWig0NWRlZyk7XHJcbiAgdG9wOiAxMHB4O1xyXG4gIHdpZHRoOiA5cHg7XHJcbiAgaGVpZ2h0OiA5cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZTk0MTtcclxuICBjb250ZW50OiBcIlwiO1xyXG5gO1xyXG5jb25zdCBDb250ZW50VGFpbEFuc3dlciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHJpZ2h0OiAtMC4zMnJlbTtcclxuICB0cmFuc2Zvcm06IHJvdGF0ZVooNDVkZWcpO1xyXG4gIHotaW5kZXg6IDE7XHJcbiAgd2lkdGg6IDlweDtcclxuICBoZWlnaHQ6IDlweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM1LCAyMzUsIDIzNSk7XHJcbiAgY29udGVudDogXCJcIjtcclxuICBib3R0b206IDQuNXJlbTtcclxuYDtcclxuY29uc3QgUXVpekNvbnRlbnQgPSBzdHlsZWQuZGl2YFxyXG4gIHdpZHRoOiA3MCU7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMjglO1xyXG4gIGxlZnQ6IDIwJTtcclxuYDtcclxuXHJcbmNvbnN0IFF1aXpGb3JtU21hbGwgPSBtZW1vKCgpID0+IHtcclxuICBjb25zdCB7IHF1aXp6ZXMgfSA9IHVzZVNlbGVjdG9yKChzdGF0ZTogUm9vdFN0YXRlKSA9PiBzdGF0ZS5wb3N0KTtcclxuICBjb25zdCBbcXVpekFuc3dlciwgb25DaGFuZ2VRdWl6QW5zd2VyLCBzZXRRdWl6QW5zd2VyXSA9IHVzZUlucHV0KFwiXCIpO1xyXG4gIGNvbnN0IFt2aWV3UXVpekFuc3dlciwgc2V0Vmlld1F1aXpBbnN3ZXJdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IFtyYW5kb21RdWl6LCBzZXRSYW5kb21RdWl6XSA9IHVzZVN0YXRlKDApO1xyXG5cclxuICBjb25zdCBvbkNsaWNrTmV4dFF1aXogPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICBsZXQgbXlSYW5kTnVtID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcXVpenplcy5sZW5ndGgpO1xyXG4gICAgaWYgKG15UmFuZE51bSA9PT0gcmFuZG9tUXVpeikge1xyXG4gICAgICBpZiAobXlSYW5kTnVtID09PSBxdWl6emVzLmxlbmd0aCAtIDEpIHtcclxuICAgICAgICBzZXRSYW5kb21RdWl6KDApO1xyXG4gICAgICAgIHNldFZpZXdRdWl6QW5zd2VyKGZhbHNlKTtcclxuICAgICAgICBzZXRRdWl6QW5zd2VyKFwiXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBsZXQgbXlOZXdSYW5kTnVtID0gbXlSYW5kTnVtICsgMTtcclxuICAgICAgc2V0UmFuZG9tUXVpeihteU5ld1JhbmROdW0pO1xyXG4gICAgICBzZXRWaWV3UXVpekFuc3dlcihmYWxzZSk7XHJcbiAgICAgIHNldFF1aXpBbnN3ZXIoXCJcIik7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHNldFJhbmRvbVF1aXoobXlSYW5kTnVtKTtcclxuICAgIHNldFZpZXdRdWl6QW5zd2VyKGZhbHNlKTtcclxuICAgIHNldFF1aXpBbnN3ZXIoXCJcIik7XHJcbiAgfSwgW3F1aXp6ZXMubGVuZ3RoLCByYW5kb21RdWl6LCBzZXRRdWl6QW5zd2VyXSk7XHJcblxyXG4gIGNvbnN0IG9uQ2xpY2tRdWl6U3VibWl0ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgaWYgKHF1aXpBbnN3ZXIgPT09IFwiXCIpIHtcclxuICAgICAgbWVzc2FnZS5lcnJvcihcIuetlOOBiOOCkuabuOOBhOOBpuOBj+OBoOOBleOBhOOBre+8gVwiKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgc2V0Vmlld1F1aXpBbnN3ZXIodHJ1ZSk7XHJcbiAgfSwgW3F1aXpBbnN3ZXJdKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxRdWl6V3JhcHBlcj5cclxuICAgICAgPGltZyBhbHQ9XCJrYWthb19zbWFsbFwiIHNyYz1cIi9pbWFnZXMvYmxvZy9rYWthb19zbWFsbC5wbmdcIiBzdHlsZT17eyB3aWR0aDogXCIxMDAlXCIgfX0gLz5cclxuICAgICAgPFF1aXpDb250ZW50PlxyXG4gICAgICAgIDxDb250ZW50VGFpbFF1ZXN0aW9uIC8+XHJcbiAgICAgICAgPEtha2FvQ29udGVudCB3aGl0ZVR5cGU9e2ZhbHNlfT5cclxuICAgICAgICAgIHt2aWV3UXVpekFuc3dlciA/IHF1aXp6ZXNbcmFuZG9tUXVpel0/LmFuc3dlciA6IHF1aXp6ZXNbcmFuZG9tUXVpel0/LnF1ZXN0aW9ufVxyXG4gICAgICAgIDwvS2FrYW9Db250ZW50PlxyXG4gICAgICAgIHt2aWV3UXVpekFuc3dlciA/IChcclxuICAgICAgICAgIDw+XHJcbiAgICAgICAgICAgIDxDb250ZW50VGFpbEFuc3dlciAvPlxyXG4gICAgICAgICAgICA8S2FrYW9Db250ZW50IHdoaXRlVHlwZT17dHJ1ZX0+XHJcbiAgICAgICAgICAgICAg6LK05pa544Gu562U44GI77yae3F1aXpBbnN3ZXJ9XHJcbiAgICAgICAgICAgICAgPGJyIC8+XHJcbiAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJwdWJsaWNfYnRuXCIgb25DbGljaz17b25DbGlja05leHRRdWl6fT5cclxuICAgICAgICAgICAgICAgIOasoeOBruOCr+OCpOOCulxyXG4gICAgICAgICAgICAgICAgPEFycm93UmlnaHRPdXRsaW5lZCAvPlxyXG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8L0tha2FvQ29udGVudD5cclxuICAgICAgICAgIDwvPlxyXG4gICAgICAgICkgOiBudWxsfVxyXG4gICAgICA8L1F1aXpDb250ZW50PlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInF1aXpfaW5wdXRfd3JhcHBlclwiPlxyXG4gICAgICAgIDxJbnB1dFxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwicXVpel9pbnB1dFwiXHJcbiAgICAgICAgICB2YWx1ZT17cXVpekFuc3dlcn1cclxuICAgICAgICAgIGRpc2FibGVkPXt2aWV3UXVpekFuc3dlciA/IHRydWUgOiBmYWxzZX1cclxuICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZVF1aXpBbnN3ZXJ9XHJcbiAgICAgICAgICBwbGFjZWhvbGRlcj1cIue/u+ios+OBl+OBpuOBj+OCjO+8gVwiXHJcbiAgICAgICAgICBib3JkZXJlZD17ZmFsc2V9XHJcbiAgICAgICAgICBvblByZXNzRW50ZXI9e29uQ2xpY2tRdWl6U3VibWl0fVxyXG4gICAgICAgIC8+XHJcbiAgICAgICAgPGE+XHJcbiAgICAgICAgICA8RW50ZXJPdXRsaW5lZFxyXG4gICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrUXVpelN1Ym1pdH1cclxuICAgICAgICAgICAgc3R5bGU9e3sgY29sb3I6IFwiI0NBQkZDQ1wiLCBmb250U2l6ZTogXCIxLjJyZW1cIiB9fVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICA8L2E+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9RdWl6V3JhcHBlcj5cclxuICApO1xyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG1lbW8oUXVpekZvcm1TbWFsbCk7XHJcbiJdfQ== */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nvar ContentTailAnswer = _styled(\"div\", true ? {\n  target: \"ec4d6x1\"\n} : {\n  target: \"ec4d6x1\",\n  label: \"ContentTailAnswer\"\n})(true ? {\n  name: \"1czc86s\",\n  styles: \"position:absolute;right:-0.32rem;transform:rotateZ(45deg);z-index:1;width:9px;height:9px;background-color:rgb(235, 235, 235);content:\\\"\\\";bottom:4.5rem\"\n} : {\n  name: \"1czc86s\",\n  styles: \"position:absolute;right:-0.32rem;transform:rotateZ(45deg);z-index:1;width:9px;height:9px;background-color:rgb(235, 235, 235);content:\\\"\\\";bottom:4.5rem\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENsYXNzXFxRdWl6Rm9ybVNtYWxsLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnRW9DIiwiZmlsZSI6IkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENsYXNzXFxRdWl6Rm9ybVNtYWxsLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIGpzeC1hMTF5L2FuY2hvci1pcy12YWxpZCAqL1xyXG5pbXBvcnQgeyBJbnB1dCwgbWVzc2FnZSB9IGZyb20gXCJhbnRkXCI7XHJcbmltcG9ydCBSZWFjdCwgeyBtZW1vLCB1c2VDYWxsYmFjaywgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgdXNlU2VsZWN0b3IgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XHJcbmltcG9ydCB7IEFycm93UmlnaHRPdXRsaW5lZCwgRW50ZXJPdXRsaW5lZCB9IGZyb20gXCJAYW50LWRlc2lnbi9pY29uc1wiO1xyXG5pbXBvcnQgeyBSb290U3RhdGUgfSBmcm9tIFwiLi4vLi4vLi4vQHJlZHVjZXJzXCI7XHJcbmltcG9ydCB1c2VJbnB1dCBmcm9tIFwiLi4vLi4vLi4vdXRpbC91c2VJbnB1dFwiO1xyXG5cclxuY29uc3QgUXVpeldyYXBwZXIgPSBzdHlsZWQuZGl2YFxyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0NzZweCkge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIC5xdWl6X2lucHV0X3dyYXBwZXIge1xyXG4gICAgICB3aWR0aDogOTMlO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgcmlnaHQ6IDUlO1xyXG4gICAgICBib3R0b206IDIuMyU7XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuaW50ZXJmYWNlIEtha2FvQ29udGVudFByb3BzIHtcclxuICB3aGl0ZVR5cGU6IEJvb2xlYW47XHJcbn1cclxuXHJcbmNvbnN0IEtha2FvQ29udGVudCA9IHN0eWxlZC5kaXY8S2FrYW9Db250ZW50UHJvcHM+YFxyXG4gIGZvbnQtc2l6ZTogMC45cmVtO1xyXG4gIHBhZGRpbmc6IDAuNXJlbTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyh7IHdoaXRlVHlwZSB9KSA9PiAod2hpdGVUeXBlID8gXCJyZ2IoMjM1LCAyMzUsIDIzNSlcIiA6IFwiI2ZmZTk0MVwiKX07XHJcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiA4MHB4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lO1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG4gICY6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG4gIGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAwLjVyZW07XHJcbiAgICBmb250LXNpemU6IDFyZW07XHJcbiAgICBwYWRkaW5nOiAwLjJyZW0gMC44cmVtO1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IENvbnRlbnRUYWlsUXVlc3Rpb24gPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBsZWZ0OiAtNXB4O1xyXG4gIHRyYW5zZm9ybTogcm90YXRlWig0NWRlZyk7XHJcbiAgdG9wOiAxMHB4O1xyXG4gIHdpZHRoOiA5cHg7XHJcbiAgaGVpZ2h0OiA5cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZTk0MTtcclxuICBjb250ZW50OiBcIlwiO1xyXG5gO1xyXG5jb25zdCBDb250ZW50VGFpbEFuc3dlciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHJpZ2h0OiAtMC4zMnJlbTtcclxuICB0cmFuc2Zvcm06IHJvdGF0ZVooNDVkZWcpO1xyXG4gIHotaW5kZXg6IDE7XHJcbiAgd2lkdGg6IDlweDtcclxuICBoZWlnaHQ6IDlweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM1LCAyMzUsIDIzNSk7XHJcbiAgY29udGVudDogXCJcIjtcclxuICBib3R0b206IDQuNXJlbTtcclxuYDtcclxuY29uc3QgUXVpekNvbnRlbnQgPSBzdHlsZWQuZGl2YFxyXG4gIHdpZHRoOiA3MCU7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMjglO1xyXG4gIGxlZnQ6IDIwJTtcclxuYDtcclxuXHJcbmNvbnN0IFF1aXpGb3JtU21hbGwgPSBtZW1vKCgpID0+IHtcclxuICBjb25zdCB7IHF1aXp6ZXMgfSA9IHVzZVNlbGVjdG9yKChzdGF0ZTogUm9vdFN0YXRlKSA9PiBzdGF0ZS5wb3N0KTtcclxuICBjb25zdCBbcXVpekFuc3dlciwgb25DaGFuZ2VRdWl6QW5zd2VyLCBzZXRRdWl6QW5zd2VyXSA9IHVzZUlucHV0KFwiXCIpO1xyXG4gIGNvbnN0IFt2aWV3UXVpekFuc3dlciwgc2V0Vmlld1F1aXpBbnN3ZXJdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IFtyYW5kb21RdWl6LCBzZXRSYW5kb21RdWl6XSA9IHVzZVN0YXRlKDApO1xyXG5cclxuICBjb25zdCBvbkNsaWNrTmV4dFF1aXogPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICBsZXQgbXlSYW5kTnVtID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcXVpenplcy5sZW5ndGgpO1xyXG4gICAgaWYgKG15UmFuZE51bSA9PT0gcmFuZG9tUXVpeikge1xyXG4gICAgICBpZiAobXlSYW5kTnVtID09PSBxdWl6emVzLmxlbmd0aCAtIDEpIHtcclxuICAgICAgICBzZXRSYW5kb21RdWl6KDApO1xyXG4gICAgICAgIHNldFZpZXdRdWl6QW5zd2VyKGZhbHNlKTtcclxuICAgICAgICBzZXRRdWl6QW5zd2VyKFwiXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBsZXQgbXlOZXdSYW5kTnVtID0gbXlSYW5kTnVtICsgMTtcclxuICAgICAgc2V0UmFuZG9tUXVpeihteU5ld1JhbmROdW0pO1xyXG4gICAgICBzZXRWaWV3UXVpekFuc3dlcihmYWxzZSk7XHJcbiAgICAgIHNldFF1aXpBbnN3ZXIoXCJcIik7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHNldFJhbmRvbVF1aXoobXlSYW5kTnVtKTtcclxuICAgIHNldFZpZXdRdWl6QW5zd2VyKGZhbHNlKTtcclxuICAgIHNldFF1aXpBbnN3ZXIoXCJcIik7XHJcbiAgfSwgW3F1aXp6ZXMubGVuZ3RoLCByYW5kb21RdWl6LCBzZXRRdWl6QW5zd2VyXSk7XHJcblxyXG4gIGNvbnN0IG9uQ2xpY2tRdWl6U3VibWl0ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgaWYgKHF1aXpBbnN3ZXIgPT09IFwiXCIpIHtcclxuICAgICAgbWVzc2FnZS5lcnJvcihcIuetlOOBiOOCkuabuOOBhOOBpuOBj+OBoOOBleOBhOOBre+8gVwiKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgc2V0Vmlld1F1aXpBbnN3ZXIodHJ1ZSk7XHJcbiAgfSwgW3F1aXpBbnN3ZXJdKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxRdWl6V3JhcHBlcj5cclxuICAgICAgPGltZyBhbHQ9XCJrYWthb19zbWFsbFwiIHNyYz1cIi9pbWFnZXMvYmxvZy9rYWthb19zbWFsbC5wbmdcIiBzdHlsZT17eyB3aWR0aDogXCIxMDAlXCIgfX0gLz5cclxuICAgICAgPFF1aXpDb250ZW50PlxyXG4gICAgICAgIDxDb250ZW50VGFpbFF1ZXN0aW9uIC8+XHJcbiAgICAgICAgPEtha2FvQ29udGVudCB3aGl0ZVR5cGU9e2ZhbHNlfT5cclxuICAgICAgICAgIHt2aWV3UXVpekFuc3dlciA/IHF1aXp6ZXNbcmFuZG9tUXVpel0/LmFuc3dlciA6IHF1aXp6ZXNbcmFuZG9tUXVpel0/LnF1ZXN0aW9ufVxyXG4gICAgICAgIDwvS2FrYW9Db250ZW50PlxyXG4gICAgICAgIHt2aWV3UXVpekFuc3dlciA/IChcclxuICAgICAgICAgIDw+XHJcbiAgICAgICAgICAgIDxDb250ZW50VGFpbEFuc3dlciAvPlxyXG4gICAgICAgICAgICA8S2FrYW9Db250ZW50IHdoaXRlVHlwZT17dHJ1ZX0+XHJcbiAgICAgICAgICAgICAg6LK05pa544Gu562U44GI77yae3F1aXpBbnN3ZXJ9XHJcbiAgICAgICAgICAgICAgPGJyIC8+XHJcbiAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJwdWJsaWNfYnRuXCIgb25DbGljaz17b25DbGlja05leHRRdWl6fT5cclxuICAgICAgICAgICAgICAgIOasoeOBruOCr+OCpOOCulxyXG4gICAgICAgICAgICAgICAgPEFycm93UmlnaHRPdXRsaW5lZCAvPlxyXG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8L0tha2FvQ29udGVudD5cclxuICAgICAgICAgIDwvPlxyXG4gICAgICAgICkgOiBudWxsfVxyXG4gICAgICA8L1F1aXpDb250ZW50PlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInF1aXpfaW5wdXRfd3JhcHBlclwiPlxyXG4gICAgICAgIDxJbnB1dFxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwicXVpel9pbnB1dFwiXHJcbiAgICAgICAgICB2YWx1ZT17cXVpekFuc3dlcn1cclxuICAgICAgICAgIGRpc2FibGVkPXt2aWV3UXVpekFuc3dlciA/IHRydWUgOiBmYWxzZX1cclxuICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZVF1aXpBbnN3ZXJ9XHJcbiAgICAgICAgICBwbGFjZWhvbGRlcj1cIue/u+ios+OBl+OBpuOBj+OCjO+8gVwiXHJcbiAgICAgICAgICBib3JkZXJlZD17ZmFsc2V9XHJcbiAgICAgICAgICBvblByZXNzRW50ZXI9e29uQ2xpY2tRdWl6U3VibWl0fVxyXG4gICAgICAgIC8+XHJcbiAgICAgICAgPGE+XHJcbiAgICAgICAgICA8RW50ZXJPdXRsaW5lZFxyXG4gICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrUXVpelN1Ym1pdH1cclxuICAgICAgICAgICAgc3R5bGU9e3sgY29sb3I6IFwiI0NBQkZDQ1wiLCBmb250U2l6ZTogXCIxLjJyZW1cIiB9fVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICA8L2E+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9RdWl6V3JhcHBlcj5cclxuICApO1xyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG1lbW8oUXVpekZvcm1TbWFsbCk7XHJcbiJdfQ== */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nvar QuizContent = _styled(\"div\", true ? {\n  target: \"ec4d6x0\"\n} : {\n  target: \"ec4d6x0\",\n  label: \"QuizContent\"\n})(true ? {\n  name: \"1tn98gd\",\n  styles: \"width:70%;position:absolute;top:28%;left:20%\"\n} : {\n  name: \"1tn98gd\",\n  styles: \"width:70%;position:absolute;top:28%;left:20%\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENsYXNzXFxRdWl6Rm9ybVNtYWxsLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyRThCIiwiZmlsZSI6IkM6XFxVc2Vyc1xcTm9haFxcRGVza3RvcFxcUHJvamVjdFxcTm9haHdvcmxkXFxjbGllbnRcXGNvbXBvbmVudHNcXEJsb2dcXENsYXNzXFxRdWl6Rm9ybVNtYWxsLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIGpzeC1hMTF5L2FuY2hvci1pcy12YWxpZCAqL1xyXG5pbXBvcnQgeyBJbnB1dCwgbWVzc2FnZSB9IGZyb20gXCJhbnRkXCI7XHJcbmltcG9ydCBSZWFjdCwgeyBtZW1vLCB1c2VDYWxsYmFjaywgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgdXNlU2VsZWN0b3IgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XHJcbmltcG9ydCB7IEFycm93UmlnaHRPdXRsaW5lZCwgRW50ZXJPdXRsaW5lZCB9IGZyb20gXCJAYW50LWRlc2lnbi9pY29uc1wiO1xyXG5pbXBvcnQgeyBSb290U3RhdGUgfSBmcm9tIFwiLi4vLi4vLi4vQHJlZHVjZXJzXCI7XHJcbmltcG9ydCB1c2VJbnB1dCBmcm9tIFwiLi4vLi4vLi4vdXRpbC91c2VJbnB1dFwiO1xyXG5cclxuY29uc3QgUXVpeldyYXBwZXIgPSBzdHlsZWQuZGl2YFxyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0NzZweCkge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIC5xdWl6X2lucHV0X3dyYXBwZXIge1xyXG4gICAgICB3aWR0aDogOTMlO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgcmlnaHQ6IDUlO1xyXG4gICAgICBib3R0b206IDIuMyU7XHJcbiAgICB9XHJcbiAgfVxyXG5gO1xyXG5cclxuaW50ZXJmYWNlIEtha2FvQ29udGVudFByb3BzIHtcclxuICB3aGl0ZVR5cGU6IEJvb2xlYW47XHJcbn1cclxuXHJcbmNvbnN0IEtha2FvQ29udGVudCA9IHN0eWxlZC5kaXY8S2FrYW9Db250ZW50UHJvcHM+YFxyXG4gIGZvbnQtc2l6ZTogMC45cmVtO1xyXG4gIHBhZGRpbmc6IDAuNXJlbTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyh7IHdoaXRlVHlwZSB9KSA9PiAod2hpdGVUeXBlID8gXCJyZ2IoMjM1LCAyMzUsIDIzNSlcIiA6IFwiI2ZmZTk0MVwiKX07XHJcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiA4MHB4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lO1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG4gICY6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG4gIGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAwLjVyZW07XHJcbiAgICBmb250LXNpemU6IDFyZW07XHJcbiAgICBwYWRkaW5nOiAwLjJyZW0gMC44cmVtO1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IENvbnRlbnRUYWlsUXVlc3Rpb24gPSBzdHlsZWQuZGl2YFxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBsZWZ0OiAtNXB4O1xyXG4gIHRyYW5zZm9ybTogcm90YXRlWig0NWRlZyk7XHJcbiAgdG9wOiAxMHB4O1xyXG4gIHdpZHRoOiA5cHg7XHJcbiAgaGVpZ2h0OiA5cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZTk0MTtcclxuICBjb250ZW50OiBcIlwiO1xyXG5gO1xyXG5jb25zdCBDb250ZW50VGFpbEFuc3dlciA9IHN0eWxlZC5kaXZgXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHJpZ2h0OiAtMC4zMnJlbTtcclxuICB0cmFuc2Zvcm06IHJvdGF0ZVooNDVkZWcpO1xyXG4gIHotaW5kZXg6IDE7XHJcbiAgd2lkdGg6IDlweDtcclxuICBoZWlnaHQ6IDlweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM1LCAyMzUsIDIzNSk7XHJcbiAgY29udGVudDogXCJcIjtcclxuICBib3R0b206IDQuNXJlbTtcclxuYDtcclxuY29uc3QgUXVpekNvbnRlbnQgPSBzdHlsZWQuZGl2YFxyXG4gIHdpZHRoOiA3MCU7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMjglO1xyXG4gIGxlZnQ6IDIwJTtcclxuYDtcclxuXHJcbmNvbnN0IFF1aXpGb3JtU21hbGwgPSBtZW1vKCgpID0+IHtcclxuICBjb25zdCB7IHF1aXp6ZXMgfSA9IHVzZVNlbGVjdG9yKChzdGF0ZTogUm9vdFN0YXRlKSA9PiBzdGF0ZS5wb3N0KTtcclxuICBjb25zdCBbcXVpekFuc3dlciwgb25DaGFuZ2VRdWl6QW5zd2VyLCBzZXRRdWl6QW5zd2VyXSA9IHVzZUlucHV0KFwiXCIpO1xyXG4gIGNvbnN0IFt2aWV3UXVpekFuc3dlciwgc2V0Vmlld1F1aXpBbnN3ZXJdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IFtyYW5kb21RdWl6LCBzZXRSYW5kb21RdWl6XSA9IHVzZVN0YXRlKDApO1xyXG5cclxuICBjb25zdCBvbkNsaWNrTmV4dFF1aXogPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICBsZXQgbXlSYW5kTnVtID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcXVpenplcy5sZW5ndGgpO1xyXG4gICAgaWYgKG15UmFuZE51bSA9PT0gcmFuZG9tUXVpeikge1xyXG4gICAgICBpZiAobXlSYW5kTnVtID09PSBxdWl6emVzLmxlbmd0aCAtIDEpIHtcclxuICAgICAgICBzZXRSYW5kb21RdWl6KDApO1xyXG4gICAgICAgIHNldFZpZXdRdWl6QW5zd2VyKGZhbHNlKTtcclxuICAgICAgICBzZXRRdWl6QW5zd2VyKFwiXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBsZXQgbXlOZXdSYW5kTnVtID0gbXlSYW5kTnVtICsgMTtcclxuICAgICAgc2V0UmFuZG9tUXVpeihteU5ld1JhbmROdW0pO1xyXG4gICAgICBzZXRWaWV3UXVpekFuc3dlcihmYWxzZSk7XHJcbiAgICAgIHNldFF1aXpBbnN3ZXIoXCJcIik7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHNldFJhbmRvbVF1aXoobXlSYW5kTnVtKTtcclxuICAgIHNldFZpZXdRdWl6QW5zd2VyKGZhbHNlKTtcclxuICAgIHNldFF1aXpBbnN3ZXIoXCJcIik7XHJcbiAgfSwgW3F1aXp6ZXMubGVuZ3RoLCByYW5kb21RdWl6LCBzZXRRdWl6QW5zd2VyXSk7XHJcblxyXG4gIGNvbnN0IG9uQ2xpY2tRdWl6U3VibWl0ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgaWYgKHF1aXpBbnN3ZXIgPT09IFwiXCIpIHtcclxuICAgICAgbWVzc2FnZS5lcnJvcihcIuetlOOBiOOCkuabuOOBhOOBpuOBj+OBoOOBleOBhOOBre+8gVwiKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgc2V0Vmlld1F1aXpBbnN3ZXIodHJ1ZSk7XHJcbiAgfSwgW3F1aXpBbnN3ZXJdKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxRdWl6V3JhcHBlcj5cclxuICAgICAgPGltZyBhbHQ9XCJrYWthb19zbWFsbFwiIHNyYz1cIi9pbWFnZXMvYmxvZy9rYWthb19zbWFsbC5wbmdcIiBzdHlsZT17eyB3aWR0aDogXCIxMDAlXCIgfX0gLz5cclxuICAgICAgPFF1aXpDb250ZW50PlxyXG4gICAgICAgIDxDb250ZW50VGFpbFF1ZXN0aW9uIC8+XHJcbiAgICAgICAgPEtha2FvQ29udGVudCB3aGl0ZVR5cGU9e2ZhbHNlfT5cclxuICAgICAgICAgIHt2aWV3UXVpekFuc3dlciA/IHF1aXp6ZXNbcmFuZG9tUXVpel0/LmFuc3dlciA6IHF1aXp6ZXNbcmFuZG9tUXVpel0/LnF1ZXN0aW9ufVxyXG4gICAgICAgIDwvS2FrYW9Db250ZW50PlxyXG4gICAgICAgIHt2aWV3UXVpekFuc3dlciA/IChcclxuICAgICAgICAgIDw+XHJcbiAgICAgICAgICAgIDxDb250ZW50VGFpbEFuc3dlciAvPlxyXG4gICAgICAgICAgICA8S2FrYW9Db250ZW50IHdoaXRlVHlwZT17dHJ1ZX0+XHJcbiAgICAgICAgICAgICAg6LK05pa544Gu562U44GI77yae3F1aXpBbnN3ZXJ9XHJcbiAgICAgICAgICAgICAgPGJyIC8+XHJcbiAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJwdWJsaWNfYnRuXCIgb25DbGljaz17b25DbGlja05leHRRdWl6fT5cclxuICAgICAgICAgICAgICAgIOasoeOBruOCr+OCpOOCulxyXG4gICAgICAgICAgICAgICAgPEFycm93UmlnaHRPdXRsaW5lZCAvPlxyXG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8L0tha2FvQ29udGVudD5cclxuICAgICAgICAgIDwvPlxyXG4gICAgICAgICkgOiBudWxsfVxyXG4gICAgICA8L1F1aXpDb250ZW50PlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInF1aXpfaW5wdXRfd3JhcHBlclwiPlxyXG4gICAgICAgIDxJbnB1dFxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwicXVpel9pbnB1dFwiXHJcbiAgICAgICAgICB2YWx1ZT17cXVpekFuc3dlcn1cclxuICAgICAgICAgIGRpc2FibGVkPXt2aWV3UXVpekFuc3dlciA/IHRydWUgOiBmYWxzZX1cclxuICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZVF1aXpBbnN3ZXJ9XHJcbiAgICAgICAgICBwbGFjZWhvbGRlcj1cIue/u+ios+OBl+OBpuOBj+OCjO+8gVwiXHJcbiAgICAgICAgICBib3JkZXJlZD17ZmFsc2V9XHJcbiAgICAgICAgICBvblByZXNzRW50ZXI9e29uQ2xpY2tRdWl6U3VibWl0fVxyXG4gICAgICAgIC8+XHJcbiAgICAgICAgPGE+XHJcbiAgICAgICAgICA8RW50ZXJPdXRsaW5lZFxyXG4gICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrUXVpelN1Ym1pdH1cclxuICAgICAgICAgICAgc3R5bGU9e3sgY29sb3I6IFwiI0NBQkZDQ1wiLCBmb250U2l6ZTogXCIxLjJyZW1cIiB9fVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICA8L2E+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9RdWl6V3JhcHBlcj5cclxuICApO1xyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG1lbW8oUXVpekZvcm1TbWFsbCk7XHJcbiJdfQ== */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nvar QuizFormSmall = /*#__PURE__*/memo(function () {\n  var _quizzes$randomQuiz, _quizzes$randomQuiz2;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      quizzes = _useSelector.quizzes;\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      quizAnswer = _useInput2[0],\n      onChangeQuizAnswer = _useInput2[1],\n      setQuizAnswer = _useInput2[2];\n\n  var _useState = useState(false),\n      viewQuizAnswer = _useState[0],\n      setViewQuizAnswer = _useState[1];\n\n  var _useState2 = useState(0),\n      randomQuiz = _useState2[0],\n      setRandomQuiz = _useState2[1];\n\n  var onClickNextQuiz = useCallback(function () {\n    var myRandNum = Math.floor(Math.random() * quizzes.length);\n\n    if (myRandNum === randomQuiz) {\n      if (myRandNum === quizzes.length - 1) {\n        setRandomQuiz(0);\n        setViewQuizAnswer(false);\n        setQuizAnswer(\"\");\n        return;\n      }\n\n      var myNewRandNum = myRandNum + 1;\n      setRandomQuiz(myNewRandNum);\n      setViewQuizAnswer(false);\n      setQuizAnswer(\"\");\n      return;\n    }\n\n    setRandomQuiz(myRandNum);\n    setViewQuizAnswer(false);\n    setQuizAnswer(\"\");\n  }, [quizzes.length, randomQuiz, setQuizAnswer]);\n  var onClickQuizSubmit = useCallback(function () {\n    if (quizAnswer === \"\") {\n      message.error(\"答えを書いてくださいね！\");\n      return;\n    }\n\n    setViewQuizAnswer(true);\n  }, [quizAnswer]);\n  return ___EmotionJSX(QuizWrapper, null, ___EmotionJSX(\"img\", {\n    alt: \"kakao_small\",\n    src: \"/images/blog/kakao_small.png\",\n    style: {\n      width: \"100%\"\n    }\n  }), ___EmotionJSX(QuizContent, null, ___EmotionJSX(ContentTailQuestion, null), ___EmotionJSX(KakaoContent, {\n    whiteType: false\n  }, viewQuizAnswer ? (_quizzes$randomQuiz = quizzes[randomQuiz]) === null || _quizzes$randomQuiz === void 0 ? void 0 : _quizzes$randomQuiz.answer : (_quizzes$randomQuiz2 = quizzes[randomQuiz]) === null || _quizzes$randomQuiz2 === void 0 ? void 0 : _quizzes$randomQuiz2.question), viewQuizAnswer ? ___EmotionJSX(React.Fragment, null, ___EmotionJSX(ContentTailAnswer, null), ___EmotionJSX(KakaoContent, {\n    whiteType: true\n  }, \"\\u8CB4\\u65B9\\u306E\\u7B54\\u3048\\uFF1A\", quizAnswer, ___EmotionJSX(\"br\", null), ___EmotionJSX(\"button\", {\n    className: \"public_btn\",\n    onClick: onClickNextQuiz\n  }, \"\\u6B21\\u306E\\u30AF\\u30A4\\u30BA\", ___EmotionJSX(ArrowRightOutlined, null)))) : null), ___EmotionJSX(\"div\", {\n    className: \"quiz_input_wrapper\"\n  }, ___EmotionJSX(Input, {\n    className: \"quiz_input\",\n    value: quizAnswer,\n    disabled: viewQuizAnswer ? true : false,\n    onChange: onChangeQuizAnswer,\n    placeholder: \"\\u7FFB\\u8A33\\u3057\\u3066\\u304F\\u308C\\uFF01\",\n    bordered: false,\n    onPressEnter: onClickQuizSubmit\n  }), ___EmotionJSX(\"a\", null, ___EmotionJSX(EnterOutlined, {\n    onClick: onClickQuizSubmit,\n    style: {\n      color: \"#CABFCC\",\n      fontSize: \"1.2rem\"\n    }\n  }))));\n});\nexport default /*#__PURE__*/memo(QuizFormSmall);","map":{"version":3,"sources":["C:/Users/Noah/Desktop/Project/Noahworld/client/components/Blog/Class/QuizFormSmall.tsx"],"names":["Input","message","React","memo","useCallback","useState","useSelector","ArrowRightOutlined","EnterOutlined","useInput","QuizWrapper","KakaoContent","whiteType","ContentTailQuestion","ContentTailAnswer","QuizContent","QuizFormSmall","state","post","quizzes","quizAnswer","onChangeQuizAnswer","setQuizAnswer","viewQuizAnswer","setViewQuizAnswer","randomQuiz","setRandomQuiz","onClickNextQuiz","myRandNum","Math","floor","random","length","myNewRandNum","onClickQuizSubmit","error","width","answer","question","color","fontSize"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { Input, message } from \"antd\";\r\nimport React, { memo, useCallback, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"@emotion/styled\";\r\nimport { ArrowRightOutlined, EnterOutlined } from \"@ant-design/icons\";\r\nimport { RootState } from \"../../../@reducers\";\r\nimport useInput from \"../../../util/useInput\";\r\n\r\nconst QuizWrapper = styled.div`\r\n  display: none;\r\n  @media only screen and (max-width: 476px) {\r\n    display: block;\r\n    width: 100%;\r\n    position: relative;\r\n    .quiz_input_wrapper {\r\n      width: 93%;\r\n      position: absolute;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      right: 5%;\r\n      bottom: 2.3%;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface KakaoContentProps {\r\n  whiteType: Boolean;\r\n}\r\n\r\nconst KakaoContent = styled.div<KakaoContentProps>`\r\n  font-size: 0.9rem;\r\n  padding: 0.5rem;\r\n  background-color: ${({ whiteType }) => (whiteType ? \"rgb(235, 235, 235)\" : \"#ffe941\")};\r\n  border-radius: 3px;\r\n  margin-bottom: 1rem;\r\n  width: 100%;\r\n  height: 80px;\r\n  position: relative;\r\n  word-break: break-all;\r\n  -ms-overflow-style: none;\r\n  overflow: auto;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  button {\r\n    margin-top: 0.5rem;\r\n    font-size: 1rem;\r\n    padding: 0.2rem 0.8rem;\r\n    float: right;\r\n  }\r\n`;\r\n\r\nconst ContentTailQuestion = styled.div`\r\n  position: absolute;\r\n  left: -5px;\r\n  transform: rotateZ(45deg);\r\n  top: 10px;\r\n  width: 9px;\r\n  height: 9px;\r\n  background-color: #ffe941;\r\n  content: \"\";\r\n`;\r\nconst ContentTailAnswer = styled.div`\r\n  position: absolute;\r\n  right: -0.32rem;\r\n  transform: rotateZ(45deg);\r\n  z-index: 1;\r\n  width: 9px;\r\n  height: 9px;\r\n  background-color: rgb(235, 235, 235);\r\n  content: \"\";\r\n  bottom: 4.5rem;\r\n`;\r\nconst QuizContent = styled.div`\r\n  width: 70%;\r\n  position: absolute;\r\n  top: 28%;\r\n  left: 20%;\r\n`;\r\n\r\nconst QuizFormSmall = memo(() => {\r\n  const { quizzes } = useSelector((state: RootState) => state.post);\r\n  const [quizAnswer, onChangeQuizAnswer, setQuizAnswer] = useInput(\"\");\r\n  const [viewQuizAnswer, setViewQuizAnswer] = useState(false);\r\n  const [randomQuiz, setRandomQuiz] = useState(0);\r\n\r\n  const onClickNextQuiz = useCallback(() => {\r\n    let myRandNum = Math.floor(Math.random() * quizzes.length);\r\n    if (myRandNum === randomQuiz) {\r\n      if (myRandNum === quizzes.length - 1) {\r\n        setRandomQuiz(0);\r\n        setViewQuizAnswer(false);\r\n        setQuizAnswer(\"\");\r\n        return;\r\n      }\r\n      let myNewRandNum = myRandNum + 1;\r\n      setRandomQuiz(myNewRandNum);\r\n      setViewQuizAnswer(false);\r\n      setQuizAnswer(\"\");\r\n      return;\r\n    }\r\n    setRandomQuiz(myRandNum);\r\n    setViewQuizAnswer(false);\r\n    setQuizAnswer(\"\");\r\n  }, [quizzes.length, randomQuiz, setQuizAnswer]);\r\n\r\n  const onClickQuizSubmit = useCallback(() => {\r\n    if (quizAnswer === \"\") {\r\n      message.error(\"答えを書いてくださいね！\");\r\n      return;\r\n    }\r\n    setViewQuizAnswer(true);\r\n  }, [quizAnswer]);\r\n\r\n  return (\r\n    <QuizWrapper>\r\n      <img alt=\"kakao_small\" src=\"/images/blog/kakao_small.png\" style={{ width: \"100%\" }} />\r\n      <QuizContent>\r\n        <ContentTailQuestion />\r\n        <KakaoContent whiteType={false}>\r\n          {viewQuizAnswer ? quizzes[randomQuiz]?.answer : quizzes[randomQuiz]?.question}\r\n        </KakaoContent>\r\n        {viewQuizAnswer ? (\r\n          <>\r\n            <ContentTailAnswer />\r\n            <KakaoContent whiteType={true}>\r\n              貴方の答え：{quizAnswer}\r\n              <br />\r\n              <button className=\"public_btn\" onClick={onClickNextQuiz}>\r\n                次のクイズ\r\n                <ArrowRightOutlined />\r\n              </button>\r\n            </KakaoContent>\r\n          </>\r\n        ) : null}\r\n      </QuizContent>\r\n      <div className=\"quiz_input_wrapper\">\r\n        <Input\r\n          className=\"quiz_input\"\r\n          value={quizAnswer}\r\n          disabled={viewQuizAnswer ? true : false}\r\n          onChange={onChangeQuizAnswer}\r\n          placeholder=\"翻訳してくれ！\"\r\n          bordered={false}\r\n          onPressEnter={onClickQuizSubmit}\r\n        />\r\n        <a>\r\n          <EnterOutlined\r\n            onClick={onClickQuizSubmit}\r\n            style={{ color: \"#CABFCC\", fontSize: \"1.2rem\" }}\r\n          />\r\n        </a>\r\n      </div>\r\n    </QuizWrapper>\r\n  );\r\n});\r\n\r\nexport default memo(QuizFormSmall);\r\n"]},"metadata":{},"sourceType":"module"}